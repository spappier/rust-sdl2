var searchIndex = {};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style bitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["c_vec"] = {"doc":"Library to interface with chunks of memory allocated in C.","items":[[3,"CVec","c_vec","The type representing a foreign chunk of memory",null,null],[3,"CSlice","","The type representing an 'unsafe' foreign chunk of memory",null,null],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a `CVec` from a raw pointer to a buffer with a given length.",0,null],[11,"new_with_dtor","","Create a `CVec` from a foreign buffer, with a given length, and a function to run upon destruction.",0,null],[11,"get","","Retrieves an element at a given index, returning `None` if the requested index is greater than the length of the vector.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves a mutable element at a given index, returning `None` if the requested index is greater than the length of the vector.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_inner","","Unwrap the pointer without running the destructor",0,null],[11,"len","","Returns the number of items in this vector.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether this vector is empty.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_cslice","","Convert to CSlice",0,{"inputs":[{"name":"self"}],"output":{"name":"cslice"}}],[11,"as_ref","","View the stored data as a slice.",0,null],[11,"as_mut","","View the stored data as a slice.",0,null],[11,"new","","Create a `CSlice` from a raw pointer to a buffer with a given length.",1,null],[11,"get","","Retrieves an element at a given index, returning `None` if the requested index is greater than the length of the vector.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves a mutable element at a given index, returning `None` if the requested index is greater than the length of the vector.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"len","","Returns the number of items in this vector.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether this vector is empty.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ref","","View the stored data as a slice.",1,null],[11,"as_mut","","View the stored data as a slice.",1,null],[11,"index","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}]],"paths":[[3,"CVec"],[3,"CSlice"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"inputs":[{"name":"t"}],"output":null}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",16,null],[12,"sa_data","","",16,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",17,null],[12,"sin_port","","",17,null],[12,"sin_addr","","",17,null],[12,"sin_zero","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",19,null],[12,"sun_path","","",19,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",20,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",21,null],[12,"ai_family","","",21,null],[12,"ai_socktype","","",21,null],[12,"ai_protocol","","",21,null],[12,"ai_addrlen","","",21,null],[12,"ai_addr","","",21,null],[12,"ai_canonname","","",21,null],[12,"ai_next","","",21,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",22,null],[12,"nl_pid","","",22,null],[12,"nl_groups","","",22,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",23,null],[12,"sll_protocol","","",23,null],[12,"sll_ifindex","","",23,null],[12,"sll_hatype","","",23,null],[12,"sll_pkttype","","",23,null],[12,"sll_halen","","",23,null],[12,"sll_addr","","",23,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",24,null],[12,"tm_min","","",24,null],[12,"tm_hour","","",24,null],[12,"tm_mday","","",24,null],[12,"tm_mon","","",24,null],[12,"tm_year","","",24,null],[12,"tm_wday","","",24,null],[12,"tm_yday","","",24,null],[12,"tm_isdst","","",24,null],[12,"tm_gmtoff","","",24,null],[12,"tm_zone","","",24,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",25,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",26,null],[12,"dli_fbase","","",26,null],[12,"dli_sname","","",26,null],[12,"dli_saddr","","",26,null],[3,"epoll_event","","",null,null],[12,"events","","",27,null],[12,"u64","","",27,null],[3,"utsname","","",null,null],[12,"sysname","","",28,null],[12,"nodename","","",28,null],[12,"release","","",28,null],[12,"version","","",28,null],[12,"machine","","",28,null],[12,"domainname","","",28,null],[3,"lconv","","",null,null],[12,"decimal_point","","",29,null],[12,"thousands_sep","","",29,null],[12,"grouping","","",29,null],[12,"int_curr_symbol","","",29,null],[12,"currency_symbol","","",29,null],[12,"mon_decimal_point","","",29,null],[12,"mon_thousands_sep","","",29,null],[12,"mon_grouping","","",29,null],[12,"positive_sign","","",29,null],[12,"negative_sign","","",29,null],[12,"int_frac_digits","","",29,null],[12,"frac_digits","","",29,null],[12,"p_cs_precedes","","",29,null],[12,"p_sep_by_space","","",29,null],[12,"n_cs_precedes","","",29,null],[12,"n_sep_by_space","","",29,null],[12,"p_sign_posn","","",29,null],[12,"n_sign_posn","","",29,null],[12,"int_p_cs_precedes","","",29,null],[12,"int_p_sep_by_space","","",29,null],[12,"int_n_cs_precedes","","",29,null],[12,"int_n_sep_by_space","","",29,null],[12,"int_p_sign_posn","","",29,null],[12,"int_n_sign_posn","","",29,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",30,null],[12,"sigev_signo","","",30,null],[12,"sigev_notify","","",30,null],[12,"sigev_notify_thread_id","","",30,null],[3,"dirent","","",null,null],[12,"d_ino","","",31,null],[12,"d_off","","",31,null],[12,"d_reclen","","",31,null],[12,"d_type","","",31,null],[12,"d_name","","",31,null],[3,"dirent64","","",null,null],[12,"d_ino","","",32,null],[12,"d_off","","",32,null],[12,"d_reclen","","",32,null],[12,"d_type","","",32,null],[12,"d_name","","",32,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",33,null],[12,"rlim_max","","",33,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",34,null],[12,"gl_pathv","","",34,null],[12,"gl_offs","","",34,null],[12,"gl_flags","","",34,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",35,null],[12,"ifa_name","","",35,null],[12,"ifa_flags","","",35,null],[12,"ifa_addr","","",35,null],[12,"ifa_netmask","","",35,null],[12,"ifa_ifu","","",35,null],[12,"ifa_data","","",35,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",36,null],[12,"pw_passwd","","",36,null],[12,"pw_uid","","",36,null],[12,"pw_gid","","",36,null],[12,"pw_gecos","","",36,null],[12,"pw_dir","","",36,null],[12,"pw_shell","","",36,null],[3,"spwd","","",null,null],[12,"sp_namp","","",37,null],[12,"sp_pwdp","","",37,null],[12,"sp_lstchg","","",37,null],[12,"sp_min","","",37,null],[12,"sp_max","","",37,null],[12,"sp_warn","","",37,null],[12,"sp_inact","","",37,null],[12,"sp_expire","","",37,null],[12,"sp_flag","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",39,null],[12,"dqb_bsoftlimit","","",39,null],[12,"dqb_curspace","","",39,null],[12,"dqb_ihardlimit","","",39,null],[12,"dqb_isoftlimit","","",39,null],[12,"dqb_curinodes","","",39,null],[12,"dqb_btime","","",39,null],[12,"dqb_itime","","",39,null],[12,"dqb_valid","","",39,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",40,null],[12,"ssi_errno","","",40,null],[12,"ssi_code","","",40,null],[12,"ssi_pid","","",40,null],[12,"ssi_uid","","",40,null],[12,"ssi_fd","","",40,null],[12,"ssi_tid","","",40,null],[12,"ssi_band","","",40,null],[12,"ssi_overrun","","",40,null],[12,"ssi_trapno","","",40,null],[12,"ssi_status","","",40,null],[12,"ssi_int","","",40,null],[12,"ssi_ptr","","",40,null],[12,"ssi_utime","","",40,null],[12,"ssi_stime","","",40,null],[12,"ssi_addr","","",40,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",41,null],[12,"mq_maxmsg","","",41,null],[12,"mq_msgsize","","",41,null],[12,"mq_curmsgs","","",41,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",42,null],[12,"if_name","","",42,null],[3,"msginfo","","",null,null],[12,"msgpool","","",43,null],[12,"msgmap","","",43,null],[12,"msgmax","","",43,null],[12,"msgmnb","","",43,null],[12,"msgmni","","",43,null],[12,"msgssz","","",43,null],[12,"msgtql","","",43,null],[12,"msgseg","","",43,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",44,null],[12,"aio_lio_opcode","","",44,null],[12,"aio_reqprio","","",44,null],[12,"aio_buf","","",44,null],[12,"aio_nbytes","","",44,null],[12,"aio_sigevent","","",44,null],[12,"aio_offset","","",44,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",45,null],[12,"e_exit","","",45,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",46,null],[12,"tv_usec","","",46,null],[3,"utmpx","","",null,null],[12,"ut_type","","",47,null],[12,"ut_pid","","",47,null],[12,"ut_line","","",47,null],[12,"ut_id","","",47,null],[12,"ut_user","","",47,null],[12,"ut_host","","",47,null],[12,"ut_exit","","",47,null],[12,"ut_session","","",47,null],[12,"ut_tv","","",47,null],[12,"ut_addr_v6","","",47,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",48,null],[12,"sa_mask","","",48,null],[12,"sa_flags","","",48,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",49,null],[12,"ss_flags","","",49,null],[12,"ss_size","","",49,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",50,null],[12,"si_errno","","",50,null],[12,"si_code","","",50,null],[12,"_pad","","",50,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",51,null],[12,"gl_pathv","","",51,null],[12,"gl_offs","","",51,null],[12,"gl_flags","","",51,null],[3,"ucred","","",null,null],[12,"pid","","",52,null],[12,"uid","","",52,null],[12,"gid","","",52,null],[3,"statfs","","",null,null],[12,"f_type","","",53,null],[12,"f_bsize","","",53,null],[12,"f_blocks","","",53,null],[12,"f_bfree","","",53,null],[12,"f_bavail","","",53,null],[12,"f_files","","",53,null],[12,"f_ffree","","",53,null],[12,"f_fsid","","",53,null],[12,"f_namelen","","",53,null],[12,"f_frsize","","",53,null],[3,"msghdr","","",null,null],[12,"msg_name","","",54,null],[12,"msg_namelen","","",54,null],[12,"msg_iov","","",54,null],[12,"msg_iovlen","","",54,null],[12,"msg_control","","",54,null],[12,"msg_controllen","","",54,null],[12,"msg_flags","","",54,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",55,null],[12,"cmsg_level","","",55,null],[12,"cmsg_type","","",55,null],[3,"termios","","",null,null],[12,"c_iflag","","",56,null],[12,"c_oflag","","",56,null],[12,"c_cflag","","",56,null],[12,"c_lflag","","",56,null],[12,"c_line","","",56,null],[12,"c_cc","","",56,null],[12,"c_ispeed","","",56,null],[12,"c_ospeed","","",56,null],[3,"flock","","",null,null],[12,"l_type","","",57,null],[12,"l_whence","","",57,null],[12,"l_start","","",57,null],[12,"l_len","","",57,null],[12,"l_pid","","",57,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",58,null],[12,"loads","","",58,null],[12,"totalram","","",58,null],[12,"freeram","","",58,null],[12,"sharedram","","",58,null],[12,"bufferram","","",58,null],[12,"totalswap","","",58,null],[12,"freeswap","","",58,null],[12,"procs","","",58,null],[12,"pad","","",58,null],[12,"totalhigh","","",58,null],[12,"freehigh","","",58,null],[12,"mem_unit","","",58,null],[12,"_f","","",58,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",59,null],[12,"msg_stime","","",59,null],[12,"msg_rtime","","",59,null],[12,"msg_ctime","","",59,null],[12,"msg_qnum","","",59,null],[12,"msg_qbytes","","",59,null],[12,"msg_lspid","","",59,null],[12,"msg_lrpid","","",59,null],[3,"stat","","",null,null],[12,"st_dev","","",60,null],[12,"st_ino","","",60,null],[12,"st_nlink","","",60,null],[12,"st_mode","","",60,null],[12,"st_uid","","",60,null],[12,"st_gid","","",60,null],[12,"st_rdev","","",60,null],[12,"st_size","","",60,null],[12,"st_blksize","","",60,null],[12,"st_blocks","","",60,null],[12,"st_atime","","",60,null],[12,"st_atime_nsec","","",60,null],[12,"st_mtime","","",60,null],[12,"st_mtime_nsec","","",60,null],[12,"st_ctime","","",60,null],[12,"st_ctime_nsec","","",60,null],[3,"stat64","","",null,null],[12,"st_dev","","",61,null],[12,"st_ino","","",61,null],[12,"st_nlink","","",61,null],[12,"st_mode","","",61,null],[12,"st_uid","","",61,null],[12,"st_gid","","",61,null],[12,"st_rdev","","",61,null],[12,"st_size","","",61,null],[12,"st_blksize","","",61,null],[12,"st_blocks","","",61,null],[12,"st_atime","","",61,null],[12,"st_atime_nsec","","",61,null],[12,"st_mtime","","",61,null],[12,"st_mtime_nsec","","",61,null],[12,"st_ctime","","",61,null],[12,"st_ctime_nsec","","",61,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",62,null],[12,"exponent","","",62,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",63,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",64,null],[12,"swd","","",64,null],[12,"ftw","","",64,null],[12,"fop","","",64,null],[12,"rip","","",64,null],[12,"rdp","","",64,null],[12,"mxcsr","","",64,null],[12,"mxcr_mask","","",64,null],[12,"_st","","",64,null],[12,"_xmm","","",64,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",65,null],[12,"fpregs","","",65,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",66,null],[12,"uc_link","","",66,null],[12,"uc_stack","","",66,null],[12,"uc_mcontext","","",66,null],[12,"uc_sigmask","","",66,null],[3,"ipc_perm","","",null,null],[12,"__key","","",67,null],[12,"uid","","",67,null],[12,"gid","","",67,null],[12,"cuid","","",67,null],[12,"cgid","","",67,null],[12,"mode","","",67,null],[12,"__seq","","",67,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",68,null],[12,"shm_segsz","","",68,null],[12,"shm_atime","","",68,null],[12,"shm_dtime","","",68,null],[12,"shm_ctime","","",68,null],[12,"shm_cpid","","",68,null],[12,"shm_lpid","","",68,null],[12,"shm_nattch","","",68,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_settime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"initgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",1,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `Float::infinity()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `Float::neg_infinity()`.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",12,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",12,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",null,null],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"binomial","","Calculate the binomial coefficient.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"multinomial","","Calculate the multinomial coefficient.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,null],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",1,{"inputs":[{"name":"t"}],"output":{"name":"iterbinomial"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rangestep"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",4,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",5,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",6,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",7,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",8,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",9,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",10,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",11,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",13,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",14,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",14,{"inputs":[{"name":"self"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `Float::infinity()`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `Float::neg_infinity()`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error. This produces a more accurate result with better performance than a separate multiplication operation followed by an add.",14,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_degrees","","Converts radians to degrees.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"to_radians","","Converts degrees to radians.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",14,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",14,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`. The floating point encoding is documented in the [Reference][floating-point].",14,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",15,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",15,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",15,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, the `None` is returned.",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",18,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",20,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",20,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number generator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the open interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the closed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current platform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the `Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample uniformly between two values. This should not be used directly, and is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range` requires. This should not ever be called directly, only via `Range::new`, which will check that `low < high`, so this function doesn't have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as a source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from `[low, high)`. Panics if `low >= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",7,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers (a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"standardnormal"}}],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",10,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"exp1"}}],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",13,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",14,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",16,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",17,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit variant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can be any length, although the maximum number of elements used is 256 and any more will be silently ignored. A generator constructed with a given seed will generate the same sequence of values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a user-provided value. This permits jumping arbitrarily ahead (or backwards) in the pseudorandom stream.",20,{"inputs":[{"name":"self"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a variable-length u32 array. Only up to 8 words are used; if less than 8 words are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it generates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it has generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by replacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been generated exceed the threshold.",21,{"inputs":[{"name":"self"}],"output":null}],[11,"next_u32","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and seed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",23,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number generators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from the operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will work best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",27,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open interval `[0, 1)`.",27,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",27,{"inputs":[{"name":"self"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,{"inputs":[{"name":"self"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce the same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,{"inputs":[{"name":"self"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["sdl2"] = {"doc":"","items":[[3,"Sdl","sdl2","The SDL context type. Initialize with `sdl2::init()`.",null,null],[3,"AudioSubsystem","","",null,null],[3,"GameControllerSubsystem","","",null,null],[3,"HapticSubsystem","","",null,null],[3,"JoystickSubsystem","","",null,null],[3,"VideoSubsystem","","",null,null],[3,"TimerSubsystem","","",null,null],[3,"EventSubsystem","","",null,null],[3,"EventPump","","A thread-safe type that encapsulates SDL event-pumping functions.",null,null],[4,"Error","","",null,null],[13,"NoMemError","","",0,null],[13,"ReadError","","",0,null],[13,"WriteError","","",0,null],[13,"SeekError","","",0,null],[13,"UnsupportedError","","",0,null],[4,"IntegerOrSdlError","","A given integer was so big that its representation as a C integer would be negative.",null,null],[13,"IntegerOverflows","","",1,null],[13,"SdlError","","",1,null],[5,"init","","Initializes the SDL library. This must be called before using any other SDL function.",null,{"inputs":[],"output":{"name":"result"}}],[5,"get_error","","",null,{"inputs":[],"output":{"name":"string"}}],[5,"set_error","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"set_error_from_code","","",null,{"inputs":[{"name":"error"}],"output":null}],[5,"clear_error","","",null,{"inputs":[],"output":null}],[0,"clipboard","","",null,null],[3,"ClipboardUtil","sdl2::clipboard","Clipboard utility functions. Access with `VideoSubsystem::clipboard()`.",null,null],[11,"clipboard","sdl2","",2,{"inputs":[{"name":"self"}],"output":{"name":"clipboardutil"}}],[11,"set_clipboard_text","sdl2::clipboard","",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"clipboard_text","","",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"has_clipboard_text","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"cpuinfo","sdl2","",null,null],[5,"cpu_count","sdl2::cpuinfo","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"cpu_cache_line_size","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"has_rdtsc","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_alti_vec","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_mmx","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_3d_now","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse2","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse3","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse41","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse42","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_avx","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"system_ram","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"CACHELINESIZE","","",null,null],[0,"event","sdl2","Event Handling",null,null],[3,"EventPollIterator","sdl2::event","An iterator that calls `EventPump::poll_event()`.",null,null],[3,"EventWaitIterator","","An iterator that calls `EventPump::wait_event()`.",null,null],[3,"EventWaitTimeoutIterator","","An iterator that calls `EventPump::wait_event_timeout()`.",null,null],[4,"EventType","","Types of events that can be delivered.",null,null],[13,"First","","",4,null],[13,"Quit","","",4,null],[13,"AppTerminating","","",4,null],[13,"AppLowMemory","","",4,null],[13,"AppWillEnterBackground","","",4,null],[13,"AppDidEnterBackground","","",4,null],[13,"AppWillEnterForeground","","",4,null],[13,"AppDidEnterForeground","","",4,null],[13,"Window","","",4,null],[13,"KeyDown","","",4,null],[13,"KeyUp","","",4,null],[13,"TextEditing","","",4,null],[13,"TextInput","","",4,null],[13,"MouseMotion","","",4,null],[13,"MouseButtonDown","","",4,null],[13,"MouseButtonUp","","",4,null],[13,"MouseWheel","","",4,null],[13,"JoyAxisMotion","","",4,null],[13,"JoyBallMotion","","",4,null],[13,"JoyHatMotion","","",4,null],[13,"JoyButtonDown","","",4,null],[13,"JoyButtonUp","","",4,null],[13,"JoyDeviceAdded","","",4,null],[13,"JoyDeviceRemoved","","",4,null],[13,"ControllerAxisMotion","","",4,null],[13,"ControllerButtonDown","","",4,null],[13,"ControllerButtonUp","","",4,null],[13,"ControllerDeviceAdded","","",4,null],[13,"ControllerDeviceRemoved","","",4,null],[13,"ControllerDeviceRemapped","","",4,null],[13,"FingerDown","","",4,null],[13,"FingerUp","","",4,null],[13,"FingerMotion","","",4,null],[13,"DollarGesture","","",4,null],[13,"DollarRecord","","",4,null],[13,"MultiGesture","","",4,null],[13,"ClipboardUpdate","","",4,null],[13,"DropFile","","",4,null],[13,"User","","",4,null],[13,"Last","","",4,null],[4,"WindowEvent","","An enum of window events.",null,null],[13,"None","","",5,null],[13,"Shown","","",5,null],[13,"Hidden","","",5,null],[13,"Exposed","","",5,null],[13,"Moved","","",5,null],[13,"Resized","","",5,null],[13,"SizeChanged","","",5,null],[13,"Minimized","","",5,null],[13,"Maximized","","",5,null],[13,"Restored","","",5,null],[13,"Enter","","",5,null],[13,"Leave","","",5,null],[13,"FocusGained","","",5,null],[13,"FocusLost","","",5,null],[13,"Close","","",5,null],[13,"TakeFocus","","",5,null],[13,"HitTest","","",5,null],[4,"Event","","Different event types.",null,null],[13,"Quit","","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppTerminating","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppLowMemory","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppWillEnterBackground","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppDidEnterBackground","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppWillEnterForeground","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"AppDidEnterForeground","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"Window","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"win_event","","",6,null],[13,"KeyDown","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"keycode","","",6,null],[12,"scancode","","",6,null],[12,"keymod","","",6,null],[12,"repeat","","",6,null],[13,"KeyUp","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"keycode","","",6,null],[12,"scancode","","",6,null],[12,"keymod","","",6,null],[12,"repeat","","",6,null],[13,"TextEditing","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"text","","",6,null],[12,"start","","",6,null],[12,"length","","",6,null],[13,"TextInput","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"text","","",6,null],[13,"MouseMotion","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"which","","",6,null],[12,"mousestate","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"xrel","","",6,null],[12,"yrel","","",6,null],[13,"MouseButtonDown","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"which","","",6,null],[12,"mouse_btn","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[13,"MouseButtonUp","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"which","","",6,null],[12,"mouse_btn","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[13,"MouseWheel","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"which","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"direction","","",6,null],[13,"JoyAxisMotion","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"axis_idx","","",6,null],[12,"value","","",6,null],[13,"JoyBallMotion","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"ball_idx","","",6,null],[12,"xrel","","",6,null],[12,"yrel","","",6,null],[13,"JoyHatMotion","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"hat_idx","","",6,null],[12,"state","","",6,null],[13,"JoyButtonDown","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"button_idx","","",6,null],[13,"JoyButtonUp","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"button_idx","","",6,null],[13,"JoyDeviceAdded","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[13,"JoyDeviceRemoved","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[13,"ControllerAxisMotion","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"axis","","",6,null],[12,"value","","",6,null],[13,"ControllerButtonDown","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"button","","",6,null],[13,"ControllerButtonUp","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[12,"button","","",6,null],[13,"ControllerDeviceAdded","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[13,"ControllerDeviceRemoved","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[13,"ControllerDeviceRemapped","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"which","","",6,null],[13,"FingerDown","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"touch_id","","",6,null],[12,"finger_id","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"dx","","",6,null],[12,"dy","","",6,null],[12,"pressure","","",6,null],[13,"FingerUp","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"touch_id","","",6,null],[12,"finger_id","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"dx","","",6,null],[12,"dy","","",6,null],[12,"pressure","","",6,null],[13,"FingerMotion","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"touch_id","","",6,null],[12,"finger_id","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"dx","","",6,null],[12,"dy","","",6,null],[12,"pressure","","",6,null],[13,"DollarGesture","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"touch_id","","",6,null],[12,"gesture_id","","",6,null],[12,"num_fingers","","",6,null],[12,"error","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[13,"DollarRecord","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"touch_id","","",6,null],[12,"gesture_id","","",6,null],[12,"num_fingers","","",6,null],[12,"error","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[13,"MultiGesture","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"touch_id","","",6,null],[12,"d_theta","","",6,null],[12,"d_dist","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"num_fingers","","",6,null],[13,"ClipboardUpdate","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[13,"DropFile","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"filename","","",6,null],[13,"User","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"window_id","","",6,null],[12,"type_","","",6,null],[12,"code","","",6,null],[12,"data1","","",6,null],[12,"data2","","",6,null],[13,"Unknown","sdl2::event","",6,null],[12,"timestamp","sdl2::event::Event","",6,null],[12,"type_","","",6,null],[11,"flush_event","sdl2","Removes all events in the event queue that match the specified event type.",7,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":null}],[11,"flush_events","","Removes all events in the event queue that match the specified type range.",7,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"peek_events","","Reads the events at the front of the event queue, until the maximum amount of events is read.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"b"}}],[11,"push_event","","Pushes an event to the event queue.",7,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"result"}}],[11,"register_event","","Register a custom SDL event.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"register_events","","Registers custom SDL events.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"register_custom_event","","Register a custom event",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"push_custom_event","","Push a custom event",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","sdl2::event","",4,{"inputs":[{"name":"self"}],"output":{"name":"eventtype"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i64","","",4,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",4,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"windowevent"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"windowevent"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"windowevent"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_user_event","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_user_event_type","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_event_enabled","sdl2","Query if an event type is enabled.",8,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"enable_event","","Enable an event type. Returns if the event type was enabled before the call.",8,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"disable_event","","Disable an event type. Returns if the event type was enabled before the call.",8,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"poll_event","","Polls for currently pending events.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll_iter","","Returns a polling iterator that calls `poll_event()`. The iterator will terminate once there are no more pending events.",8,{"inputs":[{"name":"self"}],"output":{"name":"eventpolliterator"}}],[11,"pump_events","","Pumps the event loop, gathering events from the input devices.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"wait_event","","Waits indefinitely for the next available event.",8,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"wait_event_timeout","","Waits until the specified timeout (in milliseconds) for the next available event.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"wait_iter","","Returns a waiting iterator that calls `wait_event()`.",8,{"inputs":[{"name":"self"}],"output":{"name":"eventwaititerator"}}],[11,"wait_timeout_iter","","Returns a waiting iterator that calls `wait_event_timeout()`.",8,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventwaittimeoutiterator"}}],[11,"keyboard_state","","",8,{"inputs":[{"name":"self"}],"output":{"name":"keyboardstate"}}],[11,"mouse_state","","",8,{"inputs":[{"name":"self"}],"output":{"name":"mousestate"}}],[11,"relative_mouse_state","","",8,{"inputs":[{"name":"self"}],"output":{"name":"relativemousestate"}}],[11,"next","sdl2::event","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"filesystem","sdl2","",null,null],[4,"PrefPathError","sdl2::filesystem","",null,null],[13,"InvalidOrganizationName","","",12,null],[13,"InvalidApplicationName","","",12,null],[13,"SdlError","","",12,null],[5,"base_path","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"pref_path","","Return the preferred directory for the application to write files on this system, based on the given organization and application name.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"gesture","sdl2","",null,null],[0,"touch","","",null,null],[5,"num_touch_devices","sdl2::touch","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"touch_device","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"touchdevice"}}],[5,"num_touch_fingers","","",null,{"inputs":[{"name":"touchdevice"}],"output":{"name":"i32"}}],[5,"touch_finger","","",null,{"inputs":[{"name":"touchdevice"},{"name":"i32"}],"output":{"name":"option"}}],[6,"Finger","","",null,null],[6,"TouchDevice","","",null,null],[0,"joystick","sdl2","",null,null],[3,"Joystick","sdl2::joystick","Wrapper around the SDL_Joystick object",null,null],[3,"Guid","","Wrapper around a SDL_JoystickGUID, a globally unique identifier for a joystick.",null,null],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously not all combinations make sense: 5 for instance would mean up and down at the same time... To simplify things I turn it into an enum which is how the SDL2 docs present it anyway (using macros).",null,null],[13,"Centered","","",13,null],[13,"Up","","",13,null],[13,"Right","","",13,null],[13,"Down","","",13,null],[13,"Left","","",13,null],[13,"RightUp","","",13,null],[13,"RightDown","","",13,null],[13,"LeftUp","","",13,null],[13,"Leftdown","","",13,null],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks *and* controllers identified by SDL.",14,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"open","","Attempt to open the joystick at number `id` and return it.",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"name_for_index","","Return the name of the joystick at index `id`",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"device_guid","","Get the GUID for the joystick number `id`",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_event_state","","If state is `true` joystick events are processed, otherwise they're ignored.",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"event_state","","Return `true` if joystick events are processed.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"update","","Force joystick update when not using the event loop",14,{"inputs":[{"name":"self"}],"output":null}],[11,"subsystem","sdl2::joystick","",15,{"inputs":[{"name":"self"}],"output":{"name":"joysticksubsystem"}}],[11,"name","","Return the name of the joystick or an empty string if no name is found.",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"attached","","Return true if the joystick has been opened and currently connected.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"instance_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"guid","","Retreive the joystick's GUID",15,{"inputs":[{"name":"self"}],"output":{"name":"guid"}}],[11,"num_axes","","Retreive the number of axes for this joystick",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"axis","","Gets the position of the given `axis`.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"num_buttons","","Retreive the number of buttons for this joystick",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"button","","Return `Ok(true)` if `button` is pressed.",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"num_balls","","Retreive the number of balls for this joystick",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ball","","Return a pair `(dx, dy)` containing the difference in axis position since the last poll",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"num_hats","","Retreive the number of balls for this joystick",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"hat","","Return the position of `hat` for this joystick",15,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"drop","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"guid"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"guid"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"guid"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"from_string","","Create a GUID from a string representation.",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_zero","","Return `true` if GUID is full 0s",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"string","","Return a String representation of GUID",16,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",16,{"inputs":[{"name":"self"}],"output":{"name":"sdl_joystickguid"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"hatstate"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"hatstate"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw","","",13,{"inputs":[{"name":"u8"}],"output":{"name":"hatstate"}}],[11,"to_raw","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[0,"controller","sdl2","",null,null],[3,"GameController","sdl2::controller","Wrapper around the SDL_GameController object",null,null],[4,"AddMappingError","","",null,null],[13,"InvalidMapping","","",17,null],[13,"InvalidFilePath","","",17,null],[13,"SdlError","","",17,null],[4,"Axis","","",null,null],[13,"LeftX","","",18,null],[13,"LeftY","","",18,null],[13,"RightX","","",18,null],[13,"RightY","","",18,null],[13,"TriggerLeft","","",18,null],[13,"TriggerRight","","",18,null],[4,"Button","","",null,null],[13,"A","","",19,null],[13,"B","","",19,null],[13,"X","","",19,null],[13,"Y","","",19,null],[13,"Back","","",19,null],[13,"Guide","","",19,null],[13,"Start","","",19,null],[13,"LeftStick","","",19,null],[13,"RightStick","","",19,null],[13,"LeftShoulder","","",19,null],[13,"RightShoulder","","",19,null],[13,"DPadUp","","",19,null],[13,"DPadDown","","",19,null],[13,"DPadLeft","","",19,null],[13,"DPadRight","","",19,null],[4,"MappingStatus","","Possible return values for `add_mapping`",null,null],[13,"Added","","",20,null],[13,"Updated","","",20,null],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",17,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks *and* controllers identified by SDL.",21,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is_game_controller","","Return true if the joystick at index `id` is a game controller.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"open","","Attempt to open the controller number `id` and return it. Controller IDs are the same as joystick IDs and the maximum number can be retreived using the `SDL_NumJoysticks` function.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"name_for_index","","Return the name of the controller at the given index.",21,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_event_state","","If state is `true` controller events are processed, otherwise they're ignored.",21,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"event_state","","Return `true` if controller events are processed.",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"add_mapping","","Add a new mapping from a mapping string",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"load_mappings","","Load mappings from a file",21,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"mapping_for_guid","","",21,{"inputs":[{"name":"self"},{"name":"guid"}],"output":{"name":"result"}}],[11,"update","","Force controller update when not using the event loop",21,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","sdl2::controller","",18,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","Return the Axis from a string description in the same format used by the game controller mapping strings.",18,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"string","","Return a string for a given axis in the same format using by the game controller mapping strings",18,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"from_ll","","",18,{"inputs":[{"name":"sdl_gamecontrolleraxis"}],"output":{"name":"option"}}],[11,"to_ll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sdl_gamecontrolleraxis"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"button"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","Return the Button from a string description in the same format used by the game controller mapping strings.",19,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"string","","Return a string for a given button in the same format using by the game controller mapping strings",19,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"from_ll","","",19,{"inputs":[{"name":"sdl_gamecontrollerbutton"}],"output":{"name":"option"}}],[11,"to_ll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sdl_gamecontrollerbutton"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"mappingstatus"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"mappingstatus"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"subsystem","","",22,{"inputs":[{"name":"self"}],"output":{"name":"gamecontrollersubsystem"}}],[11,"name","","Return the name of the controller or an empty string if no name is found.",22,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"mapping","","Return a String describing the controller's button and axis mappings",22,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"attached","","Return true if the controller has been opened and currently connected.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"instance_id","","Return the joystick id of this controller",22,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"axis","","Get the position of the given `axis`",22,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"i16"}}],[11,"button","","Returns `true` if `button` is pressed.",22,{"inputs":[{"name":"self"},{"name":"button"}],"output":{"name":"bool"}}],[11,"drop","","",22,{"inputs":[{"name":"self"}],"output":null}],[0,"haptic","sdl2","Haptic Functions",null,null],[3,"Haptic","sdl2::haptic","Wrapper around the SDL_Haptic object",null,null],[11,"open_from_joystick_id","sdl2","Attempt to open the joystick at number `id` and return it.",23,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"subsystem","sdl2::haptic","",24,{"inputs":[{"name":"self"}],"output":{"name":"hapticsubsystem"}}],[11,"rumble_play","","Run a simple rumble effect on the haptic device.",24,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"u32"}],"output":null}],[11,"rumble_stop","","Stop the simple rumble on the haptic device.",24,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",24,{"inputs":[{"name":"self"}],"output":null}],[0,"keyboard","sdl2","",null,null],[3,"Mod","sdl2::keyboard","",null,null],[3,"KeyboardState","","",null,null],[3,"ScancodeIterator","","",null,null],[3,"PressedScancodeIterator","","",null,null],[3,"KeyboardUtil","","Keyboard utility functions. Access with `Sdl::keyboard()`.",null,null],[3,"TextInputUtil","","Text input utility functions. Access with `VideoSubsystem::text_input()`.",null,null],[4,"Keycode","","",null,null],[13,"Backspace","","",25,null],[13,"Tab","","",25,null],[13,"Return","","",25,null],[13,"Escape","","",25,null],[13,"Space","","",25,null],[13,"Exclaim","","",25,null],[13,"Quotedbl","","",25,null],[13,"Hash","","",25,null],[13,"Dollar","","",25,null],[13,"Percent","","",25,null],[13,"Ampersand","","",25,null],[13,"Quote","","",25,null],[13,"LeftParen","","",25,null],[13,"RightParen","","",25,null],[13,"Asterisk","","",25,null],[13,"Plus","","",25,null],[13,"Comma","","",25,null],[13,"Minus","","",25,null],[13,"Period","","",25,null],[13,"Slash","","",25,null],[13,"Num0","","",25,null],[13,"Num1","","",25,null],[13,"Num2","","",25,null],[13,"Num3","","",25,null],[13,"Num4","","",25,null],[13,"Num5","","",25,null],[13,"Num6","","",25,null],[13,"Num7","","",25,null],[13,"Num8","","",25,null],[13,"Num9","","",25,null],[13,"Colon","","",25,null],[13,"Semicolon","","",25,null],[13,"Less","","",25,null],[13,"Equals","","",25,null],[13,"Greater","","",25,null],[13,"Question","","",25,null],[13,"At","","",25,null],[13,"LeftBracket","","",25,null],[13,"Backslash","","",25,null],[13,"RightBracket","","",25,null],[13,"Caret","","",25,null],[13,"Underscore","","",25,null],[13,"Backquote","","",25,null],[13,"A","","",25,null],[13,"B","","",25,null],[13,"C","","",25,null],[13,"D","","",25,null],[13,"E","","",25,null],[13,"F","","",25,null],[13,"G","","",25,null],[13,"H","","",25,null],[13,"I","","",25,null],[13,"J","","",25,null],[13,"K","","",25,null],[13,"L","","",25,null],[13,"M","","",25,null],[13,"N","","",25,null],[13,"O","","",25,null],[13,"P","","",25,null],[13,"Q","","",25,null],[13,"R","","",25,null],[13,"S","","",25,null],[13,"T","","",25,null],[13,"U","","",25,null],[13,"V","","",25,null],[13,"W","","",25,null],[13,"X","","",25,null],[13,"Y","","",25,null],[13,"Z","","",25,null],[13,"Delete","","",25,null],[13,"CapsLock","","",25,null],[13,"F1","","",25,null],[13,"F2","","",25,null],[13,"F3","","",25,null],[13,"F4","","",25,null],[13,"F5","","",25,null],[13,"F6","","",25,null],[13,"F7","","",25,null],[13,"F8","","",25,null],[13,"F9","","",25,null],[13,"F10","","",25,null],[13,"F11","","",25,null],[13,"F12","","",25,null],[13,"PrintScreen","","",25,null],[13,"ScrollLock","","",25,null],[13,"Pause","","",25,null],[13,"Insert","","",25,null],[13,"Home","","",25,null],[13,"PageUp","","",25,null],[13,"End","","",25,null],[13,"PageDown","","",25,null],[13,"Right","","",25,null],[13,"Left","","",25,null],[13,"Down","","",25,null],[13,"Up","","",25,null],[13,"NumLockClear","","",25,null],[13,"KpDivide","","",25,null],[13,"KpMultiply","","",25,null],[13,"KpMinus","","",25,null],[13,"KpPlus","","",25,null],[13,"KpEnter","","",25,null],[13,"Kp1","","",25,null],[13,"Kp2","","",25,null],[13,"Kp3","","",25,null],[13,"Kp4","","",25,null],[13,"Kp5","","",25,null],[13,"Kp6","","",25,null],[13,"Kp7","","",25,null],[13,"Kp8","","",25,null],[13,"Kp9","","",25,null],[13,"Kp0","","",25,null],[13,"KpPeriod","","",25,null],[13,"Application","","",25,null],[13,"Power","","",25,null],[13,"KpEquals","","",25,null],[13,"F13","","",25,null],[13,"F14","","",25,null],[13,"F15","","",25,null],[13,"F16","","",25,null],[13,"F17","","",25,null],[13,"F18","","",25,null],[13,"F19","","",25,null],[13,"F20","","",25,null],[13,"F21","","",25,null],[13,"F22","","",25,null],[13,"F23","","",25,null],[13,"F24","","",25,null],[13,"Execute","","",25,null],[13,"Help","","",25,null],[13,"Menu","","",25,null],[13,"Select","","",25,null],[13,"Stop","","",25,null],[13,"Again","","",25,null],[13,"Undo","","",25,null],[13,"Cut","","",25,null],[13,"Copy","","",25,null],[13,"Paste","","",25,null],[13,"Find","","",25,null],[13,"Mute","","",25,null],[13,"VolumeUp","","",25,null],[13,"VolumeDown","","",25,null],[13,"KpComma","","",25,null],[13,"KpEqualsAS400","","",25,null],[13,"AltErase","","",25,null],[13,"Sysreq","","",25,null],[13,"Cancel","","",25,null],[13,"Clear","","",25,null],[13,"Prior","","",25,null],[13,"Return2","","",25,null],[13,"Separator","","",25,null],[13,"Out","","",25,null],[13,"Oper","","",25,null],[13,"ClearAgain","","",25,null],[13,"CrSel","","",25,null],[13,"ExSel","","",25,null],[13,"Kp00","","",25,null],[13,"Kp000","","",25,null],[13,"ThousandsSeparator","","",25,null],[13,"DecimalSeparator","","",25,null],[13,"CurrencyUnit","","",25,null],[13,"CurrencySubUnit","","",25,null],[13,"KpLeftParen","","",25,null],[13,"KpRightParen","","",25,null],[13,"KpLeftBrace","","",25,null],[13,"KpRightBrace","","",25,null],[13,"KpTab","","",25,null],[13,"KpBackspace","","",25,null],[13,"KpA","","",25,null],[13,"KpB","","",25,null],[13,"KpC","","",25,null],[13,"KpD","","",25,null],[13,"KpE","","",25,null],[13,"KpF","","",25,null],[13,"KpXor","","",25,null],[13,"KpPower","","",25,null],[13,"KpPercent","","",25,null],[13,"KpLess","","",25,null],[13,"KpGreater","","",25,null],[13,"KpAmpersand","","",25,null],[13,"KpDblAmpersand","","",25,null],[13,"KpVerticalBar","","",25,null],[13,"KpDblVerticalBar","","",25,null],[13,"KpColon","","",25,null],[13,"KpHash","","",25,null],[13,"KpSpace","","",25,null],[13,"KpAt","","",25,null],[13,"KpExclam","","",25,null],[13,"KpMemStore","","",25,null],[13,"KpMemRecall","","",25,null],[13,"KpMemClear","","",25,null],[13,"KpMemAdd","","",25,null],[13,"KpMemSubtract","","",25,null],[13,"KpMemMultiply","","",25,null],[13,"KpMemDivide","","",25,null],[13,"KpPlusMinus","","",25,null],[13,"KpClear","","",25,null],[13,"KpClearEntry","","",25,null],[13,"KpBinary","","",25,null],[13,"KpOctal","","",25,null],[13,"KpDecimal","","",25,null],[13,"KpHexadecimal","","",25,null],[13,"LCtrl","","",25,null],[13,"LShift","","",25,null],[13,"LAlt","","",25,null],[13,"LGui","","",25,null],[13,"RCtrl","","",25,null],[13,"RShift","","",25,null],[13,"RAlt","","",25,null],[13,"RGui","","",25,null],[13,"Mode","","",25,null],[13,"AudioNext","","",25,null],[13,"AudioPrev","","",25,null],[13,"AudioStop","","",25,null],[13,"AudioPlay","","",25,null],[13,"AudioMute","","",25,null],[13,"MediaSelect","","",25,null],[13,"Www","","",25,null],[13,"Mail","","",25,null],[13,"Calculator","","",25,null],[13,"Computer","","",25,null],[13,"AcSearch","","",25,null],[13,"AcHome","","",25,null],[13,"AcBack","","",25,null],[13,"AcForward","","",25,null],[13,"AcStop","","",25,null],[13,"AcRefresh","","",25,null],[13,"AcBookmarks","","",25,null],[13,"BrightnessDown","","",25,null],[13,"BrightnessUp","","",25,null],[13,"DisplaySwitch","","",25,null],[13,"KbdIllumToggle","","",25,null],[13,"KbdIllumDown","","",25,null],[13,"KbdIllumUp","","",25,null],[13,"Eject","","",25,null],[13,"Sleep","","",25,null],[4,"Scancode","","",null,null],[13,"A","","",26,null],[13,"B","","",26,null],[13,"C","","",26,null],[13,"D","","",26,null],[13,"E","","",26,null],[13,"F","","",26,null],[13,"G","","",26,null],[13,"H","","",26,null],[13,"I","","",26,null],[13,"J","","",26,null],[13,"K","","",26,null],[13,"L","","",26,null],[13,"M","","",26,null],[13,"N","","",26,null],[13,"O","","",26,null],[13,"P","","",26,null],[13,"Q","","",26,null],[13,"R","","",26,null],[13,"S","","",26,null],[13,"T","","",26,null],[13,"U","","",26,null],[13,"V","","",26,null],[13,"W","","",26,null],[13,"X","","",26,null],[13,"Y","","",26,null],[13,"Z","","",26,null],[13,"Num1","","",26,null],[13,"Num2","","",26,null],[13,"Num3","","",26,null],[13,"Num4","","",26,null],[13,"Num5","","",26,null],[13,"Num6","","",26,null],[13,"Num7","","",26,null],[13,"Num8","","",26,null],[13,"Num9","","",26,null],[13,"Num0","","",26,null],[13,"Return","","",26,null],[13,"Escape","","",26,null],[13,"Backspace","","",26,null],[13,"Tab","","",26,null],[13,"Space","","",26,null],[13,"Minus","","",26,null],[13,"Equals","","",26,null],[13,"LeftBracket","","",26,null],[13,"RightBracket","","",26,null],[13,"Backslash","","",26,null],[13,"NonUsHash","","",26,null],[13,"Semicolon","","",26,null],[13,"Apostrophe","","",26,null],[13,"Grave","","",26,null],[13,"Comma","","",26,null],[13,"Period","","",26,null],[13,"Slash","","",26,null],[13,"CapsLock","","",26,null],[13,"F1","","",26,null],[13,"F2","","",26,null],[13,"F3","","",26,null],[13,"F4","","",26,null],[13,"F5","","",26,null],[13,"F6","","",26,null],[13,"F7","","",26,null],[13,"F8","","",26,null],[13,"F9","","",26,null],[13,"F10","","",26,null],[13,"F11","","",26,null],[13,"F12","","",26,null],[13,"PrintScreen","","",26,null],[13,"ScrollLock","","",26,null],[13,"Pause","","",26,null],[13,"Insert","","",26,null],[13,"Home","","",26,null],[13,"PageUp","","",26,null],[13,"Delete","","",26,null],[13,"End","","",26,null],[13,"PageDown","","",26,null],[13,"Right","","",26,null],[13,"Left","","",26,null],[13,"Down","","",26,null],[13,"Up","","",26,null],[13,"NumLockClear","","",26,null],[13,"KpDivide","","",26,null],[13,"KpMultiply","","",26,null],[13,"KpMinus","","",26,null],[13,"KpPlus","","",26,null],[13,"KpEnter","","",26,null],[13,"Kp1","","",26,null],[13,"Kp2","","",26,null],[13,"Kp3","","",26,null],[13,"Kp4","","",26,null],[13,"Kp5","","",26,null],[13,"Kp6","","",26,null],[13,"Kp7","","",26,null],[13,"Kp8","","",26,null],[13,"Kp9","","",26,null],[13,"Kp0","","",26,null],[13,"KpPeriod","","",26,null],[13,"NonUsBackslash","","",26,null],[13,"Application","","",26,null],[13,"Power","","",26,null],[13,"KpEquals","","",26,null],[13,"F13","","",26,null],[13,"F14","","",26,null],[13,"F15","","",26,null],[13,"F16","","",26,null],[13,"F17","","",26,null],[13,"F18","","",26,null],[13,"F19","","",26,null],[13,"F20","","",26,null],[13,"F21","","",26,null],[13,"F22","","",26,null],[13,"F23","","",26,null],[13,"F24","","",26,null],[13,"Execute","","",26,null],[13,"Help","","",26,null],[13,"Menu","","",26,null],[13,"Select","","",26,null],[13,"Stop","","",26,null],[13,"Again","","",26,null],[13,"Undo","","",26,null],[13,"Cut","","",26,null],[13,"Copy","","",26,null],[13,"Paste","","",26,null],[13,"Find","","",26,null],[13,"Mute","","",26,null],[13,"VolumeUp","","",26,null],[13,"VolumeDown","","",26,null],[13,"KpComma","","",26,null],[13,"KpEqualsAS400","","",26,null],[13,"International1","","",26,null],[13,"International2","","",26,null],[13,"International3","","",26,null],[13,"International4","","",26,null],[13,"International5","","",26,null],[13,"International6","","",26,null],[13,"International7","","",26,null],[13,"International8","","",26,null],[13,"International9","","",26,null],[13,"Lang1","","",26,null],[13,"Lang2","","",26,null],[13,"Lang3","","",26,null],[13,"Lang4","","",26,null],[13,"Lang5","","",26,null],[13,"Lang6","","",26,null],[13,"Lang7","","",26,null],[13,"Lang8","","",26,null],[13,"Lang9","","",26,null],[13,"AltErase","","",26,null],[13,"SysReq","","",26,null],[13,"Cancel","","",26,null],[13,"Clear","","",26,null],[13,"Prior","","",26,null],[13,"Return2","","",26,null],[13,"Separator","","",26,null],[13,"Out","","",26,null],[13,"Oper","","",26,null],[13,"ClearAgain","","",26,null],[13,"CrSel","","",26,null],[13,"ExSel","","",26,null],[13,"Kp00","","",26,null],[13,"Kp000","","",26,null],[13,"ThousandsSeparator","","",26,null],[13,"DecimalSeparator","","",26,null],[13,"CurrencyUnit","","",26,null],[13,"CurrencySubUnit","","",26,null],[13,"KpLeftParen","","",26,null],[13,"KpRightParen","","",26,null],[13,"KpLeftBrace","","",26,null],[13,"KpRightBrace","","",26,null],[13,"KpTab","","",26,null],[13,"KpBackspace","","",26,null],[13,"KpA","","",26,null],[13,"KpB","","",26,null],[13,"KpC","","",26,null],[13,"KpD","","",26,null],[13,"KpE","","",26,null],[13,"KpF","","",26,null],[13,"KpXor","","",26,null],[13,"KpPower","","",26,null],[13,"KpPercent","","",26,null],[13,"KpLess","","",26,null],[13,"KpGreater","","",26,null],[13,"KpAmpersand","","",26,null],[13,"KpDblAmpersand","","",26,null],[13,"KpVerticalBar","","",26,null],[13,"KpDblVerticalBar","","",26,null],[13,"KpColon","","",26,null],[13,"KpHash","","",26,null],[13,"KpSpace","","",26,null],[13,"KpAt","","",26,null],[13,"KpExclam","","",26,null],[13,"KpMemStore","","",26,null],[13,"KpMemRecall","","",26,null],[13,"KpMemClear","","",26,null],[13,"KpMemAdd","","",26,null],[13,"KpMemSubtract","","",26,null],[13,"KpMemMultiply","","",26,null],[13,"KpMemDivide","","",26,null],[13,"KpPlusMinus","","",26,null],[13,"KpClear","","",26,null],[13,"KpClearEntry","","",26,null],[13,"KpBinary","","",26,null],[13,"KpOctal","","",26,null],[13,"KpDecimal","","",26,null],[13,"KpHexadecimal","","",26,null],[13,"LCtrl","","",26,null],[13,"LShift","","",26,null],[13,"LAlt","","",26,null],[13,"LGui","","",26,null],[13,"RCtrl","","",26,null],[13,"RShift","","",26,null],[13,"RAlt","","",26,null],[13,"RGui","","",26,null],[13,"Mode","","",26,null],[13,"AudioNext","","",26,null],[13,"AudioPrev","","",26,null],[13,"AudioStop","","",26,null],[13,"AudioPlay","","",26,null],[13,"AudioMute","","",26,null],[13,"MediaSelect","","",26,null],[13,"Www","","",26,null],[13,"Mail","","",26,null],[13,"Calculator","","",26,null],[13,"Computer","","",26,null],[13,"AcSearch","","",26,null],[13,"AcHome","","",26,null],[13,"AcBack","","",26,null],[13,"AcForward","","",26,null],[13,"AcStop","","",26,null],[13,"AcRefresh","","",26,null],[13,"AcBookmarks","","",26,null],[13,"BrightnessDown","","",26,null],[13,"BrightnessUp","","",26,null],[13,"DisplaySwitch","","",26,null],[13,"KbdIllumToggle","","",26,null],[13,"KbdIllumDown","","",26,null],[13,"KbdIllumUp","","",26,null],[13,"Eject","","",26,null],[13,"Sleep","","",26,null],[13,"App1","","",26,null],[13,"App2","","",26,null],[13,"Num","","",26,null],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"keycode"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"keycode"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i32","","",25,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_scancode","","Gets the virtual key from a scancode. Returns None if there is no corresponding virtual key.",25,{"inputs":[{"name":"scancode"}],"output":{"name":"option"}}],[11,"from_name","","",25,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"name","","",25,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"scancode"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"scancode"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i32","","",26,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_keycode","","Gets the scancode from a virtual key. Returns None if there is no corresponding scancode.",26,{"inputs":[{"name":"keycode"}],"output":{"name":"option"}}],[11,"from_name","","",26,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"name","","",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[17,"NOMOD","","",null,null],[17,"LSHIFTMOD","","",null,null],[17,"RSHIFTMOD","","",null,null],[17,"LCTRLMOD","","",null,null],[17,"RCTRLMOD","","",null,null],[17,"LALTMOD","","",null,null],[17,"RALTMOD","","",null,null],[17,"LGUIMOD","","",null,null],[17,"RGUIMOD","","",null,null],[17,"NUMMOD","","",null,null],[17,"CAPSMOD","","",null,null],[17,"MODEMOD","","",null,null],[17,"RESERVEDMOD","","",null,null],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"mod"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"cmp","","",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"ordering"}}],[11,"hash","","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"mod"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"mod"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",27,{"inputs":[{"name":"u16"}],"output":{"name":"mod"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"bitor_assign","","Adds the set of flags.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"bitxor_assign","","Toggles the set of flags.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"sub_assign","","Disables all flags enabled in the set.",27,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"self"}],"output":{"name":"mod"}}],[11,"extend","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"mod"}}],[11,"new","","",28,{"inputs":[{"name":"eventpump"}],"output":{"name":"keyboardstate"}}],[11,"is_scancode_pressed","","Returns true if the scancode is pressed.",28,{"inputs":[{"name":"self"},{"name":"scancode"}],"output":{"name":"bool"}}],[11,"scancodes","","Returns an iterator all scancodes with a boolean indicating if the scancode is pressed.",28,{"inputs":[{"name":"self"}],"output":{"name":"scancodeiterator"}}],[11,"pressed_scancodes","","Returns an iterator of pressed scancodes.",28,{"inputs":[{"name":"self"}],"output":{"name":"pressedscancodeiterator"}}],[11,"next","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"keyboard","sdl2","",31,{"inputs":[{"name":"self"}],"output":{"name":"keyboardutil"}}],[11,"text_input","","",2,{"inputs":[{"name":"self"}],"output":{"name":"textinpututil"}}],[11,"focused_window_id","sdl2::keyboard","Gets the id of the window which currently has keyboard focus.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"mod_state","","",32,{"inputs":[{"name":"self"}],"output":{"name":"mod"}}],[11,"set_mod_state","","",32,{"inputs":[{"name":"self"},{"name":"mod"}],"output":null}],[11,"start","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"is_active","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"stop","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"set_rect","","",33,{"inputs":[{"name":"self"},{"name":"rect"}],"output":null}],[11,"has_screen_keyboard_support","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_screen_keyboard_shown","","",33,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"bool"}}],[0,"mouse","sdl2","",null,null],[3,"RelativeMouseState","sdl2::mouse","",null,null],[3,"Cursor","","",null,null],[3,"MouseState","","",null,null],[3,"MouseButtonIterator","","",null,null],[3,"PressedMouseButtonIterator","","",null,null],[3,"MouseUtil","","Mouse utility functions. Access with `Sdl::mouse()`.",null,null],[4,"SystemCursor","","",null,null],[13,"Arrow","","",34,null],[13,"IBeam","","",34,null],[13,"Wait","","",34,null],[13,"Crosshair","","",34,null],[13,"WaitArrow","","",34,null],[13,"SizeNWSE","","",34,null],[13,"SizeNESW","","",34,null],[13,"SizeWE","","",34,null],[13,"SizeNS","","",34,null],[13,"SizeAll","","",34,null],[13,"No","","",34,null],[13,"Hand","","",34,null],[4,"MouseWheelDirection","","",null,null],[13,"Normal","","",35,null],[13,"Flipped","","",35,null],[13,"Unknown","","",35,null],[4,"MouseButton","","",null,null],[13,"Unknown","","",36,null],[13,"Left","","",36,null],[13,"Middle","","",36,null],[13,"Right","","",36,null],[13,"X1","","",36,null],[13,"X2","","",36,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"relativemousestate"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"relativemousestate"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"relativemousestate"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"new","","",37,{"inputs":[{"name":"eventpump"}],"output":{"name":"relativemousestate"}}],[11,"from_sdl_state","","",37,{"inputs":[{"name":"u32"}],"output":{"name":"relativemousestate"}}],[11,"to_sdl_state","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"left","","Returns true if the left mouse button is pressed.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"middle","","Tests if the middle mouse button was pressed.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"right","","Tests if the right mouse button was pressed.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"x1","","Tests if the X1 mouse button was pressed.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"x2","","Tests if the X2 mouse button was pressed.",37,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"x","","Returns the x coordinate of the state",37,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"y","","Returns the y coordinate of the state",37,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",37,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean indicating if the scancode is pressed.",37,{"inputs":[{"name":"self"}],"output":{"name":"mousebuttoniterator"}}],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",37,{"inputs":[{"name":"self"}],"output":{"name":"pressedmousebuttoniterator"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"systemcursor"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"systemcursor"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",38,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",38,null],[11,"from_surface","","",38,{"inputs":[{"name":"s"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"from_system","","",38,{"inputs":[{"name":"systemcursor"}],"output":{"name":"result"}}],[11,"set","","",38,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"mousewheeldirection"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"mousewheeldirection"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"mousewheeldirection"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ll","","",35,{"inputs":[{"name":"u32"}],"output":{"name":"mousewheeldirection"}}],[11,"to_ll","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"mousebutton"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ll","","",36,{"inputs":[{"name":"u8"}],"output":{"name":"mousebutton"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"mousestate"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"mousestate"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"new","","",39,{"inputs":[{"name":"eventpump"}],"output":{"name":"mousestate"}}],[11,"from_sdl_state","","",39,{"inputs":[{"name":"u32"}],"output":{"name":"mousestate"}}],[11,"to_sdl_state","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"left","","Returns true if the left mouse button is pressed.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"middle","","Tests if the middle mouse button was pressed.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"right","","Tests if the right mouse button was pressed.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"x1","","Tests if the X1 mouse button was pressed.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"x2","","Tests if the X2 mouse button was pressed.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"x","","Returns the x coordinate of the state",39,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"y","","Returns the y coordinate of the state",39,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",39,{"inputs":[{"name":"self"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean indicating if the scancode is pressed.",39,{"inputs":[{"name":"self"}],"output":{"name":"mousebuttoniterator"}}],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",39,{"inputs":[{"name":"self"}],"output":{"name":"pressedmousebuttoniterator"}}],[11,"next","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"mouse","sdl2","",31,{"inputs":[{"name":"self"}],"output":{"name":"mouseutil"}}],[11,"focused_window_id","sdl2::mouse","Gets the id of the window which currently has mouse focus.",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"warp_mouse_in_window","","",42,{"inputs":[{"name":"self"},{"name":"windowref"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_relative_mouse_mode","","",42,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"relative_mouse_mode","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_cursor_showing","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"show_cursor","","",42,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[0,"rect","sdl2","Rectangles and points.",null,null],[3,"Rect","sdl2::rect","A (non-empty) rectangle.",null,null],[3,"Point","","Immutable point type, consisting of x and y.",null,null],[5,"max_int_value","","The maximal integer value that can be used for rectangles.",null,{"inputs":[],"output":{"name":"u32"}}],[5,"min_int_value","","The minimal integer value that can be used for rectangle positions and points.",null,{"inputs":[],"output":{"name":"i32"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"hash","","",43,null],[11,"new","","Creates a new rectangle from the given values.",43,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rect"}}],[11,"from_center","","Creates a new rectangle centered on the given position.",43,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rect"}}],[11,"x","","The horizontal position of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"y","","The vertical position of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"width","","The width of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"height","","The height of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"size","","Returns the width and height of this rectangle.",43,null],[11,"set_x","","Sets the horizontal position of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_y","","Sets the vertical position of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_width","","Sets the width of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"set_height","","Sets the height of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",43,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"left","","Returns the x-position of the left side of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"right","","Returns the x-position of the right side of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"top","","Returns the y-position of the top side of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"bottom","","Returns the y-position of the bottom side of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"center","","Returns the center position of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"top_left","","Returns the top-left corner of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"top_right","","Returns the top-right corner of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"bottom_left","","Returns the bottom-left corner of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"bottom_right","","Returns the bottom-right corner of this rectangle.",43,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"set_right","","Sets the position of the right side of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_bottom","","Sets the position of the bottom side of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",43,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"center_on","","Centers the rectangle on the given point.",43,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"offset","","Move this rect and clamp the positions to prevent over/underflow. This also clamps the size to prevent overflow.",43,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"reposition","","Moves this rect to the given position after clamping the values.",43,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"resize","","Resizes this rect to the given size after clamping the values.",43,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"contains","","Checks whether this rect contains a given point, or touches it on the right and/or bottom edges.  This method is deprecated in favor of `Rect::contains_point`.",43,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"contains_point","","Checks whether this rectangle contains a given point.",43,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"contains_rect","","Checks whether this rectangle completely contains another rectangle.",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"raw","","Returns the underlying C Rect.",43,null],[11,"raw_mut","","",43,null],[11,"raw_slice","","",43,null],[11,"from_ll","","",43,{"inputs":[{"name":"sdl_rect"}],"output":{"name":"rect"}}],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points. If a clipping rectangle is given, only points that are within it will be considered.",43,null],[11,"has_intersection","","Determines whether two rectangles intersect.",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"intersection","","Calculates the intersection of two rectangles.",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"option"}}],[11,"union","","Calculates the union of two rectangles (i.e. the smallest rectangle that contains both).",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"rect"}}],[11,"intersect_line","","Calculates the intersection of a rectangle and a line segment and returns the points of their intersection.",43,{"inputs":[{"name":"self"},{"name":"point"},{"name":"point"}],"output":{"name":"option"}}],[11,"deref","","Example",43,{"inputs":[{"name":"self"}],"output":{"name":"sdl_rect"}}],[11,"deref_mut","","Example",43,{"inputs":[{"name":"self"}],"output":{"name":"sdl_rect"}}],[11,"into","","",43,{"inputs":[{"name":"self"}],"output":{"name":"sdl_rect"}}],[11,"into","","",43,null],[11,"from","","",43,{"inputs":[{"name":"sdl_rect"}],"output":{"name":"rect"}}],[11,"from","","",43,null],[11,"as_ref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"sdl_rect"}}],[11,"as_mut","","",43,{"inputs":[{"name":"self"}],"output":{"name":"sdl_rect"}}],[11,"bitand","","",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"option"}}],[11,"bitor","","",43,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"rect"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"deref","","Example",44,{"inputs":[{"name":"self"}],"output":{"name":"sdl_point"}}],[11,"deref_mut","","Example",44,{"inputs":[{"name":"self"}],"output":{"name":"sdl_point"}}],[11,"as_ref","","",44,{"inputs":[{"name":"self"}],"output":{"name":"sdl_point"}}],[11,"as_mut","","",44,{"inputs":[{"name":"self"}],"output":{"name":"sdl_point"}}],[11,"from","","",44,{"inputs":[{"name":"sdl_point"}],"output":{"name":"point"}}],[11,"from","","",44,null],[11,"into","","",44,{"inputs":[{"name":"self"}],"output":{"name":"sdl_point"}}],[11,"into","","",44,null],[11,"new","","Creates a new point from the given coordinates.",44,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"point"}}],[11,"from_ll","","",44,{"inputs":[{"name":"sdl_point"}],"output":{"name":"point"}}],[11,"raw_slice","","",44,null],[11,"raw","","",44,null],[11,"offset","","Returns a new point by shifting this point's coordinates by the given x and y values.",44,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"point"}}],[11,"scale","","Returns a new point by multiplying this point's coordinates by the given scale factor.",44,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"point"}}],[11,"x","","Returns the x-coordinate of this point.",44,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"y","","Returns the y-coordinate of this point.",44,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"add","","",44,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"neg","","",44,{"inputs":[{"name":"self"}],"output":{"name":"point"}}],[11,"sub","","",44,{"inputs":[{"name":"self"},{"name":"point"}],"output":{"name":"point"}}],[11,"mul","","",44,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"point"}}],[11,"div","","",44,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"point"}}],[0,"surface","sdl2","",null,null],[3,"Surface","sdl2::surface","",null,null],[3,"SurfaceRef","","An unsized Surface reference.",null,null],[11,"drop","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"as_ref","","",46,{"inputs":[{"name":"self"}],"output":{"name":"surfaceref"}}],[11,"deref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"surfaceref"}}],[11,"deref_mut","","",45,{"inputs":[{"name":"self"}],"output":{"name":"surfaceref"}}],[11,"as_ref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"surfaceref"}}],[11,"as_mut","","",45,{"inputs":[{"name":"self"}],"output":{"name":"surfaceref"}}],[11,"from_ll","","",45,null],[11,"new","","Creates a new surface using a pixel format.",45,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"pixelformatenum"}],"output":{"name":"result"}}],[11,"from_pixelmasks","","Creates a new surface using pixel masks.",45,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"pixelmasks"}],"output":{"name":"result"}}],[11,"from_data","","Creates a new surface from an existing buffer, using a pixel format.",45,null],[11,"from_data_pixelmasks","","Creates a new surface from an existing buffer, using pixel masks.",45,null],[11,"load_bmp_rw","","",45,{"inputs":[{"name":"rwops"}],"output":{"name":"result"}}],[11,"load_bmp","","",45,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_ll","","",46,null],[11,"from_ll_mut","","",46,null],[11,"raw","","",46,null],[11,"width","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"height","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pitch","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"size","","",46,null],[11,"rect","","",46,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"pixel_format","","",46,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"pixel_format_enum","","",46,{"inputs":[{"name":"self"}],"output":{"name":"pixelformatenum"}}],[11,"with_lock","","Locks a surface so that the pixels can be directly accessed safely.",46,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"with_lock_mut","","Locks a surface so that the pixels can be directly accessed safely.",46,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"without_lock","","Returns the Surface's pixel buffer if the Surface doesn't require locking (e.g. it's a software surface).",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"without_lock_mut","","Returns the Surface's pixel buffer if the Surface doesn't require locking (e.g. it's a software surface).",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"must_lock","","Returns true if the Surface needs to be locked before accessing the Surface pixels.",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"save_bmp_rw","","",46,{"inputs":[{"name":"self"},{"name":"rwops"}],"output":{"name":"result"}}],[11,"save_bmp","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"set_palette","","",46,{"inputs":[{"name":"self"},{"name":"palette"}],"output":{"name":"result"}}],[11,"enable_RLE","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_RLE","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"set_color_key","","",46,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"color"}],"output":{"name":"result"}}],[11,"color_key","","The function will fail if the surface doesn't have color key enabled.",46,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_color_mod","","",46,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[11,"color_mod","","",46,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"fill_rect","","",46,{"inputs":[{"name":"self"},{"name":"r"},{"name":"color"}],"output":{"name":"result"}}],[11,"fill_rects","","",46,null],[11,"set_alpha_mod","","",46,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"alpha_mod","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_blend_mode","","The function will fail if the blend mode is not supported by SDL.",46,{"inputs":[{"name":"self"},{"name":"blendmode"}],"output":{"name":"result"}}],[11,"blend_mode","","",46,{"inputs":[{"name":"self"}],"output":{"name":"blendmode"}}],[11,"set_clip_rect","","Sets the clip rectangle for the surface.",46,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"bool"}}],[11,"clip_rect","","Gets the clip rectangle for the surface.",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"convert","","Copies the surface into a new one that is optimized for blitting to a surface of a specified pixel format.",46,{"inputs":[{"name":"self"},{"name":"pixelformat"}],"output":{"name":"result"}}],[11,"blit","","Performs surface blitting (surface copying).",46,{"inputs":[{"name":"self"},{"name":"r1"},{"name":"surfaceref"},{"name":"r2"}],"output":{"name":"result"}}],[11,"lower_blit","","Performs low-level surface blitting.",46,{"inputs":[{"name":"self"},{"name":"r1"},{"name":"surfaceref"},{"name":"r2"}],"output":{"name":"result"}}],[11,"blit_scaled","","Performs scaled surface bliting (surface copying).",46,{"inputs":[{"name":"self"},{"name":"r1"},{"name":"surfaceref"},{"name":"r2"}],"output":{"name":"result"}}],[11,"lower_blit_scaled","","Performs low-level scaled surface blitting.",46,{"inputs":[{"name":"self"},{"name":"r1"},{"name":"surfaceref"},{"name":"r2"}],"output":{"name":"result"}}],[0,"pixels","sdl2","",null,null],[3,"Palette","sdl2::pixels","",null,null],[3,"PixelMasks","","",null,null],[12,"bpp","","Bits per pixel; usually 15, 16, or 32",47,null],[12,"rmask","","The red mask",47,null],[12,"gmask","","The green mask",47,null],[12,"bmask","","The blue mask",47,null],[12,"amask","","The alpha mask",47,null],[3,"PixelFormat","","",null,null],[4,"Color","","",null,null],[13,"RGB","","",48,null],[13,"RGBA","","",48,null],[4,"PixelFormatEnum","","",null,null],[13,"Unknown","","",49,null],[13,"Index1LSB","","",49,null],[13,"Index1MSB","","",49,null],[13,"Index4LSB","","",49,null],[13,"Index4MSB","","",49,null],[13,"Index8","","",49,null],[13,"RGB332","","",49,null],[13,"RGB444","","",49,null],[13,"RGB555","","",49,null],[13,"BGR555","","",49,null],[13,"ARGB4444","","",49,null],[13,"RGBA4444","","",49,null],[13,"ABGR4444","","",49,null],[13,"BGRA4444","","",49,null],[13,"ARGB1555","","",49,null],[13,"RGBA5551","","",49,null],[13,"ABGR1555","","",49,null],[13,"BGRA5551","","",49,null],[13,"RGB565","","",49,null],[13,"BGR565","","",49,null],[13,"RGB24","","",49,null],[13,"BGR24","","",49,null],[13,"RGB888","","",49,null],[13,"RGBX8888","","",49,null],[13,"BGR888","","",49,null],[13,"BGRX8888","","",49,null],[13,"ARGB8888","","",49,null],[13,"RGBA8888","","",49,null],[13,"ABGR8888","","",49,null],[13,"BGRA8888","","",49,null],[13,"ARGB2101010","","",49,null],[13,"YV12","","",49,null],[13,"IYUV","","",49,null],[13,"YUY2","","",49,null],[13,"UYVY","","",49,null],[13,"YVYU","","",49,null],[11,"new","","Creates a new, uninitialized palette",50,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"with_colors","","Creates a palette from the provided colors",50,null],[11,"len","","",50,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"drop","","",50,{"inputs":[{"name":"self"}],"output":null}],[11,"raw","","",50,null],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"color"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_u32","","",48,{"inputs":[{"name":"self"},{"name":"pixelformat"}],"output":{"name":"u32"}}],[11,"from_u32","","",48,{"inputs":[{"name":"pixelformat"},{"name":"u32"}],"output":{"name":"color"}}],[11,"rgb","","",48,null],[11,"rgba","","",48,null],[11,"into","","",48,{"inputs":[{"name":"self"}],"output":{"name":"sdl_color"}}],[11,"from","","",48,{"inputs":[{"name":"sdl_color"}],"output":{"name":"color"}}],[11,"rand","","",48,{"inputs":[{"name":"r"}],"output":{"name":"color"}}],[11,"raw","","",51,null],[11,"from_ll","","",51,null],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"pixelformatenum"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"pixelformatenum"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_masks","","",49,{"inputs":[{"name":"pixelmasks"}],"output":{"name":"pixelformatenum"}}],[11,"into_masks","","",49,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"byte_size_from_pitch_and_height","","Calculates the total byte size of an image buffer, given its pitch and height.",49,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"byte_size_of_pixels","","",49,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"byte_size_per_pixel","","",49,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"into","","",49,{"inputs":[{"name":"self"}],"output":{"name":"sdl_pixelformatenum"}}],[11,"from","","",49,{"inputs":[{"name":"pixelformat"}],"output":{"name":"pixelformatenum"}}],[11,"from_i64","","",49,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",49,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[0,"video","sdl2","",null,null],[3,"DisplayMode","sdl2::video","",null,null],[12,"format","","",52,null],[12,"w","","",52,null],[12,"h","","",52,null],[12,"refresh_rate","","",52,null],[3,"GLContext","","",null,null],[3,"Window","","",null,null],[3,"WindowRef","","An unsized Window reference.",null,null],[3,"WindowBuilder","","The type that allows you to build windows.",null,null],[3,"DriverIterator","","",null,null],[4,"GLProfile","","",null,null],[13,"Core","","OpenGL core profile - deprecated functions are disabled",53,null],[13,"Compatibility","","OpenGL compatibility profile - deprecated functions are allowed",53,null],[13,"GLES","","OpenGL ES profile - only a subset of the base OpenGL functionality is available",53,null],[13,"Unknown","","Unknown profile - SDL will tend to return 0 if you ask when no particular profile has been defined or requested.",53,null],[4,"FullscreenType","","",null,null],[13,"Off","","",54,null],[13,"True","","",54,null],[13,"Desktop","","",54,null],[4,"WindowPos","","",null,null],[13,"Undefined","","",55,null],[13,"Centered","","",55,null],[13,"Positioned","","",55,null],[4,"WindowBuildError","","",null,null],[13,"HeightOverflows","","",56,null],[13,"WidthOverflows","","",56,null],[13,"InvalidTitle","","",56,null],[13,"SdlError","","",56,null],[5,"drivers","","Gets an iterator of all video drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[0,"gl_attr","","OpenGL context getters and setters",null,null],[3,"GLAttr","sdl2::video::gl_attr","OpenGL context getters and setters. Obtain with `VideoSubsystem::gl_attr()`.",null,null],[3,"ContextFlagsBuilder","","The type that allows you to build a OpenGL context configuration.",null,null],[3,"ContextFlags","","",null,null],[11,"gl_attr","sdl2","Obtains access to the OpenGL window attributes.",2,{"inputs":[{"name":"self"}],"output":{"name":"glattr"}}],[11,"set_red_size","sdl2::video::gl_attr","**Sets** the attribute: the minimum number of bits for the red channel of the color buffer; defaults to 3",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"red_size","","**Gets** the attribute: the minimum number of bits for the red channel of the color buffer; defaults to 3",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_green_size","","**Sets** the attribute: the minimum number of bits for the green channel of the color buffer; defaults to 3",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"green_size","","**Gets** the attribute: the minimum number of bits for the green channel of the color buffer; defaults to 3",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_blue_size","","**Sets** the attribute: the minimum number of bits for the blue channel of the color buffer; defaults to 2",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"blue_size","","**Gets** the attribute: the minimum number of bits for the blue channel of the color buffer; defaults to 2",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_alpha_size","","**Sets** the attribute: the minimum number of bits for the alpha channel of the color buffer; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"alpha_size","","**Gets** the attribute: the minimum number of bits for the alpha channel of the color buffer; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_buffer_size","","**Sets** the attribute: the minimum number of bits for frame buffer size; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"buffer_size","","**Gets** the attribute: the minimum number of bits for frame buffer size; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_double_buffer","","**Sets** the attribute: whether the output is single or double buffered; defaults to double buffering on",57,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"double_buffer","","**Gets** the attribute: whether the output is single or double buffered; defaults to double buffering on",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_depth_size","","**Sets** the attribute: the minimum number of bits in the depth buffer; defaults to 16",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"depth_size","","**Gets** the attribute: the minimum number of bits in the depth buffer; defaults to 16",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_stencil_size","","**Sets** the attribute: the minimum number of bits in the stencil buffer; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"stencil_size","","**Gets** the attribute: the minimum number of bits in the stencil buffer; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_accum_red_size","","**Sets** the attribute: the minimum number of bits for the red channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"accum_red_size","","**Gets** the attribute: the minimum number of bits for the red channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_accum_green_size","","**Sets** the attribute: the minimum number of bits for the green channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"accum_green_size","","**Gets** the attribute: the minimum number of bits for the green channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_accum_blue_size","","**Sets** the attribute: the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"accum_blue_size","","**Gets** the attribute: the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_accum_alpha_size","","**Sets** the attribute: the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"accum_alpha_size","","**Gets** the attribute: the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_stereo","","**Sets** the attribute: whether the output is stereo 3D; defaults to off",57,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"stereo","","**Gets** the attribute: whether the output is stereo 3D; defaults to off",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_multisample_buffers","","**Sets** the attribute: the number of buffers used for multisample anti-aliasing; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"multisample_buffers","","**Gets** the attribute: the number of buffers used for multisample anti-aliasing; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_multisample_samples","","**Sets** the attribute: the number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"multisample_samples","","**Gets** the attribute: the number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_accelerated_visual","","**Sets** the attribute: whether to require hardware acceleration; false to force software rendering; defaults to allow either",57,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"accelerated_visual","","**Gets** the attribute: whether to require hardware acceleration; false to force software rendering; defaults to allow either",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_context_major_version","","**Sets** the attribute: OpenGL context major version",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"context_major_version","","**Gets** the attribute: OpenGL context major version",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_context_minor_version","","**Sets** the attribute: OpenGL context minor version",57,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"context_minor_version","","**Gets** the attribute: OpenGL context minor version",57,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_context_profile","","**Sets** the attribute: type of GL context (Core, Compatibility, ES)",57,{"inputs":[{"name":"self"},{"name":"glprofile"}],"output":null}],[11,"context_profile","","**Gets** the attribute: type of GL context (Core, Compatibility, ES)",57,{"inputs":[{"name":"self"}],"output":{"name":"glprofile"}}],[11,"set_share_with_current_context","","**Sets** the attribute: OpenGL context sharing; defaults to false",57,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"share_with_current_context","","**Gets** the attribute: OpenGL context sharing; defaults to false",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_framebuffer_srgb_compatible","","**Sets** the attribute: requests sRGB capable visual; defaults to false (>= SDL 2.0.1)",57,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"framebuffer_srgb_compatible","","**Gets** the attribute: requests sRGB capable visual; defaults to false (>= SDL 2.0.1)",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_context_version","","**Sets** the OpenGL context major and minor versions.",57,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"u8"}],"output":null}],[11,"context_version","","**Gets** the OpenGL context major and minor versions as a tuple.",57,null],[11,"set","","Finishes the builder and applies the GL context flags to the GL context.",58,{"inputs":[{"name":"self"}],"output":null}],[11,"debug","","Sets the context into \"debug\" mode.",58,{"inputs":[{"name":"self"}],"output":{"name":"contextflagsbuilder"}}],[11,"forward_compatible","","Sets the context into \"forward compatible\" mode.",58,{"inputs":[{"name":"self"}],"output":{"name":"contextflagsbuilder"}}],[11,"robust_access","","",58,{"inputs":[{"name":"self"}],"output":{"name":"contextflagsbuilder"}}],[11,"reset_isolation","","",58,{"inputs":[{"name":"self"}],"output":{"name":"contextflagsbuilder"}}],[11,"has_debug","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_forward_compatible","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_robust_access","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_reset_isolation","","",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_context_flags","","**Sets** any combination of OpenGL context configuration flags.",57,{"inputs":[{"name":"self"}],"output":{"name":"contextflagsbuilder"}}],[11,"context_flags","","**Gets** the applied OpenGL context configuration flags.",57,{"inputs":[{"name":"self"}],"output":{"name":"contextflags"}}],[11,"clone","sdl2::video","",53,{"inputs":[{"name":"self"}],"output":{"name":"glprofile"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"displaymode"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"displaymode"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"displaymode"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",52,{"inputs":[{"name":"pixelformatenum"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"displaymode"}}],[11,"from_ll","","",52,{"inputs":[{"name":"sdl_displaymode"}],"output":{"name":"displaymode"}}],[11,"to_ll","","",52,{"inputs":[{"name":"self"}],"output":{"name":"sdl_displaymode"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"fullscreentype"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"fullscreentype"}],"output":{"name":"bool"}}],[11,"hash","","",54,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_window_flags","","",54,{"inputs":[{"name":"u32"}],"output":{"name":"fullscreentype"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"windowpos"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"windowpos"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"windowpos"}],"output":{"name":"bool"}}],[11,"hash","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",60,{"inputs":[{"name":"self"}],"output":null}],[11,"is_current","","Returns true if the OpenGL context is the current one in the thread.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"raw","","",60,{"inputs":[{"name":"self"}],"output":{"name":"sdl_glcontext"}}],[11,"window","sdl2","Initializes a new `WindowBuilder`; a convenience method that calls `WindowBuilder::new()`.",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"current_video_driver","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"num_video_displays","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"display_name","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"string"}}],[11,"display_bounds","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"num_display_modes","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"display_mode","","",2,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"desktop_display_mode","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"current_display_mode","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"closest_display_mode","","",2,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"displaymode"}],"output":{"name":"result"}}],[11,"display_dpi","","Return a triplet `(ddpi, hdpi, vdpi)` containing the diagonal, horizontal and vertical dots/pixels-per-inch of a display",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_screen_saver_enabled","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"enable_screen_saver","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"disable_screen_saver","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"gl_load_library_default","","Loads the default OpenGL library.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"gl_load_library","","Loads the OpenGL library using a platform-dependent OpenGL library name (usually a file path).",2,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"gl_unload_library","","Unloads the current OpenGL library.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"gl_get_proc_address","","Gets the pointer to the named OpenGL function.",2,null],[11,"gl_extension_supported","","",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"gl_get_current_window_id","","",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"gl_release_current_context","","Releases the thread's current OpenGL context, i.e. sets the current OpenGL context to nothing.",2,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"gl_set_swap_interval","","",2,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"gl_get_swap_interval","","",2,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"drop","sdl2::video","",61,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",56,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes a new `WindowBuilder`.",62,{"inputs":[{"name":"videosubsystem"},{"name":"str"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",62,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"window_flags","","Gets the underlying window flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_window_flags","","Sets the underlying window flags. This will effectively undo any previous build operations, excluding window size and position.",62,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"position","","Sets the window position.",62,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"windowbuilder"}}],[11,"position_centered","","Centers the window.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"fullscreen","","Sets the window to fullscreen.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"fullscreen_desktop","","Sets the window to fullscreen at the current desktop resolution.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"opengl","","Sets the window to be usable with an OpenGL context",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"hidden","","Hides the window.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"borderless","","Removes the window decoration.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"resizable","","Sets the window to be resizable.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"minimized","","Minimizes the window.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"maximized","","Maximizes the window.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"input_grabbed","","Sets the window to have grabbed input focus.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"allow_highdpi","","Creates the window in high-DPI mode if supported (>= SDL 2.0.1)",62,{"inputs":[{"name":"self"}],"output":{"name":"windowbuilder"}}],[11,"raw","","",61,null],[11,"from_ll","","",61,null],[11,"subsystem","","",61,{"inputs":[{"name":"self"}],"output":{"name":"videosubsystem"}}],[11,"renderer","","Initializes a new `RendererBuilder`; a convenience method that calls `RendererBuilder::new()`.",61,{"inputs":[{"name":"self"}],"output":{"name":"rendererbuilder"}}],[11,"deref","","",61,{"inputs":[{"name":"self"}],"output":{"name":"windowref"}}],[11,"deref_mut","","",61,{"inputs":[{"name":"self"}],"output":{"name":"windowref"}}],[11,"raw","","",63,null],[11,"from_ll","","",63,null],[11,"from_ll_mut","","",63,null],[11,"id","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"gl_create_context","","",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"gl_set_context_to_current","","Set the window's OpenGL context to the current context on the thread.",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"gl_make_current","","",63,{"inputs":[{"name":"self"},{"name":"glcontext"}],"output":{"name":"result"}}],[11,"gl_swap_window","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"display_index","","",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_display_mode","","",63,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"result"}}],[11,"display_mode","","",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"window_pixel_format","","",63,{"inputs":[{"name":"self"}],"output":{"name":"pixelformatenum"}}],[11,"window_flags","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_title","","",63,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"title","","",63,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_icon","","",63,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"set_position","","",63,{"inputs":[{"name":"self"},{"name":"windowpos"},{"name":"windowpos"}],"output":null}],[11,"position","","",63,null],[11,"set_size","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"size","","",63,null],[11,"drawable_size","","",63,null],[11,"set_minimum_size","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"minimum_size","","",63,null],[11,"set_maximum_size","","",63,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"maximum_size","","",63,null],[11,"set_bordered","","",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"show","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"hide","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"raise","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"maximize","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"minimize","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"restore","","",63,{"inputs":[{"name":"self"}],"output":null}],[11,"fullscreen_state","","",63,{"inputs":[{"name":"self"}],"output":{"name":"fullscreentype"}}],[11,"set_fullscreen","","",63,{"inputs":[{"name":"self"},{"name":"fullscreentype"}],"output":{"name":"result"}}],[11,"surface","","",63,{"inputs":[{"name":"self"},{"name":"eventpump"}],"output":{"name":"result"}}],[11,"surface_mut","","",63,{"inputs":[{"name":"self"},{"name":"eventpump"}],"output":{"name":"result"}}],[11,"update_surface","","",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"update_surface_rects","","",63,null],[11,"set_grab","","",63,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"grab","","",63,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_brightness","","",63,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"result"}}],[11,"brightness","","",63,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_gamma_ramp","","",63,{"inputs":[{"name":"self"},{"name":"r"},{"name":"g"},{"name":"b"}],"output":{"name":"result"}}],[11,"gamma_ramp","","",63,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"driveriterator"}}],[11,"next","","",64,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[0,"timer","sdl2","",null,null],[3,"Timer","sdl2::timer","",null,null],[6,"TimerCallback","","",null,null],[11,"add_timer","sdl2","Constructs a new timer using the boxed closure `callback`.",65,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"timercallback"}],"output":{"name":"timer"}}],[11,"ticks","","Gets the number of milliseconds elapsed since the timer subsystem was initialized.",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"delay","","Sleeps the current thread for the specified amount of milliseconds.",65,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"performance_counter","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"performance_frequency","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"into_inner","sdl2::timer","Returns the closure as a trait-object and cancels the timer by consuming it...",66,{"inputs":[{"name":"self"}],"output":{"name":"timercallback"}}],[11,"drop","","",66,{"inputs":[{"name":"self"}],"output":null}],[0,"render","sdl2","2D accelerated rendering",null,null],[3,"RendererInfo","sdl2::render","A structure that contains information on the capabilities of a render driver or the current render context.",null,null],[12,"name","","",67,null],[12,"flags","","",67,null],[12,"texture_formats","","",67,null],[12,"max_texture_width","","",67,null],[12,"max_texture_height","","",67,null],[3,"Renderer","","2D rendering context",null,null],[3,"RendererBuilder","","The type that allows you to build Window-based renderers.",null,null],[3,"RenderTarget","","A handle for getting/setting the render target of the render context.",null,null],[3,"TextureQuery","","",null,null],[12,"format","","",68,null],[12,"access","","",68,null],[12,"width","","",68,null],[12,"height","","",68,null],[3,"Texture","","A texture for a rendering context.",null,null],[3,"DriverIterator","","",null,null],[4,"TextureAccess","","",null,null],[13,"Static","","",69,null],[13,"Streaming","","",69,null],[13,"Target","","",69,null],[4,"BlendMode","","",null,null],[13,"None","","",70,null],[13,"Blend","","",70,null],[13,"Add","","",70,null],[13,"Mod","","",70,null],[4,"RendererParent","","",null,null],[13,"Surface","","",71,null],[13,"Window","","",71,null],[4,"TextureValueError","","",null,null],[13,"WidthOverflows","","",72,null],[13,"HeightOverflows","","",72,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",72,null],[13,"SdlError","","",72,null],[4,"UpdateTextureError","","",null,null],[13,"PitchOverflows","","",73,null],[13,"PitchMustBeMultipleOfTwoForFormat","","",73,null],[13,"XMustBeMultipleOfTwoForFormat","","",73,null],[13,"YMustBeMultipleOfTwoForFormat","","",73,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",73,null],[13,"HeightMustBeMultipleOfTwoForFormat","","",73,null],[13,"SdlError","","",73,null],[4,"UpdateTextureYUVError","","",null,null],[13,"PitchOverflows","","",74,null],[12,"plane","sdl2::render::UpdateTextureYUVError","",74,null],[12,"value","","",74,null],[13,"InvalidPlaneLength","sdl2::render","",74,null],[12,"plane","sdl2::render::UpdateTextureYUVError","",74,null],[12,"length","","",74,null],[12,"pitch","","",74,null],[12,"height","","",74,null],[13,"XMustBeMultipleOfTwoForFormat","sdl2::render","",74,null],[13,"YMustBeMultipleOfTwoForFormat","","",74,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",74,null],[13,"HeightMustBeMultipleOfTwoForFormat","","",74,null],[13,"RectNotInsideTexture","","",74,null],[13,"SdlError","","",74,null],[5,"drivers","","Gets an iterator of all render drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"textureaccess"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"textureaccess"}],"output":{"name":"bool"}}],[11,"hash","","",69,null],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i64","","",69,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",69,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"rendererinfo"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"rendererinfo"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"rendererinfo"}],"output":{"name":"bool"}}],[11,"hash","","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"blendmode"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"blendmode"}],"output":{"name":"bool"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i64","","",70,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",70,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_ll","","",67,{"inputs":[{"name":"sdl_rendererinfo"}],"output":{"name":"rendererinfo"}}],[11,"drop","","",75,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Initializes a new `RendererBuilder`.",76,{"inputs":[{"name":"window"}],"output":{"name":"rendererbuilder"}}],[11,"build","","Builds the renderer.",76,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"index","","Sets the index of the rendering driver to initialize. If you desire the first rendering driver to support the flags provided, or if you're translating code from C which passes -1 for the index, **do not** invoke the `index` method.",76,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"rendererbuilder"}}],[11,"software","","Set the renderer to a software fallback. This flag is accumulative, and may be specified with other flags.",76,{"inputs":[{"name":"self"}],"output":{"name":"rendererbuilder"}}],[11,"accelerated","","Set the renderer to use hardware acceleration. This flag is accumulative, and may be specified with other flags.",76,{"inputs":[{"name":"self"}],"output":{"name":"rendererbuilder"}}],[11,"present_vsync","","Synchronize renderer `present` method calls with the refresh rate. This flag is accumulative, and may be specified with other flags.",76,{"inputs":[{"name":"self"}],"output":{"name":"rendererbuilder"}}],[11,"target_texture","","Set the renderer to support rendering to a texture. This flag is accumulative, and may be specified with other flags.",76,{"inputs":[{"name":"self"}],"output":{"name":"rendererbuilder"}}],[11,"from_surface","","Creates a 2D software rendering context for a surface.",75,{"inputs":[{"name":"surface"}],"output":{"name":"result"}}],[11,"info","","Gets information about the rendering context.",75,{"inputs":[{"name":"self"}],"output":{"name":"rendererinfo"}}],[11,"window","","Gets the associated window reference of the Renderer, if there is one.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"window_mut","","Gets the associated window reference of the Renderer, if there is one.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"surface","","Gets the associated surface reference of the Renderer, if there is one.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"surface_mut","","Gets the associated surface reference of the Renderer, if there is one.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_window","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_surface","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"raw","","Unwraps the window or surface the rendering context was created from.",75,null],[11,"from_ll","","",75,null],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",72,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"create_texture","","Creates a texture for a rendering context.",75,{"inputs":[{"name":"self"},{"name":"pixelformatenum"},{"name":"textureaccess"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"create_texture_static","","Shorthand for `create_texture(format, TextureAccess::Static, size)`",75,{"inputs":[{"name":"self"},{"name":"pixelformatenum"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"create_texture_streaming","","Shorthand for `create_texture(format, TextureAccess::Streaming, size)`",75,{"inputs":[{"name":"self"},{"name":"pixelformatenum"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"create_texture_target","","Shorthand for `create_texture(format, TextureAccess::Target, size)`",75,{"inputs":[{"name":"self"},{"name":"pixelformatenum"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"create_texture_from_surface","","Creates a texture from an existing surface. # Remarks The access hint for the created texture is `TextureAccess::Static`.",75,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"render_target_supported","","Determine whether a window supports the use of render targets.",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"render_target","","Gets the render target handle.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line and Clear).",75,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[11,"draw_color","","Gets the color used for drawing operations (Rect, Line and Clear).",75,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",75,{"inputs":[{"name":"self"},{"name":"blendmode"}],"output":null}],[11,"blend_mode","","Gets the blend mode used for drawing operations.",75,{"inputs":[{"name":"self"}],"output":{"name":"blendmode"}}],[11,"clear","","Clears the current rendering target with the drawing color.",75,{"inputs":[{"name":"self"}],"output":null}],[11,"present","","Updates the screen with any rendering performed since the previous call.",75,{"inputs":[{"name":"self"}],"output":null}],[11,"output_size","","Gets the output size of a rendering context.",75,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_logical_size","","Sets a device independent resolution for rendering.",75,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"logical_size","","Gets device independent resolution for rendering.",75,null],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",75,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"viewport","","Gets the drawing area for the current target.",75,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified target.",75,{"inputs":[{"name":"self"},{"name":"r"}],"output":null}],[11,"clip_rect","","Gets the clip rectangle for the current target.",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"set_scale","","Sets the drawing scale for rendering on the current target.",75,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":{"name":"result"}}],[11,"scale","","Gets the drawing scale for the current target.",75,null],[11,"draw_point","","Draws a point on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"draw_points","","Draws multiple points on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"draw_line","","Draws a line on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,{"inputs":[{"name":"self"},{"name":"p1"},{"name":"p2"}],"output":{"name":"result"}}],[11,"draw_lines","","Draws a series of connected lines on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"draw_rect","","Draws a rectangle on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,{"inputs":[{"name":"self"},{"name":"rect"}],"output":{"name":"result"}}],[11,"draw_rects","","Draws some number of rectangles on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,null],[11,"fill_rect","","Fills a rectangle on the current rendering target with the drawing color. Passing None will fill the entire rendering target. Errors if drawing fails for any reason (e.g. driver failure)",75,{"inputs":[{"name":"self"},{"name":"r"}],"output":{"name":"result"}}],[11,"fill_rects","","Fills some number of rectangles on the current rendering target with the drawing color. Errors if drawing fails for any reason (e.g. driver failure)",75,null],[11,"copy","","Copies a portion of the texture to the current rendering target.",75,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"r1"},{"name":"r2"}],"output":{"name":"result"}}],[11,"copy_ex","","Copies a portion of the texture to the current rendering target, optionally rotating it by angle around the given center and also flipping it top-bottom and/or left-right.",75,{"inputs":[{"name":"self"},{"name":"texture"},{"name":"r1"},{"name":"r2"},{"name":"f64"},{"name":"p"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"read_pixels","","Reads pixels from the current rendering target. # Remarks WARNING: This is a very slow operation, and should not be used frequently.",75,{"inputs":[{"name":"self"},{"name":"r"},{"name":"pixelformatenum"}],"output":{"name":"result"}}],[11,"reset","","Resets the render target to the default render target.",77,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set","","Sets the render target to the provided texture. The texture must be created with the texture access: `sdl2::render::TextureAccess::Target`.",77,{"inputs":[{"name":"self"},{"name":"texture"}],"output":{"name":"result"}}],[11,"create_and_set","","Creates a new texture and sets it as the render target.",77,{"inputs":[{"name":"self"},{"name":"pixelformatenum"},{"name":"u32"},{"name":"u32"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"texturequery"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"texturequery"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"texturequery"}],"output":{"name":"bool"}}],[11,"hash","","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",78,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",73,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",74,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"query","","Queries the attributes of the texture.",78,{"inputs":[{"name":"self"}],"output":{"name":"texturequery"}}],[11,"set_color_mod","","Sets an additional color value multiplied into render copy operations.",78,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":null}],[11,"color_mod","","Gets the additional color value multiplied into render copy operations.",78,null],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render copy operations.",78,{"inputs":[{"name":"self"},{"name":"u8"}],"output":null}],[11,"alpha_mod","","Gets the additional alpha value multiplied into render copy operations.",78,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"set_blend_mode","","Sets the blend mode for a texture, used by `Renderer::copy()`.",78,{"inputs":[{"name":"self"},{"name":"blendmode"}],"output":null}],[11,"blend_mode","","Gets the blend mode used for texture copy operations.",78,{"inputs":[{"name":"self"}],"output":{"name":"blendmode"}}],[11,"update","","Updates the given texture rectangle with new pixel data.",78,null],[11,"update_yuv","","Updates a rectangle within a planar YV12 or IYUV texture with new pixel data.",78,null],[11,"with_lock","","Locks the texture for **write-only** pixel access. The texture must have been created with streaming access.",78,{"inputs":[{"name":"self"},{"name":"r2"},{"name":"f"}],"output":{"name":"result"}}],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current context for use with when rendering OpenGL primitives directly.",78,null],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",78,{"inputs":[{"name":"self"}],"output":null}],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the current context.",78,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"r"}}],[11,"from_ll","","",78,null],[11,"raw","","",78,null],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"driveriterator"}}],[11,"next","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[0,"rwops","sdl2","",null,null],[3,"RWops","sdl2::rwops","A structure that provides an abstract interface to stream I/O.",null,null],[11,"raw","","",80,null],[11,"from_ll","","",80,null],[11,"from_file","","Creates an SDL file stream.",80,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_bytes","","Prepares a read-only memory buffer for use with `RWops`.",80,null],[11,"from_read","","Reads a `Read` object into a buffer and then passes it to `RWops.from_bytes`.",80,{"inputs":[{"name":"t"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_bytes_mut","","Prepares a read-write memory buffer for use with `RWops`.",80,null],[11,"len","","Gets the stream's total size in bytes.",80,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",80,{"inputs":[{"name":"self"}],"output":null}],[11,"read","","",80,null],[11,"write","","",80,null],[11,"flush","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"seek","","",80,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"name":"result"}}],[0,"log","sdl2","",null,null],[4,"Category","sdl2::log","",null,null],[13,"Application","","",81,null],[13,"Error","","",81,null],[13,"Assert","","",81,null],[13,"System","","",81,null],[13,"Audio","","",81,null],[13,"Video","","",81,null],[13,"Render","","",81,null],[13,"Input","","",81,null],[13,"Test","","",81,null],[13,"Custom","","",81,null],[13,"Unknown","","",81,null],[4,"Priority","","",null,null],[13,"Verbose","","",82,null],[13,"Debug","","",82,null],[13,"Info","","",82,null],[13,"Warn","","",82,null],[13,"Error","","",82,null],[13,"Critical","","",82,null],[5,"set_output_function","","",null,null],[5,"log","","Standard log function which takes as priority INFO and as category APPLICATION",null,{"inputs":[{"name":"str"}],"output":null}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"category"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"category"}],"output":{"name":"bool"}}],[11,"hash","","",81,null],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"priority"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"priority"}],"output":{"name":"bool"}}],[11,"hash","","",82,null],[11,"clone","sdl2","",0,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"audio","","Initializes the audio subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"event","","Initializes the event subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"joystick","","Initializes the joystick subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"haptic","","Initializes the haptic subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"game_controller","","Initializes the game controller subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"timer","","Initializes the timer subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"video","","Initializes the video subsystem.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"event_pump","","Obtains the SDL event pump.",31,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"audiosubsystem"}}],[11,"sdl","","Obtain an SDL context.",83,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"gamecontrollersubsystem"}}],[11,"sdl","","Obtain an SDL context.",21,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"hapticsubsystem"}}],[11,"sdl","","Obtain an SDL context.",23,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"joysticksubsystem"}}],[11,"sdl","","Obtain an SDL context.",14,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"videosubsystem"}}],[11,"sdl","","Obtain an SDL context.",2,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"timersubsystem"}}],[11,"sdl","","Obtain an SDL context.",65,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"eventsubsystem"}}],[11,"sdl","","Obtain an SDL context.",7,{"inputs":[{"name":"self"}],"output":{"name":"sdl"}}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[0,"audio","","Audio Functions",null,null],[3,"DriverIterator","sdl2::audio","",null,null],[3,"AudioSpecWAV","","",null,null],[12,"freq","","",84,null],[12,"format","","",84,null],[12,"channels","","",84,null],[3,"AudioSpecDesired","","",null,null],[12,"freq","","DSP frequency (samples per second). Set to None for the device's fallback frequency.",85,null],[12,"channels","","Number of separate audio channels. Set to None for the device's fallback number of channels.",85,null],[12,"samples","","Audio buffer size in samples (power of 2). Set to None for the device's fallback sample size.",85,null],[3,"AudioSpec","","",null,null],[12,"freq","","",86,null],[12,"format","","",86,null],[12,"channels","","",86,null],[12,"silence","","",86,null],[12,"samples","","",86,null],[12,"size","","",86,null],[3,"AudioQueue","","Wraps SDL_AudioDeviceID and owns the callback data used by the audio device.",null,null],[3,"AudioDevice","","Wraps SDL_AudioDeviceID and owns the callback data used by the audio device.",null,null],[3,"AudioDeviceLockGuard","","Similar to `std::sync::MutexGuard`, but for use with `AudioDevice::lock()`.",null,null],[3,"AudioCVT","","",null,null],[4,"AudioFormat","","",null,null],[13,"U8","","Unsigned 8-bit samples",87,null],[13,"S8","","Signed 8-bit samples",87,null],[13,"U16LSB","","Unsigned 16-bit samples, little-endian",87,null],[13,"U16MSB","","Unsigned 16-bit samples, big-endian",87,null],[13,"S16LSB","","Signed 16-bit samples, little-endian",87,null],[13,"S16MSB","","Signed 16-bit samples, big-endian",87,null],[13,"S32LSB","","Signed 32-bit samples, little-endian",87,null],[13,"S32MSB","","Signed 32-bit samples, big-endian",87,null],[13,"F32LSB","","32-bit floating point samples, little-endian",87,null],[13,"F32MSB","","32-bit floating point samples, big-endian",87,null],[4,"AudioStatus","","",null,null],[13,"Stopped","","",88,null],[13,"Playing","","",88,null],[13,"Paused","","",88,null],[5,"drivers","","Gets an iterator of all audio drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[8,"AudioCallback","","",null,null],[16,"Channel","","",89,null],[10,"callback","","",89,null],[8,"AudioFormatNum","","A phantom type for retreiving the SDL_AudioFormat of a given generic type. All format types are returned as native-endian.",null,null],[10,"audio_format","","",90,{"inputs":[],"output":{"name":"audioformat"}}],[10,"zero","","",90,{"inputs":[],"output":{"name":"self"}}],[11,"open_playback","sdl2","Opens a new audio device given the desired parameters and callback.",83,{"inputs":[{"name":"self"},{"name":"d"},{"name":"audiospecdesired"},{"name":"f"}],"output":{"name":"result"}}],[11,"open_queue","","Opens a new audio device which uses queueing rather than older callback method.",83,{"inputs":[{"name":"self"},{"name":"d"},{"name":"audiospecdesired"}],"output":{"name":"result"}}],[11,"current_audio_driver","","",83,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"num_audio_playback_devices","","",83,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"audio_playback_device_name","","",83,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"clone","sdl2::audio","",87,{"inputs":[{"name":"self"}],"output":{"name":"audioformat"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"audioformat"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",87,null],[11,"u16_sys","","Unsigned 16-bit samples, native endian",87,{"inputs":[],"output":{"name":"audioformat"}}],[11,"s16_sys","","Signed 16-bit samples, native endian",87,{"inputs":[],"output":{"name":"audioformat"}}],[11,"s32_sys","","Signed 32-bit samples, native endian",87,{"inputs":[],"output":{"name":"audioformat"}}],[11,"f32_sys","","32-bit floating point samples, native endian",87,{"inputs":[],"output":{"name":"audioformat"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"audiostatus"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"audiostatus"}],"output":{"name":"bool"}}],[11,"hash","","",88,null],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_i64","","",88,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",88,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"driveriterator"}}],[11,"next","","",91,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"load_wav","","Loads a WAVE from the file path.",84,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"load_wav_rw","","Loads a WAVE from the data source.",84,{"inputs":[{"name":"rwops"}],"output":{"name":"result"}}],[11,"buffer","","",84,null],[11,"drop","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"audiospecdesired"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"audiospec"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"audiospec"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"audiospec"}],"output":{"name":"bool"}}],[11,"hash","","",86,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"open_queue","","Opens a new audio device given the desired parameters and callback.",92,{"inputs":[{"name":"audiosubsystem"},{"name":"d"},{"name":"audiospecdesired"}],"output":{"name":"result"}}],[11,"subsystem","","",92,{"inputs":[{"name":"self"}],"output":{"name":"audiosubsystem"}}],[11,"spec","","",92,{"inputs":[{"name":"self"}],"output":{"name":"audiospec"}}],[11,"status","","",92,{"inputs":[{"name":"self"}],"output":{"name":"audiostatus"}}],[11,"pause","","Pauses playback of the audio device.",92,{"inputs":[{"name":"self"}],"output":null}],[11,"resume","","Starts playback of the audio device.",92,{"inputs":[{"name":"self"}],"output":null}],[11,"queue","","Adds data to the audio queue.",92,null],[11,"size","","",92,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clear","","Clears all data from the current audio queue.",92,{"inputs":[{"name":"self"}],"output":null}],[11,"open_playback","","Opens a new audio device given the desired parameters and callback.",93,{"inputs":[{"name":"audiosubsystem"},{"name":"d"},{"name":"audiospecdesired"},{"name":"f"}],"output":{"name":"result"}}],[11,"subsystem","","",93,{"inputs":[{"name":"self"}],"output":{"name":"audiosubsystem"}}],[11,"spec","","",93,{"inputs":[{"name":"self"}],"output":{"name":"audiospec"}}],[11,"status","","",93,{"inputs":[{"name":"self"}],"output":{"name":"audiostatus"}}],[11,"pause","","Pauses playback of the audio device.",93,{"inputs":[{"name":"self"}],"output":null}],[11,"resume","","Starts playback of the audio device.",93,{"inputs":[{"name":"self"}],"output":null}],[11,"lock","","Locks the audio device using `SDL_LockAudioDevice`.",93,{"inputs":[{"name":"self"}],"output":{"name":"audiodevicelockguard"}}],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from being dropped.",93,{"inputs":[{"name":"self"}],"output":{"name":"cb"}}],[11,"deref","","",94,{"inputs":[{"name":"self"}],"output":{"name":"cb"}}],[11,"deref_mut","","",94,{"inputs":[{"name":"self"}],"output":{"name":"cb"}}],[11,"drop","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"audiocvt"}}],[11,"new","","",95,{"inputs":[{"name":"audioformat"},{"name":"u8"},{"name":"i32"},{"name":"audioformat"},{"name":"u8"},{"name":"i32"}],"output":{"name":"result"}}],[11,"convert","","Convert audio data to a desired audio format.",95,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"vec"}}],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer that goes into `convert()` is unchanged from the result.",95,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"capacity","","Gets the buffer capacity that can contain both the original and converted data.",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"version","sdl2","Querying SDL Version",null,null],[3,"Version","sdl2::version","A structure that contains information about the version of SDL in use.",null,null],[12,"major","","major version",96,null],[12,"minor","","minor version",96,null],[12,"patch","","update version (patchlevel)",96,null],[5,"version","","Get the version of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"version"}}],[5,"revision","","Get the code revision of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"string"}}],[5,"revision_number","","Get the revision number of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"i32"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"hash","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ll","","Convert a raw *SDL_version to Version.",96,{"inputs":[{"name":"sdl_version"}],"output":{"name":"version"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"messagebox","sdl2","",null,null],[3,"MessageBoxFlag","sdl2::messagebox","",null,null],[3,"MessageBoxButtonFlag","","",null,null],[3,"MessageBoxColorScheme","","",null,null],[12,"background","","",97,null],[12,"text","","",97,null],[12,"button_border","","",97,null],[12,"button_background","","",97,null],[12,"button_selected","","",97,null],[3,"ButtonData","","button_id is the integer that will be returned by show_message_box. It is not sed by SDL2, and should only be used to know which button has been triggered",null,null],[12,"flags","","",98,null],[12,"button_id","","",98,null],[12,"text","","",98,null],[4,"ClickedButton","","",null,null],[13,"CloseButton","","",99,null],[13,"CustomButton","","",99,null],[4,"ShowMessageError","","",null,null],[13,"InvalidTitle","","",100,null],[13,"InvalidMessage","","",100,null],[13,"InvalidButton","","Second argument of the tuple (i32) corresponds to the first button_id having an error",100,null],[13,"SdlError","","",100,null],[5,"show_simple_message_box","","Show a simple message box, meant to be informative only.",null,{"inputs":[{"name":"messageboxflag"},{"name":"str"},{"name":"str"},{"name":"w"}],"output":{"name":"result"}}],[5,"show_message_box","","Show a customizable message box.",null,null],[17,"MESSAGEBOX_ERROR","","",null,null],[17,"MESSAGEBOX_WARNING","","",null,null],[17,"MESSAGEBOX_INFORMATION","","",null,null],[17,"MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","",null,null],[17,"MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","",null,null],[17,"MESSAGEBOX_BUTTON_NOTHING","","",null,null],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"messageboxflag"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"cmp","","",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"ordering"}}],[11,"hash","","",101,null],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"messageboxflag"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"messageboxflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",101,{"inputs":[{"name":"u32"}],"output":{"name":"messageboxflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"bitor_assign","","Adds the set of flags.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":{"name":"messageboxflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",101,{"inputs":[{"name":"self"},{"name":"messageboxflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"self"}],"output":{"name":"messageboxflag"}}],[11,"extend","","",101,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"messageboxflag"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"messageboxbuttonflag"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"cmp","","",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"ordering"}}],[11,"hash","","",102,null],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",102,{"inputs":[],"output":{"name":"messageboxbuttonflag"}}],[11,"all","","Returns the set containing all flags.",102,{"inputs":[],"output":{"name":"messageboxbuttonflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",102,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",102,{"inputs":[{"name":"u32"}],"output":{"name":"messageboxbuttonflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"messageboxbuttonflag"}}],[11,"bitor_assign","","Adds the set of flags.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"messageboxbuttonflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"messageboxbuttonflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":{"name":"messageboxbuttonflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",102,{"inputs":[{"name":"self"},{"name":"messageboxbuttonflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",102,{"inputs":[{"name":"self"}],"output":{"name":"messageboxbuttonflag"}}],[11,"extend","","",102,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",102,{"inputs":[{"name":"t"}],"output":{"name":"messageboxbuttonflag"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into","","",97,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxcolorscheme"}}],[11,"from","","",97,{"inputs":[{"name":"sdl_messageboxcolorscheme"}],"output":{"name":"messageboxcolorscheme"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",100,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"hint","sdl2","",null,null],[4,"Hint","sdl2::hint","",null,null],[13,"Default","","",103,null],[13,"Normal","","",103,null],[13,"Override","","",103,null],[5,"set_video_minimize_on_focus_lost","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",null,{"inputs":[{"name":"bool"}],"output":{"name":"bool"}}],[5,"set_video_minimize_on_focus_lost_with_priority","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",null,{"inputs":[{"name":"bool"},{"name":"hint"}],"output":{"name":"bool"}}],[5,"get_video_minimize_on_focus_lost","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"set","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"get","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"set_with_priority","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"hint"}],"output":{"name":"bool"}}],[0,"ttf","sdl2","",null,null],[3,"Sdl2TtfContext","sdl2::ttf","A context manager for `SDL2_TTF` to manage C code initialization and clean-up.",null,null],[3,"Font","","A loaded TTF font.",null,null],[3,"FontStyle","","The styling of a font.",null,null],[3,"GlyphMetrics","","Information about a specific glyph (character) in a font face.",null,null],[12,"minx","","",104,null],[12,"maxx","","",104,null],[12,"miny","","",104,null],[12,"maxy","","",104,null],[12,"advance","","",104,null],[3,"PartialRendering","","A builder for a font rendering.",null,null],[4,"InitError","","An error for when `sdl2_ttf` is attempted initialized twice Necessary for context management, unless we find a way to have a singleton",null,null],[13,"InitializationError","","",105,null],[13,"AlreadyInitializedError","","",105,null],[4,"Hinting","","Information about the hinting of a font. See wikipedia",null,null],[13,"Normal","","",106,null],[13,"Light","","",106,null],[13,"Mono","","",106,null],[13,"None","","",106,null],[4,"FontError","","A font-related error.",null,null],[13,"InvalidLatin1Text","","A Latin-1 encoded byte string is invalid.",107,null],[13,"SdlError","","A SDL2-related error occured.",107,null],[5,"init","","Initializes the truetype font API and returns a context manager which will clean up the library once it goes out of scope.",null,{"inputs":[],"output":{"name":"result"}}],[5,"has_been_initialized","","Returns whether library has been initialized already.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"get_linked_version","","Returns the version of the dynamically linked `SDL_TTF` library",null,{"inputs":[],"output":{"name":"version"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"fontstyle"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"cmp","","",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"ordering"}}],[11,"hash","","",108,null],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",108,{"inputs":[],"output":{"name":"fontstyle"}}],[11,"all","","Returns the set containing all flags.",108,{"inputs":[],"output":{"name":"fontstyle"}}],[11,"bits","","Returns the raw value of the flags currently stored.",108,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",108,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",108,{"inputs":[{"name":"i32"}],"output":{"name":"fontstyle"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",108,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"fontstyle"}}],[11,"bitor_assign","","Adds the set of flags.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"fontstyle"}}],[11,"bitxor_assign","","Toggles the set of flags.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"fontstyle"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":{"name":"fontstyle"}}],[11,"sub_assign","","Disables all flags enabled in the set.",108,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",108,{"inputs":[{"name":"self"}],"output":{"name":"fontstyle"}}],[11,"extend","","",108,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",108,{"inputs":[{"name":"t"}],"output":{"name":"fontstyle"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"hinting"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"hinting"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"glyphmetrics"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"glyphmetrics"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"glyphmetrics"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",107,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",107,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"solid","","Renders the text in *solid* mode. See the SDL2_TTF docs for an explanation.",109,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"fontresult"}}],[11,"shaded","","Renders the text in *shaded* mode. See the SDL2_TTF docs for an explanation.",109,{"inputs":[{"name":"self"},{"name":"t"},{"name":"t"}],"output":{"name":"fontresult"}}],[11,"blended","","Renders the text in *blended* mode. See the SDL2_TTF docs for an explanation.",109,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"fontresult"}}],[11,"blended_wrapped","","Renders the text in *blended* mode but wrapping the words if the width exceeds the given maximum width. See the SDL2_TTF docs for an explanation of the mode.",109,{"inputs":[{"name":"self"},{"name":"t"},{"name":"u32"}],"output":{"name":"fontresult"}}],[11,"drop","","",110,{"inputs":[{"name":"self"}],"output":null}],[11,"render","","Starts specifying a rendering of the given UTF-8-encoded text.",110,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"partialrendering"}}],[11,"render_latin1","","Starts specifying a rendering of the given Latin-1-encoded text.",110,null],[11,"render_char","","Starts specifying a rendering of the given UTF-8-encoded character.",110,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"partialrendering"}}],[11,"size_of","","Returns the width and height of the given text when rendered using this font.",110,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"fontresult"}}],[11,"size_of_latin1","","Returns the width and height of the given text when rendered using this font.",110,null],[11,"size_of_char","","Returns the width and height of the given text when rendered using this font.",110,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"fontresult"}}],[11,"get_style","","Returns the font's style flags.",110,{"inputs":[{"name":"self"}],"output":{"name":"fontstyle"}}],[11,"set_style","","Sets the font's style flags.",110,{"inputs":[{"name":"self"},{"name":"fontstyle"}],"output":null}],[11,"get_outline_width","","Returns the width of the font's outline.",110,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"set_outline_width","","Sets the width of the font's outline.",110,{"inputs":[{"name":"self"},{"name":"u16"}],"output":null}],[11,"get_hinting","","Returns the font's freetype hints.",110,{"inputs":[{"name":"self"}],"output":{"name":"hinting"}}],[11,"set_hinting","","Sets the font's freetype hints.",110,{"inputs":[{"name":"self"},{"name":"hinting"}],"output":null}],[11,"get_kerning","","Returns whether the font is kerning.",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_kerning","","Sets whether the font should use kerning.",110,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"height","","Get font maximum total height.",110,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"ascent","","Returns the font's highest ascent (height above base).",110,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"descent","","Returns the font's lowest descent (height below base). This is a negative number.",110,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"recommended_line_spacing","","Returns the recommended line spacing for text rendered with this font.",110,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"face_count","","Returns the number of faces in this font.",110,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"face_is_fixed_width","","Returns whether the font is monospaced.",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"face_family_name","","Returns the family name of the current font face.",110,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"face_style_name","","Returns the name of the current font face.",110,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"find_glyph","","Returns the index of the given character in this font face.",110,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"option"}}],[11,"find_glyph_metrics","","Returns the glyph metrics of the given character in this font face.",110,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"option"}}],[11,"drop","","",111,{"inputs":[{"name":"self"}],"output":null}],[11,"load_font","","Loads a font from the given file with the given size in points.",111,{"inputs":[{"name":"self"},{"name":"p"},{"name":"u16"}],"output":{"name":"result"}}],[11,"load_font_at_index","","Loads the font at the given index of the file, with the given size in points.",111,{"inputs":[{"name":"self"},{"name":"p"},{"name":"u32"},{"name":"u16"}],"output":{"name":"result"}}],[11,"load_font_from_rwops","","Loads a font from the given SDL2 rwops object with the given size in points.",111,{"inputs":[{"name":"self"},{"name":"rwops"},{"name":"u16"}],"output":{"name":"result"}}],[11,"load_font_at_index_from_rwops","","Loads the font at the given index of the SDL2 rwops object with the given size in points.",111,{"inputs":[{"name":"self"},{"name":"rwops"},{"name":"u32"},{"name":"u16"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",105,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"FontResult","","The result of an `SDL2_TTF` font operation.",null,null],[17,"STYLE_NORMAL","","",null,null],[17,"STYLE_BOLD","","",null,null],[17,"STYLE_ITALIC","","",null,null],[17,"STYLE_UNDERLINE","","",null,null],[17,"STYLE_STRIKETHROUGH","","",null,null],[0,"image","sdl2","",null,null],[3,"InitFlag","sdl2::image","",null,null],[3,"Sdl2ImageContext","","Context manager for `sdl2_image` to manage quiting. Can't do much with it but keep it alive while you are using it.",null,null],[5,"init","","Initializes `SDL2_image` with `InitFlags`. If not every flag is set it returns an error",null,{"inputs":[{"name":"initflag"}],"output":{"name":"result"}}],[5,"get_linked_version","","Returns the version of the dynamically linked `SDL_image` library",null,{"inputs":[],"output":{"name":"version"}}],[17,"INIT_JPG","","",null,null],[17,"INIT_PNG","","",null,null],[17,"INIT_TIF","","",null,null],[17,"INIT_WEBP","","",null,null],[8,"LoadSurface","","Static method extensions for creating Surfaces",null,null],[10,"from_file","","",112,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[10,"from_xpm_array","","",112,null],[8,"SaveSurface","","Method extensions to Surface for saving to disk",null,null],[10,"save","","",113,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"save_rw","","",113,{"inputs":[{"name":"self"},{"name":"rwops"}],"output":{"name":"result"}}],[8,"LoadTexture","","Method extensions for creating Textures from a Renderer",null,null],[10,"load_texture","","",114,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[8,"ImageRWops","","",null,null],[10,"load","","load as a surface. except TGA",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_typed","","load as a surface. This can load all supported image formats.",115,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"load_cur","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_ico","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_bmp","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_pnm","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_xpm","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_xcf","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_pcx","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_gif","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_jpg","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_tif","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_png","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_tga","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_lbm","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_xv","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_webp","","",115,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"is_cur","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_ico","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_bmp","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_pnm","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xpm","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xcf","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_pcx","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_gif","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_jpg","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_tif","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_png","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_lbm","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xv","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_webp","","",115,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"initflag"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"cmp","","",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"ordering"}}],[11,"hash","","",116,null],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",116,{"inputs":[],"output":{"name":"initflag"}}],[11,"all","","Returns the set containing all flags.",116,{"inputs":[],"output":{"name":"initflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",116,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",116,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",116,{"inputs":[{"name":"u32"}],"output":{"name":"initflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"bitor_assign","","Adds the set of flags.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",116,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",116,{"inputs":[{"name":"self"}],"output":{"name":"initflag"}}],[11,"extend","","",116,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",116,{"inputs":[{"name":"t"}],"output":{"name":"initflag"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_file","sdl2::surface","Loads an SDL Surface from a file",45,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_xpm_array","","Loads an SDL Surface from XPM data",45,null],[11,"save","","Saves an SDL Surface to a file",45,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"save_rw","","Saves an SDL Surface to an RWops",45,{"inputs":[{"name":"self"},{"name":"rwops"}],"output":{"name":"result"}}],[11,"load_texture","sdl2::render","Loads an SDL Texture from a file",75,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"drop","sdl2::image","",117,{"inputs":[{"name":"self"}],"output":null}],[11,"load","sdl2::rwops","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_typed","","",80,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"load_cur","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_ico","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_bmp","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_pnm","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_xpm","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_xcf","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_pcx","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_gif","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_jpg","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_tif","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_png","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_tga","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_lbm","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_xv","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_webp","","",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is_cur","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ico","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_bmp","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_pnm","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_xpm","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_xcf","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_pcx","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_gif","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_jpg","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_tif","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_png","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_lbm","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_xv","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_webp","","",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[0,"mixer","sdl2","",null,null],[3,"InitFlag","sdl2::mixer","",null,null],[3,"Sdl2MixerContext","","Context manager for `sdl2_mixer` to manage init and quit",null,null],[3,"Chunk","","The internal format for an audio chunk.",null,null],[12,"raw","","",118,null],[12,"owned","","",118,null],[3,"Channel","","Sound effect channel.",null,null],[3,"Group","","Sound effect channel grouping.",null,null],[3,"Music","","This is an opaque data type used for Music data.",null,null],[12,"raw","","",119,null],[12,"owned","","",119,null],[4,"Fading","","Fader effect type enumerations",null,null],[13,"NoFading","","",120,null],[13,"FadingOut","","",120,null],[13,"FadingIn","","",120,null],[4,"MusicType","","Music type enumerations",null,null],[13,"MusicNone","","",121,null],[13,"MusicCmd","","",121,null],[13,"MusicWav","","",121,null],[13,"MusicMod","","",121,null],[13,"MusicMid","","",121,null],[13,"MusicOgg","","",121,null],[13,"MusicMp3","","",121,null],[13,"MusicMp3Mad","","",121,null],[13,"MusicFlac","","",121,null],[13,"MusicModPlug","","",121,null],[5,"get_linked_version","","Returns the version of the dynamically linked `SDL_mixer` library",null,{"inputs":[],"output":{"name":"version"}}],[5,"init","","Loads dynamic libraries and prepares them for use.  Flags should be one or more flags from `InitFlag`.",null,{"inputs":[{"name":"initflag"}],"output":{"name":"result"}}],[5,"open_audio","","Open the mixer with a certain audio format.",null,{"inputs":[{"name":"i32"},{"name":"audioformat"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"close_audio","","Shutdown and cleanup the mixer API.",null,{"inputs":[],"output":null}],[5,"query_spec","","Get the actual audio format in use by the opened audio device.",null,{"inputs":[],"output":{"name":"result"}}],[5,"get_chunk_decoders_number","","Get the number of sample chunk decoders available from the `Mix_GetChunkDecoder` function.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"get_chunk_decoder","","Get the name of the indexed sample chunk decoder.",null,{"inputs":[{"name":"i32"}],"output":{"name":"string"}}],[5,"channel","","Return a channel object.",null,{"inputs":[{"name":"i32"}],"output":{"name":"channel"}}],[5,"allocate_channels","","Set the number of channels being mixed.",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"set_channel_finished","","When channel playback is halted, then the specified `channel_finished` function is called.",null,null],[5,"unset_channel_finished","","Unhooks the specified function set before, so no function is called when channel playback is halted.",null,{"inputs":[],"output":null}],[5,"get_playing_channels_number","","Returns how many channels are currently playing.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"get_paused_channels_number","","Returns how many channels are currently paused.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"reserve_channels","","Reserve num channels from being used when playing samples when passing in -1 as a channel number to playback functions.",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"get_music_decoders_number","","Get the number of music decoders available.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"get_music_decoder","","Get the name of the indexed music decoder.",null,{"inputs":[{"name":"i32"}],"output":{"name":"string"}}],[6,"AudioFormat","","",null,null],[17,"AUDIO_U8","","",null,null],[17,"AUDIO_S8","","",null,null],[17,"AUDIO_U16LSB","","",null,null],[17,"AUDIO_S16LSB","","",null,null],[17,"AUDIO_U16MSB","","",null,null],[17,"AUDIO_S16MSB","","",null,null],[17,"AUDIO_U16","","",null,null],[17,"AUDIO_S16","","",null,null],[17,"AUDIO_S32LSB","","",null,null],[17,"AUDIO_S32MSB","","",null,null],[17,"AUDIO_S32","","",null,null],[17,"AUDIO_F32LSB","","",null,null],[17,"AUDIO_F32MSB","","",null,null],[17,"AUDIO_F32","","",null,null],[17,"AUDIO_U16SYS","","",null,null],[17,"AUDIO_S16SYS","","",null,null],[17,"AUDIO_S32SYS","","",null,null],[17,"AUDIO_F32SYS","","",null,null],[17,"DEFAULT_FORMAT","","The suggested default is signed 16bit samples in host byte order.",null,null],[17,"DEFAULT_CHANNELS","","Defualt channels: Stereo.",null,null],[17,"DEFAULT_FREQUENCY","","Good default sample rate in Hz (samples per second) for PC sound cards.",null,null],[17,"MAX_VOLUME","","Maximum value for any volume setting.",null,null],[17,"INIT_FLAC","","",null,null],[17,"INIT_MOD","","",null,null],[17,"INIT_MODPLUG","","",null,null],[17,"INIT_MP3","","",null,null],[17,"INIT_OGG","","",null,null],[17,"INIT_FLUIDSYNTH","","",null,null],[8,"LoaderRWops","","Loader trait for `RWops`",null,null],[10,"load_wav","","Load src for use as a sample.",122,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_music","","",122,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"initflag"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"option"}}],[11,"lt","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"le","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"gt","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"ge","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"cmp","","",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"ordering"}}],[11,"hash","","",123,null],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",123,{"inputs":[],"output":{"name":"initflag"}}],[11,"all","","Returns the set containing all flags.",123,{"inputs":[],"output":{"name":"initflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",123,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",123,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",123,{"inputs":[{"name":"u32"}],"output":{"name":"initflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",123,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"bitor_assign","","Adds the set of flags.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":{"name":"initflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",123,{"inputs":[{"name":"self"},{"name":"initflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",123,{"inputs":[{"name":"self"}],"output":{"name":"initflag"}}],[11,"extend","","",123,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",123,{"inputs":[{"name":"t"}],"output":{"name":"initflag"}}],[11,"to_string","","",123,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"drop","","",124,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"chunk"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"chunk"}],"output":{"name":"bool"}}],[11,"drop","","",118,{"inputs":[{"name":"self"}],"output":null}],[11,"from_file","","Load file for use as a sample.",118,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"set_volume","","Set chunk->volume to volume.",118,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_volume","","current volume for the chunk.",118,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"load_wav","sdl2::rwops","Load src for use as a sample.",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"load_music","","Load src for use as music.",80,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","sdl2::mixer","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"fading"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"fading"}],"output":{"name":"bool"}}],[11,"hash","","",120,null],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"channel"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"channel"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"self"},{"name":"channel"}],"output":{"name":"bool"}}],[11,"all","","Represent for all channels (-1)",125,{"inputs":[],"output":{"name":"channel"}}],[11,"post","","This is the MIX_CHANNEL_POST (-2)",125,{"inputs":[],"output":{"name":"channel"}}],[11,"set_volume","","Set the volume for any allocated channel.",125,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_volume","","Returns the channels volume on scale of 0 to 128.",125,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"play","","Play chunk on channel, or if channel is -1, pick the first free unreserved channel.",125,{"inputs":[{"name":"self"},{"name":"chunk"},{"name":"i32"}],"output":{"name":"result"}}],[11,"play_timed","","",125,{"inputs":[{"name":"self"},{"name":"chunk"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fade_in","","Play chunk on channel, or if channel is -1, pick the first free unreserved channel.",125,{"inputs":[{"name":"self"},{"name":"chunk"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fade_in_timed","","",125,{"inputs":[{"name":"self"},{"name":"chunk"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"pause","","Pause channel, or all playing channels if -1 is passed in.",125,{"inputs":[{"name":"self"}],"output":null}],[11,"resume","","Unpause channel, or all playing and paused channels if -1 is passed in.",125,{"inputs":[{"name":"self"}],"output":null}],[11,"halt","","Halt channel playback",125,{"inputs":[{"name":"self"}],"output":null}],[11,"expire","","Halt channel playback, after ticks milliseconds.",125,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"fade_out","","Gradually fade out which channel over ms milliseconds starting from now.",125,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"is_playing","","if channel is playing, or not.",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_paused","","if channel is paused, or not.",125,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_fading","","if channel is fading in, out, or not",125,{"inputs":[{"name":"self"}],"output":{"name":"fading"}}],[11,"get_chunk","","Get the most recent sample chunk pointer played on channel.",125,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"unregister_all_effects","","This removes all effects registered to channel.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_panning","","Sets a panning effect, where left and right is the volume of the left and right channels. They range from 0 (silence) to 255 (loud).",125,{"inputs":[{"name":"self"},{"name":"u8"},{"name":"u8"}],"output":{"name":"result"}}],[11,"unset_panning","","Unregisters panning effect.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_distance","","This effect simulates a simple attenuation of volume due to distance. distance ranges from 0 (close/loud) to 255 (far/quiet).",125,{"inputs":[{"name":"self"},{"name":"u8"}],"output":{"name":"result"}}],[11,"unset_distance","","Unregisters distance effect.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_position","","This effect emulates a simple 3D audio effect. angle ranges from 0 to 360 degrees going clockwise, where 0 is directly in front. distance ranges from 0 (close/loud) to 255 (far/quiet).",125,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"u8"}],"output":{"name":"result"}}],[11,"unset_position","","Unregisters position effect.",125,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"set_reverse_stereo","","Simple reverse stereo, swaps left and right channel sound. true for reverse, false to unregister effect.",125,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"group"}}],[11,"add_channels_range","","Add channels starting at from up through to to group tag, or reset it's group to the default group tag (-1).",126,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"add_channel","","Add which channel to group tag, or reset it's group to the default group tag",126,{"inputs":[{"name":"self"},{"name":"channel"}],"output":{"name":"bool"}}],[11,"count","","Count the number of channels in group",126,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"find_available","","Find the first available (not playing) channel in group",126,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"find_oldest","","Find the oldest actively playing channel in group",126,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"find_newest","","Find the newest, most recently started, actively playing channel in group.",126,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fade_out","","Gradually fade out channels in group over some milliseconds starting from now. Returns the number of channels set to fade out.",126,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"halt","","Halt playback on all channels in group.",126,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"musictype"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"musictype"}],"output":{"name":"bool"}}],[11,"hash","","",121,null],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"music"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"self"},{"name":"music"}],"output":{"name":"bool"}}],[11,"drop","","",119,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","Shows the original regular expression.",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_file","","Load music file to use.",119,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get_type","","The file format encoding of the music.",119,{"inputs":[{"name":"self"}],"output":{"name":"musictype"}}],[11,"play","","Play the loaded music loop times through from start to finish.",119,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fade_in","","Fade in over ms milliseconds of time, the loaded music, playing it loop times through from start to finish.",119,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fade_in_from_pos","","Fade in over ms milliseconds of time, from position.",119,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"f64"}],"output":{"name":"result"}}],[11,"get_volume","","Returns current volume",119,{"inputs":[],"output":{"name":"i32"}}],[11,"set_volume","","Set the volume on a scale of 0 to 128. Values greater than 128 will use 128.",119,{"inputs":[{"name":"i32"}],"output":null}],[11,"pause","","Pause the music playback.",119,{"inputs":[],"output":null}],[11,"resume","","Unpause the music.",119,{"inputs":[],"output":null}],[11,"rewind","","Rewind the music to the start.",119,{"inputs":[],"output":null}],[11,"set_pos","","Set the position of the currently playing music.",119,{"inputs":[{"name":"f64"}],"output":{"name":"result"}}],[11,"set_command","","Setup a command line music player to use to play music.",119,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"halt","","Halt playback of music.",119,{"inputs":[],"output":null}],[11,"fade_out","","Gradually fade out the music over ms milliseconds starting from now.",119,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[11,"hook_finished","","Sets up a function to be called when music playback is halted.",119,null],[11,"unhook_finished","","A previously set up function would no longer be called when music playback is halted.",119,{"inputs":[],"output":null}],[11,"is_playing","","If music is actively playing, or not.",119,{"inputs":[],"output":{"name":"bool"}}],[11,"is_paused","","If music is paused, or not.",119,{"inputs":[],"output":{"name":"bool"}}],[11,"get_fading","","If music is fading, or not.",119,{"inputs":[],"output":{"name":"fading"}}],[0,"gfx","sdl2","",null,null],[0,"primitives","sdl2::gfx","Graphic Primitives",null,null],[5,"set_font","sdl2::gfx::primitives","Sets or resets the current global font data.",null,{"inputs":[{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":null}],[5,"set_font_rotation","","Sets current global font character rotation steps.",null,{"inputs":[{"name":"u32"}],"output":null}],[8,"ToColor","","generic Color type",null,null],[10,"as_rgba","","",127,null],[11,"as_u32","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[8,"DrawRenderer","","For drawing with rust-sdl2 Renderer",null,null],[10,"pixel","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"hline","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"vline","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"rectangle","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"rounded_rectangle","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"box_","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"rounded_box","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"line","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"aa_line","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"thick_line","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"c"}],"output":{"name":"result"}}],[10,"circle","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"aa_circle","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"filled_circle","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"arc","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"ellipse","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"aa_ellipse","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"filled_ellipse","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"pie","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"filled_pie","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"trigon","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"aa_trigon","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"filled_trigon","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[10,"polygon","","",128,null],[10,"aa_polygon","","",128,null],[10,"filled_polygon","","",128,null],[10,"textured_polygon","","",128,null],[10,"bezier","","",128,null],[10,"character","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"char"},{"name":"c"}],"output":{"name":"result"}}],[10,"string","","",128,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"str"},{"name":"c"}],"output":{"name":"result"}}],[11,"as_rgba","sdl2::pixels","",48,null],[11,"pixel","sdl2::render","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"hline","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"vline","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"rectangle","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"rounded_rectangle","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"box_","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"rounded_box","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"line","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"aa_line","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"thick_line","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"u8"},{"name":"c"}],"output":{"name":"result"}}],[11,"circle","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"aa_circle","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"filled_circle","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"arc","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"ellipse","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"aa_ellipse","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"filled_ellipse","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"pie","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"filled_pie","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"trigon","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"aa_trigon","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"filled_trigon","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"i16"},{"name":"c"}],"output":{"name":"result"}}],[11,"polygon","","",75,null],[11,"aa_polygon","","",75,null],[11,"filled_polygon","","",75,null],[11,"textured_polygon","","",75,null],[11,"bezier","","",75,null],[11,"character","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"char"},{"name":"c"}],"output":{"name":"result"}}],[11,"string","","",75,{"inputs":[{"name":"self"},{"name":"i16"},{"name":"i16"},{"name":"str"},{"name":"c"}],"output":{"name":"result"}}],[0,"rotozoom","sdl2::gfx","Surface Rotozoomer",null,null],[17,"PI","sdl2::gfx::rotozoom","Archimedes' constant (π)",null,null],[5,"get_zoom_size","","",null,null],[5,"get_rotozoom_size","","",null,null],[5,"get_rotozoom_xy_size","","",null,null],[8,"RotozoomSurface","","RotozoomSurface for work with rust-sdl2 Surface type",null,null],[10,"rotozoom","","Rotates and zooms a surface and optional anti-aliasing.",129,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"bool"}],"output":{"name":"result"}}],[10,"rotozoom_xy","","Rotates and zooms a surface with different horizontal and vertival scaling factors and optional anti-aliasing.",129,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"bool"}],"output":{"name":"result"}}],[10,"zoom","","Zoom a surface by independent horizontal and vertical factors with optional smoothing.",129,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"bool"}],"output":{"name":"result"}}],[10,"shrink","","Shrink a surface by an integer ratio using averaging.",129,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[10,"rotate_90deg","","Rotates a 8/16/24/32 bit surface in increments of 90 degrees.",129,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[11,"rotozoom","sdl2::surface","",45,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"bool"}],"output":{"name":"result"}}],[11,"rotozoom_xy","","",45,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"bool"}],"output":{"name":"result"}}],[11,"zoom","","",45,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"bool"}],"output":{"name":"result"}}],[11,"shrink","","",45,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"rotate_90deg","","",45,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"result"}}],[0,"framerate","sdl2::gfx","Framerate control",null,null],[3,"FPSManager","sdl2::gfx::framerate","Structure holding the state and timing information of the framerate controller.",null,null],[11,"new","","Create the framerate manager.",130,{"inputs":[],"output":{"name":"fpsmanager"}}],[11,"set_framerate","","Set the framerate in Hz.",130,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_framerate","","Return the current target framerate in Hz.",130,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_frame_count","","Return the current framecount.",130,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"delay","","Delay execution to maintain a constant framerate and calculate fps.",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"drop","","",130,{"inputs":[{"name":"self"}],"output":null}],[0,"imagefilter","sdl2::gfx","MMX image filters",null,null],[5,"mmx_detect","sdl2::gfx::imagefilter","MMX detection routine (with override flag).",null,{"inputs":[],"output":{"name":"bool"}}],[5,"mmx_off","","Disable MMX check for filter functions and and force to use non-MMX C based code.",null,{"inputs":[],"output":null}],[5,"mmx_on","","Enable MMX check for filter functions and use MMX code if available.",null,{"inputs":[],"output":null}],[5,"add","","Filter using Add: D = saturation255(S1 + S2).",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"mean","","Filter using Mean: D = S1/2 + S2/2.",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"sub","","Filter using Sub: D = saturation0(S1 - S2).",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"abs_diff","","Filter using AbsDiff: D = | S1 - S2 |.",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"mult","","Filter using Mult: D = saturation255(S1 * S2).",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"mult_nor","","Filter using MultNor: D = S1 * S2.",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"mult_div_by2","","Filter using MultDivby2: D = saturation255(S1/2 * S2).",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"mult_div_by4","","Filter using MultDivby4: D = saturation255(S1/2 * S2/2).",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"bit_and","","Filter using BitAnd: D = S1 & S2.",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"bit_or","","Filter using BitOr: D = S1 | S2.",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"div","","Filter using Div: D = S1 / S2.",null,{"inputs":[{"name":"cvec"},{"name":"cvec"}],"output":{"name":"result"}}],[5,"bit_negation","","Filter using BitNegation: D = !S.",null,{"inputs":[{"name":"cvec"}],"output":{"name":"result"}}],[5,"add_byte","","Filter using AddByte: D = saturation255(S + C).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"add_uint","","Filter using AddUint: D = saturation255((S[i] + Cs[i % 4]), Cs=Swap32((uint)C).",null,{"inputs":[{"name":"cvec"},{"name":"u32"}],"output":{"name":"result"}}],[5,"add_byte_to_half","","Filter using AddByteToHalf: D = saturation255(S/2 + C).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"sub_byte","","Filter using SubByte: D = saturation0(S - C).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"sub_uint","","Filter using SubUint: D = saturation0(S[i] - Cs[i % 4]), Cs=Swap32((uint)C).",null,{"inputs":[{"name":"cvec"},{"name":"u32"}],"output":{"name":"result"}}],[5,"shift_right","","Filter using ShiftRight: D = saturation0(S >> N).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"shift_right_uint","","Filter using ShiftRightUint: D = saturation0((uint)S[i] >> N).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"mult_by_byte","","Filter using MultByByte: D = saturation255(S * C).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"shift_right_and_mult_by_byte","","Filter using ShiftRightAndMultByByte: D = saturation255((S >> N) * C).",null,{"inputs":[{"name":"cvec"},{"name":"u8"},{"name":"u8"}],"output":{"name":"result"}}],[5,"shift_left_byte","","Filter using ShiftLeftByte: D = (S << N).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"shift_left_uint","","Filter using ShiftLeftUint: D = ((uint)S << N).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"shift_left","","Filter ShiftLeft: D = saturation255(S << N).",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"binarize_using_threshold","","Filter using BinarizeUsingThreshold: D = (S >= T) ? 255:0.",null,{"inputs":[{"name":"cvec"},{"name":"u8"}],"output":{"name":"result"}}],[5,"clip_to_range","","Filter using ClipToRange: D = (S >= Tmin) & (S <= Tmax) S:Tmin | Tmax.",null,{"inputs":[{"name":"cvec"},{"name":"u8"},{"name":"u8"}],"output":{"name":"result"}}],[5,"normalize_linear","","Filter using NormalizeLinear: D = saturation255((Nmax - Nmin)/(Cmax - Cmin)*(S - Cmin) + Nmin).",null,{"inputs":[{"name":"cvec"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fmt","sdl2","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}]],"paths":[[4,"Error"],[4,"IntegerOrSdlError"],[3,"VideoSubsystem"],[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEvent"],[4,"Event"],[3,"EventSubsystem"],[3,"EventPump"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[4,"PrefPathError"],[4,"HatState"],[3,"JoystickSubsystem"],[3,"Joystick"],[3,"Guid"],[4,"AddMappingError"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameControllerSubsystem"],[3,"GameController"],[3,"HapticSubsystem"],[3,"Haptic"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"Sdl"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"RelativeMouseState"],[3,"Cursor"],[3,"MouseState"],[3,"MouseButtonIterator"],[3,"PressedMouseButtonIterator"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"PixelMasks"],[4,"Color"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"PixelFormat"],[3,"DisplayMode"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[4,"WindowBuildError"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"GLContext"],[3,"Window"],[3,"WindowBuilder"],[3,"WindowRef"],[3,"DriverIterator"],[3,"TimerSubsystem"],[3,"Timer"],[3,"RendererInfo"],[3,"TextureQuery"],[4,"TextureAccess"],[4,"BlendMode"],[4,"RendererParent"],[4,"TextureValueError"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[3,"Renderer"],[3,"RendererBuilder"],[3,"RenderTarget"],[3,"Texture"],[3,"DriverIterator"],[3,"RWops"],[4,"Category"],[4,"Priority"],[3,"AudioSubsystem"],[3,"AudioSpecWAV"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[4,"AudioFormat"],[4,"AudioStatus"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"DriverIterator"],[3,"AudioQueue"],[3,"AudioDevice"],[3,"AudioDeviceLockGuard"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxColorScheme"],[3,"ButtonData"],[4,"ClickedButton"],[4,"ShowMessageError"],[3,"MessageBoxFlag"],[3,"MessageBoxButtonFlag"],[4,"Hint"],[3,"GlyphMetrics"],[4,"InitError"],[4,"Hinting"],[4,"FontError"],[3,"FontStyle"],[3,"PartialRendering"],[3,"Font"],[3,"Sdl2TtfContext"],[8,"LoadSurface"],[8,"SaveSurface"],[8,"LoadTexture"],[8,"ImageRWops"],[3,"InitFlag"],[3,"Sdl2ImageContext"],[3,"Chunk"],[3,"Music"],[4,"Fading"],[4,"MusicType"],[8,"LoaderRWops"],[3,"InitFlag"],[3,"Sdl2MixerContext"],[3,"Channel"],[3,"Group"],[8,"ToColor"],[8,"DrawRenderer"],[8,"RotozoomSurface"],[3,"FPSManager"]]};
searchIndex["sdl2_sys"] = {"doc":"","items":[[0,"scancode","sdl2_sys","",null,null],[6,"SDL_Scancode","sdl2_sys::scancode","",null,null],[17,"SDL_SCANCODE_UNKNOWN","","",null,null],[17,"SDL_SCANCODE_A","","",null,null],[17,"SDL_SCANCODE_B","","",null,null],[17,"SDL_SCANCODE_C","","",null,null],[17,"SDL_SCANCODE_D","","",null,null],[17,"SDL_SCANCODE_E","","",null,null],[17,"SDL_SCANCODE_F","","",null,null],[17,"SDL_SCANCODE_G","","",null,null],[17,"SDL_SCANCODE_H","","",null,null],[17,"SDL_SCANCODE_I","","",null,null],[17,"SDL_SCANCODE_J","","",null,null],[17,"SDL_SCANCODE_K","","",null,null],[17,"SDL_SCANCODE_L","","",null,null],[17,"SDL_SCANCODE_M","","",null,null],[17,"SDL_SCANCODE_N","","",null,null],[17,"SDL_SCANCODE_O","","",null,null],[17,"SDL_SCANCODE_P","","",null,null],[17,"SDL_SCANCODE_Q","","",null,null],[17,"SDL_SCANCODE_R","","",null,null],[17,"SDL_SCANCODE_S","","",null,null],[17,"SDL_SCANCODE_T","","",null,null],[17,"SDL_SCANCODE_U","","",null,null],[17,"SDL_SCANCODE_V","","",null,null],[17,"SDL_SCANCODE_W","","",null,null],[17,"SDL_SCANCODE_X","","",null,null],[17,"SDL_SCANCODE_Y","","",null,null],[17,"SDL_SCANCODE_Z","","",null,null],[17,"SDL_SCANCODE_1","","",null,null],[17,"SDL_SCANCODE_2","","",null,null],[17,"SDL_SCANCODE_3","","",null,null],[17,"SDL_SCANCODE_4","","",null,null],[17,"SDL_SCANCODE_5","","",null,null],[17,"SDL_SCANCODE_6","","",null,null],[17,"SDL_SCANCODE_7","","",null,null],[17,"SDL_SCANCODE_8","","",null,null],[17,"SDL_SCANCODE_9","","",null,null],[17,"SDL_SCANCODE_0","","",null,null],[17,"SDL_SCANCODE_RETURN","","",null,null],[17,"SDL_SCANCODE_ESCAPE","","",null,null],[17,"SDL_SCANCODE_BACKSPACE","","",null,null],[17,"SDL_SCANCODE_TAB","","",null,null],[17,"SDL_SCANCODE_SPACE","","",null,null],[17,"SDL_SCANCODE_MINUS","","",null,null],[17,"SDL_SCANCODE_EQUALS","","",null,null],[17,"SDL_SCANCODE_LEFTBRACKET","","",null,null],[17,"SDL_SCANCODE_RIGHTBRACKET","","",null,null],[17,"SDL_SCANCODE_BACKSLASH","","",null,null],[17,"SDL_SCANCODE_NONUSHASH","","",null,null],[17,"SDL_SCANCODE_SEMICOLON","","",null,null],[17,"SDL_SCANCODE_APOSTROPHE","","",null,null],[17,"SDL_SCANCODE_GRAVE","","",null,null],[17,"SDL_SCANCODE_COMMA","","",null,null],[17,"SDL_SCANCODE_PERIOD","","",null,null],[17,"SDL_SCANCODE_SLASH","","",null,null],[17,"SDL_SCANCODE_CAPSLOCK","","",null,null],[17,"SDL_SCANCODE_F1","","",null,null],[17,"SDL_SCANCODE_F2","","",null,null],[17,"SDL_SCANCODE_F3","","",null,null],[17,"SDL_SCANCODE_F4","","",null,null],[17,"SDL_SCANCODE_F5","","",null,null],[17,"SDL_SCANCODE_F6","","",null,null],[17,"SDL_SCANCODE_F7","","",null,null],[17,"SDL_SCANCODE_F8","","",null,null],[17,"SDL_SCANCODE_F9","","",null,null],[17,"SDL_SCANCODE_F10","","",null,null],[17,"SDL_SCANCODE_F11","","",null,null],[17,"SDL_SCANCODE_F12","","",null,null],[17,"SDL_SCANCODE_PRINTSCREEN","","",null,null],[17,"SDL_SCANCODE_SCROLLLOCK","","",null,null],[17,"SDL_SCANCODE_PAUSE","","",null,null],[17,"SDL_SCANCODE_INSERT","","",null,null],[17,"SDL_SCANCODE_HOME","","",null,null],[17,"SDL_SCANCODE_PAGEUP","","",null,null],[17,"SDL_SCANCODE_DELETE","","",null,null],[17,"SDL_SCANCODE_END","","",null,null],[17,"SDL_SCANCODE_PAGEDOWN","","",null,null],[17,"SDL_SCANCODE_RIGHT","","",null,null],[17,"SDL_SCANCODE_LEFT","","",null,null],[17,"SDL_SCANCODE_DOWN","","",null,null],[17,"SDL_SCANCODE_UP","","",null,null],[17,"SDL_SCANCODE_NUMLOCKCLEAR","","",null,null],[17,"SDL_SCANCODE_KP_DIVIDE","","",null,null],[17,"SDL_SCANCODE_KP_MULTIPLY","","",null,null],[17,"SDL_SCANCODE_KP_MINUS","","",null,null],[17,"SDL_SCANCODE_KP_PLUS","","",null,null],[17,"SDL_SCANCODE_KP_ENTER","","",null,null],[17,"SDL_SCANCODE_KP_1","","",null,null],[17,"SDL_SCANCODE_KP_2","","",null,null],[17,"SDL_SCANCODE_KP_3","","",null,null],[17,"SDL_SCANCODE_KP_4","","",null,null],[17,"SDL_SCANCODE_KP_5","","",null,null],[17,"SDL_SCANCODE_KP_6","","",null,null],[17,"SDL_SCANCODE_KP_7","","",null,null],[17,"SDL_SCANCODE_KP_8","","",null,null],[17,"SDL_SCANCODE_KP_9","","",null,null],[17,"SDL_SCANCODE_KP_0","","",null,null],[17,"SDL_SCANCODE_KP_PERIOD","","",null,null],[17,"SDL_SCANCODE_NONUSBACKSLASH","","",null,null],[17,"SDL_SCANCODE_APPLICATION","","",null,null],[17,"SDL_SCANCODE_POWER","","",null,null],[17,"SDL_SCANCODE_KP_EQUALS","","",null,null],[17,"SDL_SCANCODE_F13","","",null,null],[17,"SDL_SCANCODE_F14","","",null,null],[17,"SDL_SCANCODE_F15","","",null,null],[17,"SDL_SCANCODE_F16","","",null,null],[17,"SDL_SCANCODE_F17","","",null,null],[17,"SDL_SCANCODE_F18","","",null,null],[17,"SDL_SCANCODE_F19","","",null,null],[17,"SDL_SCANCODE_F20","","",null,null],[17,"SDL_SCANCODE_F21","","",null,null],[17,"SDL_SCANCODE_F22","","",null,null],[17,"SDL_SCANCODE_F23","","",null,null],[17,"SDL_SCANCODE_F24","","",null,null],[17,"SDL_SCANCODE_EXECUTE","","",null,null],[17,"SDL_SCANCODE_HELP","","",null,null],[17,"SDL_SCANCODE_MENU","","",null,null],[17,"SDL_SCANCODE_SELECT","","",null,null],[17,"SDL_SCANCODE_STOP","","",null,null],[17,"SDL_SCANCODE_AGAIN","","",null,null],[17,"SDL_SCANCODE_UNDO","","",null,null],[17,"SDL_SCANCODE_CUT","","",null,null],[17,"SDL_SCANCODE_COPY","","",null,null],[17,"SDL_SCANCODE_PASTE","","",null,null],[17,"SDL_SCANCODE_FIND","","",null,null],[17,"SDL_SCANCODE_MUTE","","",null,null],[17,"SDL_SCANCODE_VOLUMEUP","","",null,null],[17,"SDL_SCANCODE_VOLUMEDOWN","","",null,null],[17,"SDL_SCANCODE_KP_COMMA","","",null,null],[17,"SDL_SCANCODE_KP_EQUALSAS400","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL1","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL2","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL3","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL4","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL5","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL6","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL7","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL8","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL9","","",null,null],[17,"SDL_SCANCODE_LANG1","","",null,null],[17,"SDL_SCANCODE_LANG2","","",null,null],[17,"SDL_SCANCODE_LANG3","","",null,null],[17,"SDL_SCANCODE_LANG4","","",null,null],[17,"SDL_SCANCODE_LANG5","","",null,null],[17,"SDL_SCANCODE_LANG6","","",null,null],[17,"SDL_SCANCODE_LANG7","","",null,null],[17,"SDL_SCANCODE_LANG8","","",null,null],[17,"SDL_SCANCODE_LANG9","","",null,null],[17,"SDL_SCANCODE_ALTERASE","","",null,null],[17,"SDL_SCANCODE_SYSREQ","","",null,null],[17,"SDL_SCANCODE_CANCEL","","",null,null],[17,"SDL_SCANCODE_CLEAR","","",null,null],[17,"SDL_SCANCODE_PRIOR","","",null,null],[17,"SDL_SCANCODE_RETURN2","","",null,null],[17,"SDL_SCANCODE_SEPARATOR","","",null,null],[17,"SDL_SCANCODE_OUT","","",null,null],[17,"SDL_SCANCODE_OPER","","",null,null],[17,"SDL_SCANCODE_CLEARAGAIN","","",null,null],[17,"SDL_SCANCODE_CRSEL","","",null,null],[17,"SDL_SCANCODE_EXSEL","","",null,null],[17,"SDL_SCANCODE_KP_00","","",null,null],[17,"SDL_SCANCODE_KP_000","","",null,null],[17,"SDL_SCANCODE_THOUSANDSSEPARATOR","","",null,null],[17,"SDL_SCANCODE_DECIMALSEPARATOR","","",null,null],[17,"SDL_SCANCODE_CURRENCYUNIT","","",null,null],[17,"SDL_SCANCODE_CURRENCYSUBUNIT","","",null,null],[17,"SDL_SCANCODE_KP_LEFTPAREN","","",null,null],[17,"SDL_SCANCODE_KP_RIGHTPAREN","","",null,null],[17,"SDL_SCANCODE_KP_LEFTBRACE","","",null,null],[17,"SDL_SCANCODE_KP_RIGHTBRACE","","",null,null],[17,"SDL_SCANCODE_KP_TAB","","",null,null],[17,"SDL_SCANCODE_KP_BACKSPACE","","",null,null],[17,"SDL_SCANCODE_KP_A","","",null,null],[17,"SDL_SCANCODE_KP_B","","",null,null],[17,"SDL_SCANCODE_KP_C","","",null,null],[17,"SDL_SCANCODE_KP_D","","",null,null],[17,"SDL_SCANCODE_KP_E","","",null,null],[17,"SDL_SCANCODE_KP_F","","",null,null],[17,"SDL_SCANCODE_KP_XOR","","",null,null],[17,"SDL_SCANCODE_KP_POWER","","",null,null],[17,"SDL_SCANCODE_KP_PERCENT","","",null,null],[17,"SDL_SCANCODE_KP_LESS","","",null,null],[17,"SDL_SCANCODE_KP_GREATER","","",null,null],[17,"SDL_SCANCODE_KP_AMPERSAND","","",null,null],[17,"SDL_SCANCODE_KP_DBLAMPERSAND","","",null,null],[17,"SDL_SCANCODE_KP_VERTICALBAR","","",null,null],[17,"SDL_SCANCODE_KP_DBLVERTICALBAR","","",null,null],[17,"SDL_SCANCODE_KP_COLON","","",null,null],[17,"SDL_SCANCODE_KP_HASH","","",null,null],[17,"SDL_SCANCODE_KP_SPACE","","",null,null],[17,"SDL_SCANCODE_KP_AT","","",null,null],[17,"SDL_SCANCODE_KP_EXCLAM","","",null,null],[17,"SDL_SCANCODE_KP_MEMSTORE","","",null,null],[17,"SDL_SCANCODE_KP_MEMRECALL","","",null,null],[17,"SDL_SCANCODE_KP_MEMCLEAR","","",null,null],[17,"SDL_SCANCODE_KP_MEMADD","","",null,null],[17,"SDL_SCANCODE_KP_MEMSUBTRACT","","",null,null],[17,"SDL_SCANCODE_KP_MEMMULTIPLY","","",null,null],[17,"SDL_SCANCODE_KP_MEMDIVIDE","","",null,null],[17,"SDL_SCANCODE_KP_PLUSMINUS","","",null,null],[17,"SDL_SCANCODE_KP_CLEAR","","",null,null],[17,"SDL_SCANCODE_KP_CLEARENTRY","","",null,null],[17,"SDL_SCANCODE_KP_BINARY","","",null,null],[17,"SDL_SCANCODE_KP_OCTAL","","",null,null],[17,"SDL_SCANCODE_KP_DECIMAL","","",null,null],[17,"SDL_SCANCODE_KP_HEXADECIMAL","","",null,null],[17,"SDL_SCANCODE_LCTRL","","",null,null],[17,"SDL_SCANCODE_LSHIFT","","",null,null],[17,"SDL_SCANCODE_LALT","","",null,null],[17,"SDL_SCANCODE_LGUI","","",null,null],[17,"SDL_SCANCODE_RCTRL","","",null,null],[17,"SDL_SCANCODE_RSHIFT","","",null,null],[17,"SDL_SCANCODE_RALT","","",null,null],[17,"SDL_SCANCODE_RGUI","","",null,null],[17,"SDL_SCANCODE_MODE","","",null,null],[17,"SDL_SCANCODE_AUDIONEXT","","",null,null],[17,"SDL_SCANCODE_AUDIOPREV","","",null,null],[17,"SDL_SCANCODE_AUDIOSTOP","","",null,null],[17,"SDL_SCANCODE_AUDIOPLAY","","",null,null],[17,"SDL_SCANCODE_AUDIOMUTE","","",null,null],[17,"SDL_SCANCODE_MEDIASELECT","","",null,null],[17,"SDL_SCANCODE_WWW","","",null,null],[17,"SDL_SCANCODE_MAIL","","",null,null],[17,"SDL_SCANCODE_CALCULATOR","","",null,null],[17,"SDL_SCANCODE_COMPUTER","","",null,null],[17,"SDL_SCANCODE_AC_SEARCH","","",null,null],[17,"SDL_SCANCODE_AC_HOME","","",null,null],[17,"SDL_SCANCODE_AC_BACK","","",null,null],[17,"SDL_SCANCODE_AC_FORWARD","","",null,null],[17,"SDL_SCANCODE_AC_STOP","","",null,null],[17,"SDL_SCANCODE_AC_REFRESH","","",null,null],[17,"SDL_SCANCODE_AC_BOOKMARKS","","",null,null],[17,"SDL_SCANCODE_BRIGHTNESSDOWN","","",null,null],[17,"SDL_SCANCODE_BRIGHTNESSUP","","",null,null],[17,"SDL_SCANCODE_DISPLAYSWITCH","","",null,null],[17,"SDL_SCANCODE_KBDILLUMTOGGLE","","",null,null],[17,"SDL_SCANCODE_KBDILLUMDOWN","","",null,null],[17,"SDL_SCANCODE_KBDILLUMUP","","",null,null],[17,"SDL_SCANCODE_EJECT","","",null,null],[17,"SDL_SCANCODE_SLEEP","","",null,null],[17,"SDL_SCANCODE_APP1","","",null,null],[17,"SDL_SCANCODE_APP2","","",null,null],[17,"SDL_NUM_SCANCODES","","",null,null],[0,"keycode","sdl2_sys","",null,null],[6,"SDL_Keycode","sdl2_sys::keycode","",null,null],[6,"SDL_Keymod","","",null,null],[17,"SDLK_UNKNOWN","","",null,null],[17,"SDLK_BACKSPACE","","",null,null],[17,"SDLK_TAB","","",null,null],[17,"SDLK_RETURN","","",null,null],[17,"SDLK_ESCAPE","","",null,null],[17,"SDLK_SPACE","","",null,null],[17,"SDLK_EXCLAIM","","",null,null],[17,"SDLK_QUOTEDBL","","",null,null],[17,"SDLK_HASH","","",null,null],[17,"SDLK_DOLLAR","","",null,null],[17,"SDLK_PERCENT","","",null,null],[17,"SDLK_AMPERSAND","","",null,null],[17,"SDLK_QUOTE","","",null,null],[17,"SDLK_LEFTPAREN","","",null,null],[17,"SDLK_RIGHTPAREN","","",null,null],[17,"SDLK_ASTERISK","","",null,null],[17,"SDLK_PLUS","","",null,null],[17,"SDLK_COMMA","","",null,null],[17,"SDLK_MINUS","","",null,null],[17,"SDLK_PERIOD","","",null,null],[17,"SDLK_SLASH","","",null,null],[17,"SDLK_0","","",null,null],[17,"SDLK_1","","",null,null],[17,"SDLK_2","","",null,null],[17,"SDLK_3","","",null,null],[17,"SDLK_4","","",null,null],[17,"SDLK_5","","",null,null],[17,"SDLK_6","","",null,null],[17,"SDLK_7","","",null,null],[17,"SDLK_8","","",null,null],[17,"SDLK_9","","",null,null],[17,"SDLK_COLON","","",null,null],[17,"SDLK_SEMICOLON","","",null,null],[17,"SDLK_LESS","","",null,null],[17,"SDLK_EQUALS","","",null,null],[17,"SDLK_GREATER","","",null,null],[17,"SDLK_QUESTION","","",null,null],[17,"SDLK_AT","","",null,null],[17,"SDLK_LEFTBRACKET","","",null,null],[17,"SDLK_BACKSLASH","","",null,null],[17,"SDLK_RIGHTBRACKET","","",null,null],[17,"SDLK_CARET","","",null,null],[17,"SDLK_UNDERSCORE","","",null,null],[17,"SDLK_BACKQUOTE","","",null,null],[17,"SDLK_a","","",null,null],[17,"SDLK_b","","",null,null],[17,"SDLK_c","","",null,null],[17,"SDLK_d","","",null,null],[17,"SDLK_e","","",null,null],[17,"SDLK_f","","",null,null],[17,"SDLK_g","","",null,null],[17,"SDLK_h","","",null,null],[17,"SDLK_i","","",null,null],[17,"SDLK_j","","",null,null],[17,"SDLK_k","","",null,null],[17,"SDLK_l","","",null,null],[17,"SDLK_m","","",null,null],[17,"SDLK_n","","",null,null],[17,"SDLK_o","","",null,null],[17,"SDLK_p","","",null,null],[17,"SDLK_q","","",null,null],[17,"SDLK_r","","",null,null],[17,"SDLK_s","","",null,null],[17,"SDLK_t","","",null,null],[17,"SDLK_u","","",null,null],[17,"SDLK_v","","",null,null],[17,"SDLK_w","","",null,null],[17,"SDLK_x","","",null,null],[17,"SDLK_y","","",null,null],[17,"SDLK_z","","",null,null],[17,"SDLK_DELETE","","",null,null],[17,"SDLK_CAPSLOCK","","",null,null],[17,"SDLK_F1","","",null,null],[17,"SDLK_F2","","",null,null],[17,"SDLK_F3","","",null,null],[17,"SDLK_F4","","",null,null],[17,"SDLK_F5","","",null,null],[17,"SDLK_F6","","",null,null],[17,"SDLK_F7","","",null,null],[17,"SDLK_F8","","",null,null],[17,"SDLK_F9","","",null,null],[17,"SDLK_F10","","",null,null],[17,"SDLK_F11","","",null,null],[17,"SDLK_F12","","",null,null],[17,"SDLK_PRINTSCREEN","","",null,null],[17,"SDLK_SCROLLLOCK","","",null,null],[17,"SDLK_PAUSE","","",null,null],[17,"SDLK_INSERT","","",null,null],[17,"SDLK_HOME","","",null,null],[17,"SDLK_PAGEUP","","",null,null],[17,"SDLK_END","","",null,null],[17,"SDLK_PAGEDOWN","","",null,null],[17,"SDLK_RIGHT","","",null,null],[17,"SDLK_LEFT","","",null,null],[17,"SDLK_DOWN","","",null,null],[17,"SDLK_UP","","",null,null],[17,"SDLK_NUMLOCKCLEAR","","",null,null],[17,"SDLK_KPDIVIDE","","",null,null],[17,"SDLK_KPMULTIPLY","","",null,null],[17,"SDLK_KPMINUS","","",null,null],[17,"SDLK_KPPLUS","","",null,null],[17,"SDLK_KPENTER","","",null,null],[17,"SDLK_KP1","","",null,null],[17,"SDLK_KP2","","",null,null],[17,"SDLK_KP3","","",null,null],[17,"SDLK_KP4","","",null,null],[17,"SDLK_KP5","","",null,null],[17,"SDLK_KP6","","",null,null],[17,"SDLK_KP7","","",null,null],[17,"SDLK_KP8","","",null,null],[17,"SDLK_KP9","","",null,null],[17,"SDLK_KP0","","",null,null],[17,"SDLK_KPPERIOD","","",null,null],[17,"SDLK_APPLICATION","","",null,null],[17,"SDLK_POWER","","",null,null],[17,"SDLK_KPEQUALS","","",null,null],[17,"SDLK_F13","","",null,null],[17,"SDLK_F14","","",null,null],[17,"SDLK_F15","","",null,null],[17,"SDLK_F16","","",null,null],[17,"SDLK_F17","","",null,null],[17,"SDLK_F18","","",null,null],[17,"SDLK_F19","","",null,null],[17,"SDLK_F20","","",null,null],[17,"SDLK_F21","","",null,null],[17,"SDLK_F22","","",null,null],[17,"SDLK_F23","","",null,null],[17,"SDLK_F24","","",null,null],[17,"SDLK_EXECUTE","","",null,null],[17,"SDLK_HELP","","",null,null],[17,"SDLK_MENU","","",null,null],[17,"SDLK_SELECT","","",null,null],[17,"SDLK_STOP","","",null,null],[17,"SDLK_AGAIN","","",null,null],[17,"SDLK_UNDO","","",null,null],[17,"SDLK_CUT","","",null,null],[17,"SDLK_COPY","","",null,null],[17,"SDLK_PASTE","","",null,null],[17,"SDLK_FIND","","",null,null],[17,"SDLK_MUTE","","",null,null],[17,"SDLK_VOLUMEUP","","",null,null],[17,"SDLK_VOLUMEDOWN","","",null,null],[17,"SDLK_KPCOMMA","","",null,null],[17,"SDLK_KPEQUALSAS400","","",null,null],[17,"SDLK_ALTERASE","","",null,null],[17,"SDLK_SYSREQ","","",null,null],[17,"SDLK_CANCEL","","",null,null],[17,"SDLK_CLEAR","","",null,null],[17,"SDLK_PRIOR","","",null,null],[17,"SDLK_RETURN2","","",null,null],[17,"SDLK_SEPARATOR","","",null,null],[17,"SDLK_OUT","","",null,null],[17,"SDLK_OPER","","",null,null],[17,"SDLK_CLEARAGAIN","","",null,null],[17,"SDLK_CRSEL","","",null,null],[17,"SDLK_EXSEL","","",null,null],[17,"SDLK_KP00","","",null,null],[17,"SDLK_KP000","","",null,null],[17,"SDLK_THOUSANDSSEPARATOR","","",null,null],[17,"SDLK_DECIMALSEPARATOR","","",null,null],[17,"SDLK_CURRENCYUNIT","","",null,null],[17,"SDLK_CURRENCYSUBUNIT","","",null,null],[17,"SDLK_KPLEFTPAREN","","",null,null],[17,"SDLK_KPRIGHTPAREN","","",null,null],[17,"SDLK_KPLEFTBRACE","","",null,null],[17,"SDLK_KPRIGHTBRACE","","",null,null],[17,"SDLK_KPTAB","","",null,null],[17,"SDLK_KPBACKSPACE","","",null,null],[17,"SDLK_KPA","","",null,null],[17,"SDLK_KPB","","",null,null],[17,"SDLK_KPC","","",null,null],[17,"SDLK_KPD","","",null,null],[17,"SDLK_KPE","","",null,null],[17,"SDLK_KPF","","",null,null],[17,"SDLK_KPXOR","","",null,null],[17,"SDLK_KPPOWER","","",null,null],[17,"SDLK_KPPERCENT","","",null,null],[17,"SDLK_KPLESS","","",null,null],[17,"SDLK_KPGREATER","","",null,null],[17,"SDLK_KPAMPERSAND","","",null,null],[17,"SDLK_KPDBLAMPERSAND","","",null,null],[17,"SDLK_KPVERTICALBAR","","",null,null],[17,"SDLK_KPDBLVERTICALBAR","","",null,null],[17,"SDLK_KPCOLON","","",null,null],[17,"SDLK_KPHASH","","",null,null],[17,"SDLK_KPSPACE","","",null,null],[17,"SDLK_KPAT","","",null,null],[17,"SDLK_KPEXCLAM","","",null,null],[17,"SDLK_KPMEMSTORE","","",null,null],[17,"SDLK_KPMEMRECALL","","",null,null],[17,"SDLK_KPMEMCLEAR","","",null,null],[17,"SDLK_KPMEMADD","","",null,null],[17,"SDLK_KPMEMSUBTRACT","","",null,null],[17,"SDLK_KPMEMMULTIPLY","","",null,null],[17,"SDLK_KPMEMDIVIDE","","",null,null],[17,"SDLK_KPPLUSMINUS","","",null,null],[17,"SDLK_KPCLEAR","","",null,null],[17,"SDLK_KPCLEARENTRY","","",null,null],[17,"SDLK_KPBINARY","","",null,null],[17,"SDLK_KPOCTAL","","",null,null],[17,"SDLK_KPDECIMAL","","",null,null],[17,"SDLK_KPHEXADECIMAL","","",null,null],[17,"SDLK_LCTRL","","",null,null],[17,"SDLK_LSHIFT","","",null,null],[17,"SDLK_LALT","","",null,null],[17,"SDLK_LGUI","","",null,null],[17,"SDLK_RCTRL","","",null,null],[17,"SDLK_RSHIFT","","",null,null],[17,"SDLK_RALT","","",null,null],[17,"SDLK_RGUI","","",null,null],[17,"SDLK_MODE","","",null,null],[17,"SDLK_AUDIONEXT","","",null,null],[17,"SDLK_AUDIOPREV","","",null,null],[17,"SDLK_AUDIOSTOP","","",null,null],[17,"SDLK_AUDIOPLAY","","",null,null],[17,"SDLK_AUDIOMUTE","","",null,null],[17,"SDLK_MEDIASELECT","","",null,null],[17,"SDLK_WWW","","",null,null],[17,"SDLK_MAIL","","",null,null],[17,"SDLK_CALCULATOR","","",null,null],[17,"SDLK_COMPUTER","","",null,null],[17,"SDLK_ACSEARCH","","",null,null],[17,"SDLK_ACHOME","","",null,null],[17,"SDLK_ACBACK","","",null,null],[17,"SDLK_ACFORWARD","","",null,null],[17,"SDLK_ACSTOP","","",null,null],[17,"SDLK_ACREFRESH","","",null,null],[17,"SDLK_ACBOOKMARKS","","",null,null],[17,"SDLK_BRIGHTNESSDOWN","","",null,null],[17,"SDLK_BRIGHTNESSUP","","",null,null],[17,"SDLK_DISPLAYSWITCH","","",null,null],[17,"SDLK_KBDILLUMTOGGLE","","",null,null],[17,"SDLK_KBDILLUMDOWN","","",null,null],[17,"SDLK_KBDILLUMUP","","",null,null],[17,"SDLK_EJECT","","",null,null],[17,"SDLK_SLEEP","","",null,null],[17,"KMOD_NONE","","",null,null],[17,"KMOD_LSHIFT","","",null,null],[17,"KMOD_RSHIFT","","",null,null],[17,"KMOD_LCTRL","","",null,null],[17,"KMOD_RCTRL","","",null,null],[17,"KMOD_LALT","","",null,null],[17,"KMOD_RALT","","",null,null],[17,"KMOD_LGUI","","",null,null],[17,"KMOD_RGUI","","",null,null],[17,"KMOD_NUM","","",null,null],[17,"KMOD_CAPS","","",null,null],[17,"KMOD_MODE","","",null,null],[17,"KMOD_RESERVED","","",null,null],[0,"audio","sdl2_sys","",null,null],[3,"SDL_AudioSpec","sdl2_sys::audio","",null,null],[12,"freq","","",0,null],[12,"format","","",0,null],[12,"channels","","",0,null],[12,"silence","","",0,null],[12,"samples","","",0,null],[12,"padding","","",0,null],[12,"size","","",0,null],[12,"callback","","",0,null],[12,"userdata","","",0,null],[3,"SDL_AudioCVT","","",null,null],[12,"needed","","",1,null],[12,"src_format","","",1,null],[12,"dst_format","","",1,null],[12,"rate_incr","","",1,null],[12,"buf","","",1,null],[12,"len","","",1,null],[12,"len_cvt","","",1,null],[12,"len_mult","","",1,null],[12,"len_ratio","","",1,null],[5,"SDL_GetNumAudioDrivers","","",null,null],[5,"SDL_GetAudioDriver","","",null,null],[5,"SDL_AudioInit","","",null,null],[5,"SDL_AudioQuit","","",null,null],[5,"SDL_GetCurrentAudioDriver","","",null,null],[5,"SDL_OpenAudio","","",null,null],[5,"SDL_GetNumAudioDevices","","",null,null],[5,"SDL_GetAudioDeviceName","","",null,null],[5,"SDL_OpenAudioDevice","","",null,null],[5,"SDL_GetAudioStatus","","",null,null],[5,"SDL_GetAudioDeviceStatus","","",null,null],[5,"SDL_PauseAudio","","",null,null],[5,"SDL_PauseAudioDevice","","",null,null],[5,"SDL_LoadWAV_RW","","",null,null],[5,"SDL_FreeWAV","","",null,null],[5,"SDL_BuildAudioCVT","","",null,null],[5,"SDL_ConvertAudio","","",null,null],[5,"SDL_MixAudio","","",null,null],[5,"SDL_MixAudioFormat","","",null,null],[5,"SDL_QueueAudio","","",null,null],[5,"SDL_GetQueuedAudioSize","","",null,null],[5,"SDL_ClearQueuedAudio","","",null,null],[5,"SDL_LockAudio","","",null,null],[5,"SDL_LockAudioDevice","","",null,null],[5,"SDL_UnlockAudio","","",null,null],[5,"SDL_UnlockAudioDevice","","",null,null],[5,"SDL_CloseAudio","","",null,null],[5,"SDL_CloseAudioDevice","","",null,null],[6,"SDL_AudioFormat","","",null,null],[6,"SDL_AudioCallback","","",null,null],[6,"SDL_AudioFilter","","",null,null],[6,"SDL_AudioDeviceID","","",null,null],[6,"SDL_AudioStatus","","",null,null],[17,"AUDIO_U8","","",null,null],[17,"AUDIO_S8","","",null,null],[17,"AUDIO_U16LSB","","",null,null],[17,"AUDIO_S16LSB","","",null,null],[17,"AUDIO_U16MSB","","",null,null],[17,"AUDIO_S16MSB","","",null,null],[17,"AUDIO_U16","","",null,null],[17,"AUDIO_S16","","",null,null],[17,"AUDIO_S32LSB","","",null,null],[17,"AUDIO_S32MSB","","",null,null],[17,"AUDIO_S32","","",null,null],[17,"AUDIO_F32LSB","","",null,null],[17,"AUDIO_F32MSB","","",null,null],[17,"AUDIO_F32","","",null,null],[17,"AUDIO_U16SYS","","",null,null],[17,"AUDIO_S16SYS","","",null,null],[17,"AUDIO_S32SYS","","",null,null],[17,"AUDIO_F32SYS","","",null,null],[17,"SDL_AUDIO_STOPPED","","",null,null],[17,"SDL_AUDIO_PLAYING","","",null,null],[17,"SDL_AUDIO_PAUSED","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"sdl_audiocvt"}}],[0,"clipboard","sdl2_sys","",null,null],[5,"SDL_SetClipboardText","sdl2_sys::clipboard","",null,null],[5,"SDL_GetClipboardText","","",null,null],[5,"SDL_HasClipboardText","","",null,null],[0,"controller","sdl2_sys","",null,null],[3,"SDL_GameControllerButtonBind","sdl2_sys::controller","",null,null],[3,"SDL_GameControllerButtonBindData","","",null,null],[3,"SDL_GameControllerButtonBindDataHat","","",null,null],[5,"SDL_GameControllerAddMapping","","",null,null],[5,"SDL_GameControllerAddMappingsFromRW","","",null,null],[5,"SDL_GameControllerMappingForGUID","","",null,null],[5,"SDL_GameControllerMapping","","",null,null],[5,"SDL_IsGameController","","",null,null],[5,"SDL_GameControllerNameForIndex","","",null,null],[5,"SDL_GameControllerOpen","","",null,null],[5,"SDL_GameControllerName","","",null,null],[5,"SDL_GameControllerGetAttached","","",null,null],[5,"SDL_GameControllerGetJoystick","","",null,null],[5,"SDL_GameControllerEventState","","",null,null],[5,"SDL_GameControllerUpdate","","",null,null],[5,"SDL_GameControllerGetAxisFromString","","",null,null],[5,"SDL_GameControllerGetStringForAxis","","",null,null],[5,"SDL_GameControllerGetBindForAxis","","",null,null],[5,"SDL_GameControllerGetAxis","","",null,null],[5,"SDL_GameControllerGetButtonFromString","","",null,null],[5,"SDL_GameControllerGetStringForButton","","",null,null],[5,"SDL_GameControllerGetBindForButton","","",null,null],[5,"SDL_GameControllerGetButton","","",null,null],[5,"SDL_GameControllerClose","","",null,null],[6,"SDL_GameController","","",null,null],[6,"SDL_GameControllerBindType","","",null,null],[6,"SDL_GameControllerAxis","","",null,null],[6,"SDL_GameControllerButton","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_NONE","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_BUTTON","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_AXIS","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_HAT","","",null,null],[17,"SDL_CONTROLLER_AXIS_INVALID","","",null,null],[17,"SDL_CONTROLLER_AXIS_LEFTX","","",null,null],[17,"SDL_CONTROLLER_AXIS_LEFTY","","",null,null],[17,"SDL_CONTROLLER_AXIS_RIGHTX","","",null,null],[17,"SDL_CONTROLLER_AXIS_RIGHTY","","",null,null],[17,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","","",null,null],[17,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","","",null,null],[17,"SDL_CONTROLLER_AXIS_MAX","","",null,null],[17,"SDL_CONTROLLER_BUTTON_INVALID","","",null,null],[17,"SDL_CONTROLLER_BUTTON_A","","",null,null],[17,"SDL_CONTROLLER_BUTTON_B","","",null,null],[17,"SDL_CONTROLLER_BUTTON_X","","",null,null],[17,"SDL_CONTROLLER_BUTTON_Y","","",null,null],[17,"SDL_CONTROLLER_BUTTON_BACK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_GUIDE","","",null,null],[17,"SDL_CONTROLLER_BUTTON_START","","",null,null],[17,"SDL_CONTROLLER_BUTTON_LEFTSTICK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","","",null,null],[17,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_UP","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","","",null,null],[17,"SDL_CONTROLLER_BUTTON_MAX","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"sdl_gamecontrollerbuttonbind"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"sdl_gamecontrollerbuttonbinddata"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"sdl_gamecontrollerbuttonbinddatahat"}}],[11,"button","","",3,null],[11,"axis","","",3,null],[11,"hat","","",3,null],[0,"cpuinfo","sdl2_sys","",null,null],[5,"SDL_GetCPUCount","sdl2_sys::cpuinfo","",null,null],[5,"SDL_GetCPUCacheLineSize","","",null,null],[5,"SDL_HasRDTSC","","",null,null],[5,"SDL_HasAltiVec","","",null,null],[5,"SDL_HasMMX","","",null,null],[5,"SDL_Has3DNow","","",null,null],[5,"SDL_HasSSE","","",null,null],[5,"SDL_HasSSE2","","",null,null],[5,"SDL_HasSSE3","","",null,null],[5,"SDL_HasSSE41","","",null,null],[5,"SDL_HasSSE42","","",null,null],[5,"SDL_HasAVX","","",null,null],[5,"SDL_GetSystemRAM","","",null,null],[0,"filesystem","sdl2_sys","",null,null],[5,"SDL_GetBasePath","sdl2_sys::filesystem","",null,null],[5,"SDL_GetPrefPath","","",null,null],[0,"haptic","sdl2_sys","",null,null],[3,"SDL_HapticDirection","sdl2_sys::haptic","",null,null],[12,"type_","","",5,null],[12,"dir","","",5,null],[3,"SDL_HapticConstant","","",null,null],[12,"type_","","",6,null],[12,"direction","","",6,null],[12,"length","","",6,null],[12,"delay","","",6,null],[12,"button","","",6,null],[12,"interval","","",6,null],[12,"level","","",6,null],[12,"attack_length","","",6,null],[12,"attack_level","","",6,null],[12,"fade_length","","",6,null],[12,"fade_level","","",6,null],[3,"SDL_HapticPeriodic","","",null,null],[12,"type_","","",7,null],[12,"direction","","",7,null],[12,"length","","",7,null],[12,"delay","","",7,null],[12,"button","","",7,null],[12,"interval","","",7,null],[12,"period","","",7,null],[12,"magnitude","","",7,null],[12,"offset","","",7,null],[12,"phase","","",7,null],[12,"attack_length","","",7,null],[12,"attack_level","","",7,null],[12,"fade_length","","",7,null],[12,"fade_level","","",7,null],[3,"SDL_HapticCondition","","",null,null],[12,"type_","","",8,null],[12,"direction","","",8,null],[12,"length","","",8,null],[12,"delay","","",8,null],[12,"button","","",8,null],[12,"interval","","",8,null],[12,"right_sat","","",8,null],[12,"left_sat","","",8,null],[12,"right_coeff","","",8,null],[12,"left_coeff","","",8,null],[12,"deadband","","",8,null],[12,"center","","",8,null],[3,"SDL_HapticRamp","","",null,null],[12,"type_","","",9,null],[12,"length","","",9,null],[12,"delay","","",9,null],[12,"button","","",9,null],[12,"interval","","",9,null],[12,"start","","",9,null],[12,"end","","",9,null],[12,"attack_length","","",9,null],[12,"attack_level","","",9,null],[12,"fade_length","","",9,null],[12,"fade_level","","",9,null],[3,"SDL_HapticLeftRight","","",null,null],[12,"type_","","",10,null],[12,"length","","",10,null],[12,"large_magnitude","","",10,null],[12,"small_magnitude","","",10,null],[3,"SDL_HapticCustom","","",null,null],[12,"type_","","",11,null],[12,"direction","","",11,null],[12,"length","","",11,null],[12,"delay","","",11,null],[12,"button","","",11,null],[12,"interval","","",11,null],[12,"channels","","",11,null],[12,"period","","",11,null],[12,"samples","","",11,null],[12,"data","","",11,null],[12,"attack_length","","",11,null],[12,"attack_level","","",11,null],[12,"fade_length","","",11,null],[12,"fade_level","","",11,null],[3,"SDL_HapticEffect","","",null,null],[12,"data","","",12,null],[5,"SDL_NumHaptics","","",null,null],[5,"SDL_HapticName","","",null,null],[5,"SDL_HapticOpen","","",null,null],[5,"SDL_HapticOpened","","",null,null],[5,"SDL_HapticIndex","","",null,null],[5,"SDL_MouseIsHaptic","","",null,null],[5,"SDL_HapticOpenFromMouse","","",null,null],[5,"SDL_JoystickIsHaptic","","",null,null],[5,"SDL_HapticOpenFromJoystick","","",null,null],[5,"SDL_HapticClose","","",null,null],[5,"SDL_HapticNumEffects","","",null,null],[5,"SDL_HapticNumEffectsPlaying","","",null,null],[5,"SDL_HapticQuery","","",null,null],[5,"SDL_HapticNumAxes","","",null,null],[5,"SDL_HapticEffectSupported","","",null,null],[5,"SDL_HapticNewEffect","","",null,null],[5,"SDL_HapticUpdateEffect","","",null,null],[5,"SDL_HapticRunEffect","","",null,null],[5,"SDL_HapticStopEffect","","",null,null],[5,"SDL_HapticDestroyEffect","","",null,null],[5,"SDL_HapticGetEffectStatus","","",null,null],[5,"SDL_HapticSetGain","","",null,null],[5,"SDL_HapticSetAutocenter","","",null,null],[5,"SDL_HapticPause","","",null,null],[5,"SDL_HapticUnpause","","",null,null],[5,"SDL_HapticStopAll","","",null,null],[5,"SDL_HapticRumbleSupported","","",null,null],[5,"SDL_HapticRumbleInit","","",null,null],[5,"SDL_HapticRumblePlay","","",null,null],[5,"SDL_HapticRumbleStop","","",null,null],[6,"SDL_Haptic","","",null,null],[17,"SDL_HAPTIC_CONSTANT","","",null,null],[17,"SDL_HAPTIC_SINE","","",null,null],[17,"SDL_HAPTIC_LEFTRIGHT","","",null,null],[17,"SDL_HAPTIC_TRIANGLE","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHUP","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHDOWN","","",null,null],[17,"SDL_HAPTIC_RAMP","","",null,null],[17,"SDL_HAPTIC_SPRING","","",null,null],[17,"SDL_HAPTIC_DAMPER","","",null,null],[17,"SDL_HAPTIC_INERTIA","","",null,null],[17,"SDL_HAPTIC_FRICTION","","",null,null],[17,"SDL_HAPTIC_CUSTOM","","",null,null],[17,"SDL_HAPTIC_GAIN","","",null,null],[17,"SDL_HAPTIC_AUTOCENTER","","",null,null],[17,"SDL_HAPTIC_STATUS","","",null,null],[17,"SDL_HAPTIC_PAUSE","","",null,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hapticdirection"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hapticconstant"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hapticperiodic"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hapticcondition"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hapticramp"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hapticleftright"}}],[11,"type_","","",12,null],[11,"constant","","",12,null],[11,"periodic","","",12,null],[11,"condition","","",12,null],[11,"ramp","","",12,null],[11,"left_right","","",12,null],[11,"custom","","",12,null],[0,"gesture","sdl2_sys","",null,null],[5,"SDL_RecordGesture","sdl2_sys::gesture","",null,null],[5,"SDL_SaveAllDollarTemplates","","",null,null],[5,"SDL_SaveDollarTemplate","","",null,null],[5,"SDL_LoadDollarTemplates","","",null,null],[6,"SDL_GestureID","","",null,null],[0,"joystick","sdl2_sys","",null,null],[3,"SDL_JoystickGUID","sdl2_sys::joystick","",null,null],[12,"data","","",13,null],[5,"SDL_NumJoysticks","","",null,null],[5,"SDL_JoystickNameForIndex","","",null,null],[5,"SDL_JoystickOpen","","",null,null],[5,"SDL_JoystickName","","",null,null],[5,"SDL_JoystickGetDeviceGUID","","",null,null],[5,"SDL_JoystickGetGUID","","",null,null],[5,"SDL_JoystickGetGUIDString","","",null,null],[5,"SDL_JoystickGetGUIDFromString","","",null,null],[5,"SDL_JoystickGetAttached","","",null,null],[5,"SDL_JoystickInstanceID","","",null,null],[5,"SDL_JoystickNumAxes","","",null,null],[5,"SDL_JoystickNumBalls","","",null,null],[5,"SDL_JoystickNumHats","","",null,null],[5,"SDL_JoystickNumButtons","","",null,null],[5,"SDL_JoystickUpdate","","",null,null],[5,"SDL_JoystickEventState","","",null,null],[5,"SDL_JoystickGetAxis","","",null,null],[5,"SDL_JoystickGetHat","","",null,null],[5,"SDL_JoystickGetBall","","",null,null],[5,"SDL_JoystickGetButton","","",null,null],[5,"SDL_JoystickClose","","",null,null],[6,"SDL_Joystick","","",null,null],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"sdl_joystickguid"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"sdl_joystickguid"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"sdl_joystickguid"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[0,"keyboard","sdl2_sys","",null,null],[3,"SDL_Keysym","sdl2_sys::keyboard","",null,null],[12,"scancode","","",14,null],[12,"sym","","",14,null],[12,"_mod","","",14,null],[12,"unused","","",14,null],[5,"SDL_GetKeyboardFocus","","",null,null],[5,"SDL_GetKeyboardState","","",null,null],[5,"SDL_GetModState","","",null,null],[5,"SDL_SetModState","","",null,null],[5,"SDL_GetKeyFromScancode","","",null,null],[5,"SDL_GetScancodeFromKey","","",null,null],[5,"SDL_GetScancodeName","","",null,null],[5,"SDL_GetScancodeFromName","","",null,null],[5,"SDL_GetKeyName","","",null,null],[5,"SDL_GetKeyFromName","","",null,null],[5,"SDL_StartTextInput","","",null,null],[5,"SDL_IsTextInputActive","","",null,null],[5,"SDL_StopTextInput","","",null,null],[5,"SDL_SetTextInputRect","","",null,null],[5,"SDL_HasScreenKeyboardSupport","","",null,null],[5,"SDL_IsScreenKeyboardShown","","",null,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"sdl_keysym"}}],[0,"messagebox","sdl2_sys","",null,null],[3,"SDL_MessageBoxButtonData","sdl2_sys::messagebox","",null,null],[12,"flags","","",15,null],[12,"buttonid","","",15,null],[12,"text","","",15,null],[3,"SDL_MessageBoxColor","","",null,null],[12,"r","","",16,null],[12,"g","","",16,null],[12,"b","","",16,null],[3,"SDL_MessageBoxColorScheme","","",null,null],[12,"colors","","",17,null],[3,"SDL_MessageBoxData","","",null,null],[12,"flags","","",18,null],[12,"window","","",18,null],[12,"title","","",18,null],[12,"message","","",18,null],[12,"numbuttons","","",18,null],[12,"buttons","","",18,null],[12,"color_scheme","","",18,null],[4,"SDL_MessageBoxFlags","","",null,null],[13,"SDL_MESSAGEBOX_ERROR","","",19,null],[13,"SDL_MESSAGEBOX_WARNING","","",19,null],[13,"SDL_MESSAGEBOX_INFORMATION","","",19,null],[4,"SDL_MessageBoxButtonFlags","","",null,null],[13,"SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","",20,null],[13,"SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","",20,null],[4,"SDL_MessageBoxColorType","","",null,null],[13,"SDL_MESSAGEBOX_COLOR_BACKGROUND","","",21,null],[13,"SDL_MESSAGEBOX_COLOR_TEXT","","",21,null],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BORDER","","",21,null],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND","","",21,null],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED","","",21,null],[13,"SDL_MESSAGEBOX_COLOR_MAX","","",21,null],[5,"SDL_ShowMessageBox","","",null,null],[5,"SDL_ShowSimpleMessageBox","","",null,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxflags"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxbuttonflags"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxbuttondata"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxcolor"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxcolortype"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxcolorscheme"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sdl_messageboxdata"}}],[0,"rect","sdl2_sys","",null,null],[3,"SDL_Point","sdl2_sys::rect","A structure that defines a two dimensional point.",null,null],[12,"x","","",22,null],[12,"y","","",22,null],[3,"SDL_Rect","","A structure that defines a rectangle, with the origin at the upper left.",null,null],[12,"x","","",23,null],[12,"y","","",23,null],[12,"w","","",23,null],[12,"h","","",23,null],[5,"SDL_HasIntersection","","",null,null],[5,"SDL_IntersectRect","","",null,null],[5,"SDL_UnionRect","","",null,null],[5,"SDL_EnclosePoints","","",null,null],[5,"SDL_IntersectRectAndLine","","",null,null],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sdl_point"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"sdl_point"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"sdl_point"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sdl_rect"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"sdl_rect"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"sdl_rect"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",23,null],[0,"pixels","sdl2_sys","",null,null],[3,"SDL_Color","sdl2_sys::pixels","",null,null],[12,"r","","",24,null],[12,"g","","",24,null],[12,"b","","",24,null],[12,"a","","",24,null],[3,"SDL_Palette","","",null,null],[12,"ncolors","","",25,null],[12,"colors","","",25,null],[12,"version","","",25,null],[12,"refcount","","",25,null],[3,"SDL_PixelFormat","","",null,null],[12,"format","","",26,null],[12,"palette","","",26,null],[12,"BitsPerPixel","","",26,null],[12,"BytesPerPixel","","",26,null],[12,"padding","","",26,null],[12,"Rmask","","",26,null],[12,"Gmask","","",26,null],[12,"Bmask","","",26,null],[12,"Amask","","",26,null],[12,"Rloss","","",26,null],[12,"Gloss","","",26,null],[12,"Bloss","","",26,null],[12,"Aloss","","",26,null],[12,"Rshift","","",26,null],[12,"Gshift","","",26,null],[12,"Bshift","","",26,null],[12,"Ashift","","",26,null],[12,"refcount","","",26,null],[12,"next","","",26,null],[5,"SDL_GetRGB","","",null,null],[5,"SDL_GetRGBA","","",null,null],[5,"SDL_MapRGB","","",null,null],[5,"SDL_MapRGBA","","",null,null],[5,"SDL_PixelFormatEnumToMasks","","",null,null],[5,"SDL_MasksToPixelFormatEnum","","",null,null],[5,"SDL_AllocPalette","","",null,null],[5,"SDL_FreePalette","","",null,null],[5,"SDL_SetPaletteColors","","",null,null],[6,"SDL_PixelFormatEnum","","",null,null],[17,"SDL_PIXELFORMAT_UNKNOWN","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX8","","",null,null],[17,"SDL_PIXELFORMAT_RGB332","","",null,null],[17,"SDL_PIXELFORMAT_RGB444","","",null,null],[17,"SDL_PIXELFORMAT_RGB555","","",null,null],[17,"SDL_PIXELFORMAT_BGR555","","",null,null],[17,"SDL_PIXELFORMAT_ARGB4444","","",null,null],[17,"SDL_PIXELFORMAT_RGBA4444","","",null,null],[17,"SDL_PIXELFORMAT_ABGR4444","","",null,null],[17,"SDL_PIXELFORMAT_BGRA4444","","",null,null],[17,"SDL_PIXELFORMAT_ARGB1555","","",null,null],[17,"SDL_PIXELFORMAT_RGBA5551","","",null,null],[17,"SDL_PIXELFORMAT_ABGR1555","","",null,null],[17,"SDL_PIXELFORMAT_BGRA5551","","",null,null],[17,"SDL_PIXELFORMAT_RGB565","","",null,null],[17,"SDL_PIXELFORMAT_BGR565","","",null,null],[17,"SDL_PIXELFORMAT_RGB24","","",null,null],[17,"SDL_PIXELFORMAT_BGR24","","",null,null],[17,"SDL_PIXELFORMAT_RGB888","","",null,null],[17,"SDL_PIXELFORMAT_RGBX8888","","",null,null],[17,"SDL_PIXELFORMAT_BGR888","","",null,null],[17,"SDL_PIXELFORMAT_BGRX8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB8888","","",null,null],[17,"SDL_PIXELFORMAT_RGBA8888","","",null,null],[17,"SDL_PIXELFORMAT_ABGR8888","","",null,null],[17,"SDL_PIXELFORMAT_BGRA8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB2101010","","",null,null],[17,"SDL_PIXELFORMAT_YV12","","",null,null],[17,"SDL_PIXELFORMAT_IYUV","","",null,null],[17,"SDL_PIXELFORMAT_YUY2","","",null,null],[17,"SDL_PIXELFORMAT_UYVY","","",null,null],[17,"SDL_PIXELFORMAT_YVYU","","",null,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sdl_color"}}],[0,"render","sdl2_sys","",null,null],[3,"SDL_RendererInfo","sdl2_sys::render","",null,null],[12,"name","","",27,null],[12,"flags","","",27,null],[12,"num_texture_formats","","",27,null],[12,"texture_formats","","",27,null],[12,"max_texture_width","","",27,null],[12,"max_texture_height","","",27,null],[3,"SDL_Renderer","","",null,null],[3,"SDL_Texture","","",null,null],[5,"SDL_GetNumRenderDrivers","","",null,null],[5,"SDL_GetRenderDriverInfo","","",null,null],[5,"SDL_CreateWindowAndRenderer","","",null,null],[5,"SDL_CreateRenderer","","",null,null],[5,"SDL_CreateSoftwareRenderer","","",null,null],[5,"SDL_GetRenderer","","",null,null],[5,"SDL_GetRendererInfo","","",null,null],[5,"SDL_GetRendererOutputSize","","",null,null],[5,"SDL_CreateTexture","","",null,null],[5,"SDL_CreateTextureFromSurface","","",null,null],[5,"SDL_QueryTexture","","",null,null],[5,"SDL_SetTextureColorMod","","",null,null],[5,"SDL_GetTextureColorMod","","",null,null],[5,"SDL_SetTextureAlphaMod","","",null,null],[5,"SDL_GetTextureAlphaMod","","",null,null],[5,"SDL_SetTextureBlendMode","","",null,null],[5,"SDL_GetTextureBlendMode","","",null,null],[5,"SDL_UpdateTexture","","",null,null],[5,"SDL_UpdateYUVTexture","","",null,null],[5,"SDL_LockTexture","","",null,null],[5,"SDL_UnlockTexture","","",null,null],[5,"SDL_RenderTargetSupported","","",null,null],[5,"SDL_SetRenderTarget","","",null,null],[5,"SDL_GetRenderTarget","","",null,null],[5,"SDL_RenderSetLogicalSize","","",null,null],[5,"SDL_RenderGetLogicalSize","","",null,null],[5,"SDL_RenderSetViewport","","",null,null],[5,"SDL_RenderGetViewport","","",null,null],[5,"SDL_RenderSetClipRect","","",null,null],[5,"SDL_RenderGetClipRect","","",null,null],[5,"SDL_RenderSetScale","","",null,null],[5,"SDL_RenderGetScale","","",null,null],[5,"SDL_SetRenderDrawColor","","",null,null],[5,"SDL_GetRenderDrawColor","","",null,null],[5,"SDL_SetRenderDrawBlendMode","","",null,null],[5,"SDL_GetRenderDrawBlendMode","","",null,null],[5,"SDL_RenderClear","","",null,null],[5,"SDL_RenderDrawPoint","","",null,null],[5,"SDL_RenderDrawPoints","","",null,null],[5,"SDL_RenderDrawLine","","",null,null],[5,"SDL_RenderDrawLines","","",null,null],[5,"SDL_RenderDrawRect","","",null,null],[5,"SDL_RenderDrawRects","","",null,null],[5,"SDL_RenderFillRect","","",null,null],[5,"SDL_RenderFillRects","","",null,null],[5,"SDL_RenderCopy","","",null,null],[5,"SDL_RenderCopyEx","","",null,null],[5,"SDL_RenderReadPixels","","",null,null],[5,"SDL_RenderPresent","","",null,null],[5,"SDL_DestroyTexture","","",null,null],[5,"SDL_DestroyRenderer","","",null,null],[5,"SDL_GL_BindTexture","","",null,null],[5,"SDL_GL_UnbindTexture","","",null,null],[6,"SDL_RendererFlags","","",null,null],[6,"SDL_TextureAccess","","",null,null],[6,"SDL_TextureModulate","","",null,null],[6,"SDL_RendererFlip","","",null,null],[6,"SDL_BlendMode","","",null,null],[17,"SDL_RENDERER_SOFTWARE","","",null,null],[17,"SDL_RENDERER_ACCELERATED","","",null,null],[17,"SDL_RENDERER_PRESENTVSYNC","","",null,null],[17,"SDL_RENDERER_TARGETTEXTURE","","",null,null],[17,"SDL_TEXTUREACCESS_STATIC","","",null,null],[17,"SDL_TEXTUREACCESS_STREAMING","","",null,null],[17,"SDL_TEXTUREACCESS_TARGET","","",null,null],[17,"SDL_TEXTUREMODULATE_NONE","","",null,null],[17,"SDL_TEXTUREMODULATE_COLOR","","",null,null],[17,"SDL_TEXTUREMODULATE_ALPHA","","",null,null],[17,"SDL_FLIP_NONE","","",null,null],[17,"SDL_FLIP_HORIZONTAL","","",null,null],[17,"SDL_FLIP_VERTICAL","","",null,null],[17,"SDL_BLENDMODE_NONE","","",null,null],[17,"SDL_BLENDMODE_BLEND","","",null,null],[17,"SDL_BLENDMODE_ADD","","",null,null],[17,"SDL_BLENDMODE_MOD","","",null,null],[0,"rwops","sdl2_sys","",null,null],[3,"SDL_RWops","sdl2_sys::rwops","",null,null],[12,"size","","",28,null],[12,"seek","","",28,null],[12,"read","","",28,null],[12,"write","","",28,null],[12,"close","","",28,null],[12,"type_","","",28,null],[5,"SDL_RWFromFile","","",null,null],[5,"SDL_RWFromFP","","",null,null],[5,"SDL_RWFromMem","","",null,null],[5,"SDL_RWFromConstMem","","",null,null],[5,"SDL_AllocRW","","",null,null],[5,"SDL_FreeRW","","",null,null],[7,"RW_SEEK_SET","","",null,null],[7,"RW_SEEK_CUR","","",null,null],[7,"RW_SEEK_END","","",null,null],[0,"surface","sdl2_sys","",null,null],[3,"SDL_BlitMap","sdl2_sys::surface","",null,null],[3,"SDL_Surface","","",null,null],[12,"flags","","",29,null],[12,"format","","",29,null],[12,"w","","",29,null],[12,"h","","",29,null],[12,"pitch","","",29,null],[12,"pixels","","",29,null],[12,"userdata","","",29,null],[12,"locked","","",29,null],[12,"lock_data","","",29,null],[12,"clip_rect","","",29,null],[12,"map","","",29,null],[12,"refcount","","",29,null],[5,"SDL_CreateRGBSurface","","",null,null],[5,"SDL_CreateRGBSurfaceFrom","","",null,null],[5,"SDL_FreeSurface","","",null,null],[5,"SDL_SetSurfacePalette","","",null,null],[5,"SDL_LockSurface","","",null,null],[5,"SDL_UnlockSurface","","",null,null],[5,"SDL_LoadBMP_RW","","",null,null],[5,"SDL_SaveBMP_RW","","",null,null],[5,"SDL_SetSurfaceRLE","","",null,null],[5,"SDL_SetColorKey","","",null,null],[5,"SDL_GetColorKey","","",null,null],[5,"SDL_SetSurfaceColorMod","","",null,null],[5,"SDL_GetSurfaceColorMod","","",null,null],[5,"SDL_SetSurfaceAlphaMod","","",null,null],[5,"SDL_GetSurfaceAlphaMod","","",null,null],[5,"SDL_SetSurfaceBlendMode","","",null,null],[5,"SDL_GetSurfaceBlendMode","","",null,null],[5,"SDL_SetClipRect","","",null,null],[5,"SDL_GetClipRect","","",null,null],[5,"SDL_ConvertSurface","","",null,null],[5,"SDL_ConvertSurfaceFormat","","",null,null],[5,"SDL_ConvertPixels","","",null,null],[5,"SDL_FillRect","","",null,null],[5,"SDL_FillRects","","",null,null],[5,"SDL_UpperBlit","","",null,null],[5,"SDL_LowerBlit","","",null,null],[5,"SDL_SoftStretch","","",null,null],[5,"SDL_UpperBlitScaled","","",null,null],[5,"SDL_LowerBlitScaled","","",null,null],[6,"SDL_SurfaceFlag","","",null,null],[17,"SDL_SWSURFACE","","",null,null],[17,"SDL_PREALLOC","","",null,null],[17,"SDL_RLEACCEL","","",null,null],[17,"SDL_DONTFREE","","",null,null],[0,"touch","sdl2_sys","",null,null],[3,"Finger","sdl2_sys::touch","",null,null],[5,"SDL_GetNumTouchDevices","","",null,null],[5,"SDL_GetTouchDevice","","",null,null],[5,"SDL_GetNumTouchFingers","","",null,null],[5,"SDL_GetTouchFinger","","",null,null],[6,"SDL_TouchID","","",null,null],[6,"SDL_FingerID","","",null,null],[6,"SDL_Finger","","",null,null],[6,"TouchDevice","","",null,null],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"finger"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"finger"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"finger"}}],[0,"video","sdl2_sys","",null,null],[3,"SDL_Window","sdl2_sys::video","",null,null],[3,"SDL_DisplayMode","","",null,null],[12,"format","","",31,null],[12,"w","","",31,null],[12,"h","","",31,null],[12,"refresh_rate","","",31,null],[12,"driverdata","","",31,null],[4,"SDL_WindowFlags","","",null,null],[13,"SDL_WINDOW_FULLSCREEN","","",32,null],[13,"SDL_WINDOW_OPENGL","","",32,null],[13,"SDL_WINDOW_SHOWN","","",32,null],[13,"SDL_WINDOW_HIDDEN","","",32,null],[13,"SDL_WINDOW_BORDERLESS","","",32,null],[13,"SDL_WINDOW_RESIZABLE","","",32,null],[13,"SDL_WINDOW_MINIMIZED","","",32,null],[13,"SDL_WINDOW_MAXIMIZED","","",32,null],[13,"SDL_WINDOW_INPUT_GRABBED","","",32,null],[13,"SDL_WINDOW_INPUT_FOCUS","","",32,null],[13,"SDL_WINDOW_MOUSE_FOCUS","","",32,null],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",32,null],[13,"SDL_WINDOW_FOREIGN","","",32,null],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","",32,null],[4,"SDL_WindowEventID","","",null,null],[13,"SDL_WINDOWEVENT_NONE","","",33,null],[13,"SDL_WINDOWEVENT_SHOWN","","",33,null],[13,"SDL_WINDOWEVENT_HIDDEN","","",33,null],[13,"SDL_WINDOWEVENT_EXPOSED","","",33,null],[13,"SDL_WINDOWEVENT_MOVED","","",33,null],[13,"SDL_WINDOWEVENT_RESIZED","","",33,null],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","",33,null],[13,"SDL_WINDOWEVENT_MINIMIZED","","",33,null],[13,"SDL_WINDOWEVENT_MAXIMIZED","","",33,null],[13,"SDL_WINDOWEVENT_RESTORED","","",33,null],[13,"SDL_WINDOWEVENT_ENTER","","",33,null],[13,"SDL_WINDOWEVENT_LEAVE","","",33,null],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","",33,null],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","",33,null],[13,"SDL_WINDOWEVENT_CLOSE","","",33,null],[4,"SDL_GLattr","","",null,null],[13,"SDL_GL_RED_SIZE","","",34,null],[13,"SDL_GL_GREEN_SIZE","","",34,null],[13,"SDL_GL_BLUE_SIZE","","",34,null],[13,"SDL_GL_ALPHA_SIZE","","",34,null],[13,"SDL_GL_BUFFER_SIZE","","",34,null],[13,"SDL_GL_DOUBLEBUFFER","","",34,null],[13,"SDL_GL_DEPTH_SIZE","","",34,null],[13,"SDL_GL_STENCIL_SIZE","","",34,null],[13,"SDL_GL_ACCUM_RED_SIZE","","",34,null],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",34,null],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",34,null],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",34,null],[13,"SDL_GL_STEREO","","",34,null],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",34,null],[13,"SDL_GL_MULTISAMPLESAMPLES","","",34,null],[13,"SDL_GL_ACCELERATED_VISUAL","","",34,null],[13,"SDL_GL_RETAINED_BACKING","","",34,null],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",34,null],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",34,null],[13,"SDL_GL_CONTEXT_EGL","","",34,null],[13,"SDL_GL_CONTEXT_FLAGS","","",34,null],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",34,null],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",34,null],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",34,null],[4,"SDL_GLprofile","","",null,null],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",35,null],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",35,null],[13,"SDL_GL_CONTEXT_PROFILE_ES","","",35,null],[5,"SDL_GetNumVideoDrivers","","",null,null],[5,"SDL_GetVideoDriver","","",null,null],[5,"SDL_VideoInit","","",null,null],[5,"SDL_VideoQuit","","",null,null],[5,"SDL_GetCurrentVideoDriver","","",null,null],[5,"SDL_GetNumVideoDisplays","","",null,null],[5,"SDL_GetDisplayName","","",null,null],[5,"SDL_GetDisplayBounds","","",null,null],[5,"SDL_GetNumDisplayModes","","",null,null],[5,"SDL_GetDisplayMode","","",null,null],[5,"SDL_GetDesktopDisplayMode","","",null,null],[5,"SDL_GetCurrentDisplayMode","","",null,null],[5,"SDL_GetClosestDisplayMode","","",null,null],[5,"SDL_GetWindowDisplayIndex","","",null,null],[5,"SDL_SetWindowDisplayMode","","",null,null],[5,"SDL_GetWindowDisplayMode","","",null,null],[5,"SDL_GetDisplayDPI","","",null,null],[5,"SDL_GetWindowPixelFormat","","",null,null],[5,"SDL_CreateWindow","","",null,null],[5,"SDL_CreateWindowFrom","","",null,null],[5,"SDL_GetWindowID","","",null,null],[5,"SDL_GetWindowFromID","","",null,null],[5,"SDL_GetWindowFlags","","",null,null],[5,"SDL_SetWindowTitle","","",null,null],[5,"SDL_GetWindowTitle","","",null,null],[5,"SDL_SetWindowIcon","","",null,null],[5,"SDL_SetWindowData","","",null,null],[5,"SDL_GetWindowData","","",null,null],[5,"SDL_SetWindowPosition","","",null,null],[5,"SDL_GetWindowPosition","","",null,null],[5,"SDL_SetWindowSize","","",null,null],[5,"SDL_GetWindowSize","","",null,null],[5,"SDL_SetWindowMinimumSize","","",null,null],[5,"SDL_GetWindowMinimumSize","","",null,null],[5,"SDL_SetWindowMaximumSize","","",null,null],[5,"SDL_GetWindowMaximumSize","","",null,null],[5,"SDL_SetWindowBordered","","",null,null],[5,"SDL_ShowWindow","","",null,null],[5,"SDL_HideWindow","","",null,null],[5,"SDL_RaiseWindow","","",null,null],[5,"SDL_MaximizeWindow","","",null,null],[5,"SDL_MinimizeWindow","","",null,null],[5,"SDL_RestoreWindow","","",null,null],[5,"SDL_SetWindowFullscreen","","",null,null],[5,"SDL_GetWindowSurface","","",null,null],[5,"SDL_UpdateWindowSurface","","",null,null],[5,"SDL_UpdateWindowSurfaceRects","","",null,null],[5,"SDL_SetWindowGrab","","",null,null],[5,"SDL_GetWindowGrab","","",null,null],[5,"SDL_SetWindowBrightness","","",null,null],[5,"SDL_GetWindowBrightness","","",null,null],[5,"SDL_SetWindowGammaRamp","","",null,null],[5,"SDL_GetWindowGammaRamp","","",null,null],[5,"SDL_DestroyWindow","","",null,null],[5,"SDL_IsScreenSaverEnabled","","",null,null],[5,"SDL_EnableScreenSaver","","",null,null],[5,"SDL_DisableScreenSaver","","",null,null],[5,"SDL_GL_GetDrawableSize","","",null,null],[5,"SDL_GL_LoadLibrary","","",null,null],[5,"SDL_GL_GetProcAddress","","",null,null],[5,"SDL_GL_UnloadLibrary","","",null,null],[5,"SDL_GL_ExtensionSupported","","",null,null],[5,"SDL_GL_SetAttribute","","",null,null],[5,"SDL_GL_GetAttribute","","",null,null],[5,"SDL_GL_CreateContext","","",null,null],[5,"SDL_GL_MakeCurrent","","",null,null],[5,"SDL_GL_GetCurrentWindow","","",null,null],[5,"SDL_GL_GetCurrentContext","","",null,null],[5,"SDL_GL_SetSwapInterval","","",null,null],[5,"SDL_GL_GetSwapInterval","","",null,null],[5,"SDL_GL_SwapWindow","","",null,null],[5,"SDL_GL_DeleteContext","","",null,null],[6,"SDL_WindowPos","","",null,null],[6,"SDL_GLContext","","",null,null],[17,"SDL_WINDOWPOS_CENTERED","","",null,null],[17,"SDL_WINDOWPOS_UNDEFINED","","",null,null],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"sdl_windowflags"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"sdl_windoweventid"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sdl_glattr"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"sdl_glprofile"}}],[0,"mouse","sdl2_sys","",null,null],[5,"SDL_GetMouseFocus","sdl2_sys::mouse","",null,null],[5,"SDL_GetMouseState","","",null,null],[5,"SDL_GetRelativeMouseState","","",null,null],[5,"SDL_WarpMouseInWindow","","",null,null],[5,"SDL_SetRelativeMouseMode","","",null,null],[5,"SDL_GetRelativeMouseMode","","",null,null],[5,"SDL_CreateCursor","","",null,null],[5,"SDL_CreateColorCursor","","",null,null],[5,"SDL_CreateSystemCursor","","",null,null],[5,"SDL_SetCursor","","",null,null],[5,"SDL_GetCursor","","",null,null],[5,"SDL_GetDefaultCursor","","",null,null],[5,"SDL_FreeCursor","","",null,null],[5,"SDL_ShowCursor","","",null,null],[6,"SDL_Cursor","","",null,null],[6,"SDL_SystemCursor","","",null,null],[17,"SDL_SYSTEM_CURSOR_ARROW","","",null,null],[17,"SDL_SYSTEM_CURSOR_IBEAM","","",null,null],[17,"SDL_SYSTEM_CURSOR_WAIT","","",null,null],[17,"SDL_SYSTEM_CURSOR_CROSSHAIR","","",null,null],[17,"SDL_SYSTEM_CURSOR_WAITARROW","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENWSE","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENESW","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZEWE","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENS","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZEALL","","",null,null],[17,"SDL_SYSTEM_CURSOR_NO","","",null,null],[17,"SDL_SYSTEM_CURSOR_HAND","","",null,null],[17,"SDL_NUM_SYSTEM_CURSORS","","",null,null],[17,"SDL_BUTTON_UNKNOWN","","",null,null],[17,"SDL_BUTTON_LEFT","","",null,null],[17,"SDL_BUTTON_MIDDLE","","",null,null],[17,"SDL_BUTTON_RIGHT","","",null,null],[17,"SDL_BUTTON_X1","","",null,null],[17,"SDL_BUTTON_X2","","",null,null],[17,"SDL_BUTTON_LMASK","","",null,null],[17,"SDL_BUTTON_MMASK","","",null,null],[17,"SDL_BUTTON_RMASK","","",null,null],[17,"SDL_BUTTON_X1MASK","","",null,null],[17,"SDL_BUTTON_X2MASK","","",null,null],[0,"sdl","sdl2_sys","",null,null],[5,"SDL_ClearError","sdl2_sys::sdl","",null,null],[5,"SDL_Error","","",null,null],[5,"SDL_SetError","","",null,null],[5,"SDL_GetError","","",null,null],[5,"SDL_Init","","",null,null],[5,"SDL_InitSubSystem","","",null,null],[5,"SDL_QuitSubSystem","","",null,null],[5,"SDL_WasInit","","",null,null],[5,"SDL_Quit","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_errorcode","","",null,null],[6,"SDL_InitFlag","","",null,null],[17,"SDL_ENOMEM","","",null,null],[17,"SDL_EFREAD","","",null,null],[17,"SDL_EFWRITE","","",null,null],[17,"SDL_EFSEEK","","",null,null],[17,"SDL_UNSUPPORTED","","",null,null],[17,"SDL_LASTERROR","","",null,null],[17,"SDL_INIT_TIMER","","",null,null],[17,"SDL_INIT_AUDIO","","",null,null],[17,"SDL_INIT_VIDEO","","",null,null],[17,"SDL_INIT_JOYSTICK","","",null,null],[17,"SDL_INIT_HAPTIC","","",null,null],[17,"SDL_INIT_GAMECONTROLLER","","",null,null],[17,"SDL_INIT_EVENTS","","",null,null],[17,"SDL_INIT_NOPARACHUTE","","",null,null],[17,"SDL_INIT_EVERYTHING","","",null,null],[0,"timer","sdl2_sys","",null,null],[5,"SDL_GetTicks","sdl2_sys::timer","",null,null],[5,"SDL_GetPerformanceCounter","","",null,null],[5,"SDL_GetPerformanceFrequency","","",null,null],[5,"SDL_Delay","","",null,null],[5,"SDL_AddTimer","","",null,null],[5,"SDL_RemoveTimer","","",null,null],[6,"SDL_TimerCallback","","",null,null],[6,"SDL_TimerID","","",null,null],[0,"hint","sdl2_sys","",null,null],[4,"SDL_HintPriority","sdl2_sys::hint","",null,null],[13,"SDL_HINT_DEFAULT","","",36,null],[13,"SDL_HINT_NORMAL","","",36,null],[13,"SDL_HINT_OVERRIDE","","",36,null],[5,"SDL_SetHint","","",null,null],[5,"SDL_GetHint","","",null,null],[5,"SDL_SetHintWithPriority","","",null,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"sdl_hintpriority"}}],[0,"log","sdl2_sys","",null,null],[4,"SDL_LOG_CATEGORY","sdl2_sys::log","\\brief The predefined log categories",null,null],[13,"APPLICATION","","",37,null],[13,"ERROR","","",37,null],[13,"ASSERT","","",37,null],[13,"SYSTEM","","",37,null],[13,"AUDIO","","",37,null],[13,"VIDEO","","",37,null],[13,"RENDER","","",37,null],[13,"INPUT","","",37,null],[13,"TEST","","",37,null],[13,"RESERVED1","","",37,null],[13,"RESERVED2","","",37,null],[13,"RESERVED3","","",37,null],[13,"RESERVED4","","",37,null],[13,"RESERVED5","","",37,null],[13,"RESERVED6","","",37,null],[13,"RESERVED7","","",37,null],[13,"RESERVED8","","",37,null],[13,"RESERVED9","","",37,null],[13,"RESERVED10","","",37,null],[13,"CUSTOM","","",37,null],[4,"SDL_LogPriority","","\\brief The predefined log priorities",null,null],[13,"SDL_LOG_PRIORITY_VERBOSE","","",38,null],[13,"SDL_LOG_PRIORITY_DEBUG","","",38,null],[13,"SDL_LOG_PRIORITY_INFO","","",38,null],[13,"SDL_LOG_PRIORITY_WARN","","",38,null],[13,"SDL_LOG_PRIORITY_ERROR","","",38,null],[13,"SDL_LOG_PRIORITY_CRITICAL","","",38,null],[13,"SDL_NUM_LOG_PRIORITIES","","",38,null],[5,"SDL_LogSetAllPriority","","\\brief Set the priority of all log categories",null,null],[5,"SDL_LogSetPriority","","\\brief Set the priority of a particular log category",null,null],[5,"SDL_LogGetPriority","","\\brief Get the priority of a particular log category",null,null],[5,"SDL_LogResetPriorities","","\\brief Reset all priorities to default.",null,null],[5,"SDL_Log","","\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION and SDL_LOG_PRIORITY_INFO",null,null],[5,"SDL_LogVerbose","","\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE",null,null],[5,"SDL_LogDebug","","\\brief Log a message with SDL_LOG_PRIORITY_DEBUG",null,null],[5,"SDL_LogInfo","","\\brief Log a message with SDL_LOG_PRIORITY_INFO",null,null],[5,"SDL_LogWarn","","\\brief Log a message with SDL_LOG_PRIORITY_WARN",null,null],[5,"SDL_LogError","","\\brief Log a message with SDL_LOG_PRIORITY_ERROR",null,null],[5,"SDL_LogCritical","","\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL",null,null],[5,"SDL_LogMessage","","\\brief Log a message with the specified category and priority.",null,null],[5,"SDL_LogGetOutputFunction","","\\brief Get the current log output function.",null,null],[5,"SDL_LogSetOutputFunction","","\\brief This function allows you to replace the default log output function with one of your own.",null,null],[6,"SDL_LogOutputFunction","","\\brief The prototype for the log output function",null,null],[17,"SDL_LOG_CATEGORY_APPLICATION","","",null,null],[17,"SDL_LOG_CATEGORY_ERROR","","",null,null],[17,"SDL_LOG_CATEGORY_ASSERT","","",null,null],[17,"SDL_LOG_CATEGORY_SYSTEM","","",null,null],[17,"SDL_LOG_CATEGORY_AUDIO","","",null,null],[17,"SDL_LOG_CATEGORY_VIDEO","","",null,null],[17,"SDL_LOG_CATEGORY_RENDER","","",null,null],[17,"SDL_LOG_CATEGORY_INPUT","","",null,null],[17,"SDL_LOG_CATEGORY_TEST","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED1","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED2","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED3","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED4","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED5","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED6","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED7","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED8","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED9","","",null,null],[17,"SDL_LOG_CATEGORY_RESERVED10","","",null,null],[17,"SDL_LOG_CATEGORY_CUSTOM","","",null,null],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"sdl_log_category"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"sdl_log_category"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"sdl_logpriority"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"sdl_logpriority"}],"output":{"name":"bool"}}],[11,"hash","","",38,null]],"paths":[[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[3,"SDL_GameControllerButtonBind"],[3,"SDL_GameControllerButtonBindData"],[3,"SDL_GameControllerButtonBindDataHat"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[3,"SDL_HapticEffect"],[3,"SDL_JoystickGUID"],[3,"SDL_Keysym"],[3,"SDL_MessageBoxButtonData"],[3,"SDL_MessageBoxColor"],[3,"SDL_MessageBoxColorScheme"],[3,"SDL_MessageBoxData"],[4,"SDL_MessageBoxFlags"],[4,"SDL_MessageBoxButtonFlags"],[4,"SDL_MessageBoxColorType"],[3,"SDL_Point"],[3,"SDL_Rect"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_RendererInfo"],[3,"SDL_RWops"],[3,"SDL_Surface"],[3,"Finger"],[3,"SDL_DisplayMode"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_HintPriority"],[4,"SDL_LOG_CATEGORY"],[4,"SDL_LogPriority"]]};
initSearch(searchIndex);
